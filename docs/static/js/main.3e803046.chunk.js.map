{"version":3,"sources":["reducers/containers.ts","reducers/messages.ts","reducers/modals.ts","reducers/player.ts","reducers/queue.ts","reducers/rooms.ts","reducers/tracks.ts","reducers/users.ts","utils/users.ts","reducers/index.ts","components/Common/Icon.tsx","components/Common/IconButton.tsx","utils/clipboard.ts","components/Room/Head.tsx","selectors/rooms.ts","actions/index.ts","actions/modals.ts","actions/messages.ts","utils/messages.ts","config/firebase.ts","utils/index.ts","utils/firebase.ts","actions/queue.ts","actions/tracks.ts","actions/containers.ts","utils/history.ts","actions/rooms.ts","containers/Room/Head.ts","components/Room/Cover.tsx","components/Room/Medias.tsx","components/Room/QueueItem.tsx","components/Room/Queue.tsx","selectors/tracks.ts","utils/colorpicker.ts","actions/player.ts","containers/Room/Queue.ts","components/Room/Progress.tsx","containers/Room/Progress.ts","components/Room/Controls.tsx","containers/Room/Controls.ts","components/Room/index.tsx","containers/Room/index.ts","components/Splash/index.tsx","selectors/users.ts","actions/users.ts","containers/Splash/index.ts","components/Modals/Modal.tsx","containers/Modals/Modal.ts","components/Modals/FormModal.tsx","components/Modals/ConfirmModal.tsx","containers/Modals/ConfirmModal.ts","components/Users/ConnectUserModal.tsx","containers/Users/ConnectUserModal.ts","components/Modals/SecretField.tsx","containers/Modals/SecretField.ts","components/Room/CreateRoomModal.tsx","containers/Room/CreateRoomModal.ts","components/Users/CreateUserModal.tsx","containers/Users/CreateUserModal.ts","utils/deezer.ts","components/Room/SearchResultCategory.tsx","components/Room/SearchModal.tsx","containers/Room/SearchModal.ts","components/Room/UnlockRoomModal.tsx","containers/Room/UnlockRoomModal.ts","components/Modals/index.tsx","containers/Modals/index.ts","components/App/Messages.tsx","selectors/messages.ts","containers/App/Messages.ts","components/App/index.tsx","containers/App/index.ts","utils/player.ts","locales/en.ts","locales/fr.ts","utils/i18n.ts","index.tsx"],"names":["INITIAL_STATE","fetching","error","containers","initialState","stack","playing","track_percent","position","trackIds","room","room_access","id","secret","room_color","fg","r","g","b","bg","room_info","tracks","user","user_access","res","s","localStorage","getItem","d","JSON","parse","atob","i","console","debug","err","loadUserAccess","user_info","rootReducer","combineReducers","state","action","type","payload","copy","container","messages","filter","other","modals","pop","player","queue","rooms","info","track","users","setItem","btoa","stringify","saveUserAccess","Icon","Component","render","this","props","className","color","icon","size","title","classNames","name","style","LoadingIcon","IconButton","disabled","displayTitle","kind","onClick","aria-label","clickable","_CancelButton","t","CancelButton","withTranslation","copyToClipboard","value","a","Promise","resolve","elem","document","createElement","setAttribute","left","body","appendChild","selection","getSelection","selected","rangeCount","getRangeAt","select","execCommand","removeAllRanges","addRange","removeChild","Head","locked","onUnlock","onLock","onCopyLink","onMessage","location","href","split","onConfirm","extractRoom","isRoomLoaded","isRoomLocked","createAction","openModal","prereq","popModal","confirmModal","question","onConfirmed","onCanceled","window","confirm","MESSAGE_ID_GENERATOR","displayMessage","text","duration","dispatch","stamp","Date","getTime","setTimeout","removeMessage","displayError","response","data","message","config","databaseURL","process","firebaseApp","firebase","firebaseConfig","firebaseDatabase","MEMBERS","ref","ROOMS","USERS","FirebaseRoom","_room","child","_info","_members","_secret","_values","queue_position","timestamp","getInfo","isLocked","setSecret","newSecret","wait","reject","once","snapshot","newValues","val","Error","subscribeInfo","cb","on","subscribeMembers","cbAdded","cbRemoved","unsubscribeInfo","off","unsubscribeMembers","update","set","ServerValue","TIMESTAMP","FirebaseUser","_user","_membership","online","room_id","status","installDisconnect","onDisconnect","cancel","enter","remove","exit","setQueue","clearQueue","getState","lockRoom","appendInQueue","length","forEach","index","removeFromQueue","oldIndex","splice","setQueuePosition","newPosition","oldPosition","moveBackward","moveForward","setTracks","onlyUnique","self","indexOf","loadTracks","providerType","enqueue","preview","deezer","previewPlayer","oldTracks","newTrackIds","trackId","newTracks","all","map","loadTrack","find","toString","play","previewTrack","trackType","loadContainer","containerType","containerId","containerTypeId","loadAlbum","loadPlaylist","previewContainer","createHashHistory","setRoom","setRoomAccess","setRoomColor","createRoom","v4","enterRoom","FIREBASE_CB","exitRoom","newRoom","newInfo","Object","entries","sort","track1","track2","Number","history","push","unlockRoom","queueTracks","connect","Cover","playable","image","onPlay","onStop","backgroundImage","_Album","actions","album","cover_small","link","target","rel","artist","Album","_Playlist","playlist","picture_small","Playlist","_Track","Track","QueueItem","onRemove","Queue","loaded","playingIndex","onSearch","key","extractTracks","CACHE","DEFAULT_COLOR","pickColor","url","jimp","resize","getPixelColor","pixel","setPlayerTrackPercent","percent","startPlayer","queuePlayer","PLAYER_TIMER1","PLAYER_TIMER2","_installTimer1","_installTimer2","stopPlayer","_","clearTimeout","stop","stopPreview","_1","_2","_computeNextPosition","queueTrackPosition","nextPosition","playingTrackID","getPlayingTrackID","playingTrackPosition","getPlayingTrackPosition","isPlaying","nextTrackPosition","nextIndex","nextTrack","getPlayingTrackPercent","Progress","max","Controls","onMoveBackward","onMoveForward","tracksCount","onClear","onExit","Room","componentDidMount","onEnter","componentWillUnmount","backgroundColor","withRouter","ownProps","qs","search","substr","match","params","Splash","loggedIn","onCreateRoom","onConnectUser","to","src","height","alt","onDisconnectUser","extractUser","setUser","setUserAccess","createUser","connectUser","disconnectUser","newUser","reconnectUser","Modal","children","renderFoot","onClose","onPop","has_prev_modal","onSubmit","hidden","event","preventDefault","FormModal","renderButtons","ConfirmModal","onCancel","ConnectUserModal","idRef","createRef","onConnect","htmlFor","placeholder","maxLength","minLength","required","onChange","e","setState","onToggle","onError","trim","current","focus","SecretField","label","display","flexDirection","justifyContent","flexGrow","marginRight","onCopyToClipboard","ROOM_COUNTER","CreateRoomModal","nameRef","onCreate","USER_COUNTER","CreateUserModal","DEFAULT_API","asyncJsonp","jsonp","call","path","fullpath","query","encodeURIComponent","load","searchAlbums","searchPlaylists","searchTracks","searchAll","albums","playlists","DeezerApi","SearchResultCategory","items","slice","item","SearchModal","queryRef","mediaId","mediaType","results","total","renderInputs","renderResults","onSelect","onStartPreview","onStopPreview","UnlockRoomModal","secretRef","Modals","curr_prereq","prev_prereq","addEventListener","onKeyDown","removeEventListener","componentDidUpdate","prevProps","oldPrereq","newPrereq","modal","getModal","in","timeout","unmountOnExit","onClickOverlay","role","onClickWrapper","stopPropagation","onCloseModal","keyCode","Messages","React","renderMessage","extractMessages","m1","m2","App","onReconnect","exact","component","AUDIO_CONTEXT","getContext","AudioContext","webkitAudioContext","decodeAudioData","encodedBuffer","loadAudioBuffer","req","XMLHttpRequest","open","responseType","send","fixAudioContext","context","buffer","createBuffer","source","createBufferSource","destination","start","Player","chainPlay","analyserNode","gainNode","_node","_buffer","_bufferUrl","_sourceNode","_sourceNodeStartTime","_trackId","_trackPosition","getOrCreateNode","createGain","gain","createAnalyser","fftSize","_loadBuffer","trackPosition","trackUrl","offset","loop","loopStart","loopEnd","onended","playbackRate","currentTime","splash","CGU","powered_with","confirm_disconnect","connection","create","disconnect","user_creation","id_is_invalid","id_placeholder","user_id","name_is_invalid","name_placeholder","secret_is_invalid","secret_placeholder","clear","confirm_clear","confirm_exit","confirm_lock","copy_link","empty","key_placeholder","link_copied_to_clipboard","loading","name_placeholderl","room_creation","room_unlocking","unlock","unlocked","medias","by","add","search_placeholder","medias_search","backward","forward","secret_copied_to_clipboard","initLocales","log","i18next","use","initReactI18next","init","fallbackLng","lng","navigator","language","userLanguage","resources","translation","en","fr","interpolation","escapeValue","format","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","withExtraArgument","then","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.3e803046.chunk.js","sourcesContent":["import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { ContainersAction } from \"../actions/containers\";\nimport { Containers } from \"../utils/medias\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  containers: Containers;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  containers: {},\n};\n\n// ------------------------------------------------------------------\n\nexport const containersReducer: Reducer<State, ContainersAction> = (\n  state = INITIAL_STATE,\n  action: ContainersAction\n): State => {\n  switch (action.type) {\n    case \"containers/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null,\n      };\n    case \"containers/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null,\n      };\n    }\n    case \"containers/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    case \"containers/SET_CONTAINERS\": {\n      const copy = { ...state, containers: { ...state.containers } };\n      for (const container of action.payload) {\n        copy.containers[`${container.type}|${container.id}`] = container;\n      }\n      return copy;\n    }\n    case \"containers/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { MessagesAction } from \"../actions/messages\";\nimport { Message } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type State = Message[];\n\nexport const INITIAL_STATE: State = [];\n\n// ------------------------------------------------------------------\n\nexport const messagesReducer: Reducer<State, MessagesAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"message/ADD\":\n      return [action.payload, ...state];\n    case \"message/REMOVE\":\n      return state.filter(other => other.id !== action.payload);\n    case \"message/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { ModalsAction, ModalPrereq } from \"../actions/modals\";\n\n// ------------------------------------------------------------------\n\nexport type ModalsState = {\n  stack: ModalPrereq[];\n};\n\n// ------------------------------------------------------------------\n\nexport const initialState: ModalsState = {\n  stack: []\n};\n\n// ------------------------------------------------------------------\n\nexport const modalsReducer: Reducer<ModalsState, ModalsAction> = (\n  state = initialState,\n  action\n): ModalsState => {\n  switch (action.type) {\n    case \"modals/OPEN\":\n      return {\n        ...state,\n        stack: [action.payload]\n      };\n    case \"modals/CLOSE\":\n      return {\n        ...state,\n        stack: []\n      };\n    case \"modals/PUSH\":\n      return {\n        ...state,\n        stack: [...state.stack, action.payload]\n      };\n    case \"modals/POP\":\n      const copy = [...state.stack];\n      copy.pop();\n      return {\n        ...state,\n        stack: copy\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { PlayerAction } from \"../actions/player\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  playing: boolean;\n  track_percent: number;\n};\n\nexport const INITIAL_STATE: State = {\n  playing: false,\n  track_percent: 0\n};\n\n// ------------------------------------------------------------------\n\nexport const playerReducer: Reducer<State, PlayerAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"player/START\":\n      return { ...state, playing: true };\n    case \"player/STOP\":\n      return { ...state, playing: false };\n    case \"player/SET_TRACK_PERCENT\":\n      return { ...state, track_percent: action.payload };\n    case \"player/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { QueueAction } from \"../actions/queue\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  position: number;\n  trackIds: string[];\n};\n\nexport const INITIAL_STATE: State = {\n  position: 0,\n  trackIds: []\n};\n\n// ------------------------------------------------------------------\n\nexport const queueReducer: Reducer<State, QueueAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"queue/SET\":\n      return {\n        ...state,\n        position: action.payload.position,\n        trackIds: action.payload.trackIds\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { RoomsAction } from \"../actions/rooms\";\nimport { RoomAccess, RoomInfo } from \"../utils/rooms\";\nimport { CombinedColor } from \"../utils/colorpicker\";\nimport { FirebaseRoom } from \"../utils/firebase\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  room: ReturnType<typeof FirebaseRoom> | null;\n  room_access: RoomAccess;\n  room_color: CombinedColor;\n  room_info: RoomInfo | null;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  room: null,\n  room_access: { id: \"\", secret: \"\" },\n  room_color: { fg: { r: 0, g: 0, b: 0 }, bg: { r: 255, g: 255, b: 255 } },\n  room_info: null\n};\n\n// ------------------------------------------------------------------\n\nexport const roomsReducer: Reducer<State, RoomsAction> = (\n  state = INITIAL_STATE,\n  action: RoomsAction\n): State => {\n  switch (action.type) {\n    case \"rooms/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"rooms/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"rooms/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"rooms/SET_ROOM\": {\n      return {\n        ...state,\n        room: action.payload.room,\n        room_info: action.payload.info\n      };\n    }\n    case \"rooms/SET_ROOM_ACCESS\": {\n      return {\n        ...state,\n        room_access: action.payload\n      };\n    }\n    case \"rooms/SET_ROOM_COLOR\": {\n      return {\n        ...state,\n        room_color: action.payload\n      };\n    }\n    case \"rooms/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { TracksAction } from \"../actions/tracks\";\nimport { Track } from \"../utils/medias\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  tracks: { [id: string]: Track };\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  tracks: {},\n};\n\n// ------------------------------------------------------------------\n\nexport const tracksReducer: Reducer<State, TracksAction> = (\n  state = INITIAL_STATE,\n  action: TracksAction\n): State => {\n  switch (action.type) {\n    case \"tracks/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null,\n      };\n    case \"tracks/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null,\n      };\n    }\n    case \"tracks/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    case \"tracks/SET_TRACKS\": {\n      const copy = { ...state, tracks: { ...state.tracks } };\n      for (const track of action.payload) {\n        copy.tracks[track.id] = track;\n      }\n      return copy;\n    }\n    case \"tracks/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { UsersAction } from \"../actions/users\";\nimport {\n  saveUserAccess,\n  loadUserAccess,\n  UserAccess,\n  UserInfo\n} from \"../utils/users\";\nimport { FirebaseUser } from \"../utils/firebase\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  user: ReturnType<typeof FirebaseUser> | null;\n  user_access: UserAccess;\n  user_info: UserInfo | null;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  user: null,\n  user_access: loadUserAccess(),\n  user_info: null\n};\n\n// ------------------------------------------------------------------\n\nexport const usersReducer: Reducer<State, UsersAction> = (\n  state = INITIAL_STATE,\n  action: UsersAction\n): State => {\n  switch (action.type) {\n    case \"users/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"users/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"users/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"users/SET_USER\": {\n      return {\n        ...state,\n        user: action.payload.user,\n        user_info: action.payload.info\n      };\n    }\n    case \"users/SET_USER_ACCESS\": {\n      saveUserAccess(action.payload);\n      return {\n        ...state,\n        user_access: { ...action.payload }\n      };\n    }\n    case \"users/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","export type UserInfo = {\n  name: string;\n  online: boolean;\n  room_id: string;\n  status: string;\n  timestamp: number;\n};\n\nexport type UserAccess = {\n  id: string;\n  secret: string;\n};\n\n// ------------------------------------------------------------------\n\nexport const loadUserAccess = (): UserAccess => {\n  const res: UserAccess = {\n    id: \"\",\n    secret: \"\"\n  };\n  const s = localStorage.getItem(\"U\");\n  if (s) {\n    try {\n      const d = JSON.parse(atob(s));\n      if (typeof d.i === \"string\" && typeof d.s === \"string\") {\n        res.id = d.i;\n        res.secret = d.s;\n        console.debug(\"Loaded user access: \", res);\n      }\n    } catch (err) {}\n  }\n  return res;\n};\n\nexport const saveUserAccess = ({ id, secret }: UserAccess) => {\n  localStorage.setItem(\n    \"U\",\n    btoa(\n      JSON.stringify({\n        i: id,\n        s: secret\n      })\n    )\n  );\n};\n","import { combineReducers } from \"redux\";\nimport { containersReducer as containers } from \"./containers\";\nimport { messagesReducer as messages } from \"./messages\";\nimport { modalsReducer as modals } from \"./modals\";\nimport { playerReducer as player } from \"./player\";\nimport { queueReducer as queue } from \"./queue\";\nimport { roomsReducer as rooms } from \"./rooms\";\nimport { tracksReducer as tracks } from \"./tracks\";\nimport { usersReducer as users } from \"./users\";\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const rootReducer = combineReducers({\n  containers,\n  messages,\n  modals,\n  player,\n  queue,\n  rooms,\n  tracks,\n  users\n});\n","import React, { Component } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport classNames from \"classnames\";\n//\nimport \"./Icon.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  icon: string;\n  size?: \"S\" | \"M\" | \"L\";\n  title?: string;\n};\n\nclass Icon extends Component<Props> {\n  public render = () => {\n    const { className, color, icon, size = \"M\", title } = this.props;\n    return (\n      <FontAwesome\n        className={classNames(\"Icon\", className, size)}\n        name={icon}\n        style={{ color }}\n        title={title}\n      />\n    );\n  };\n}\n\nexport default Icon;\n\n// ------------------------------------------------------------------\n\nexport const LoadingIcon = ({ size }: { size?: \"S\" | \"M\" | \"L\" }) => (\n  <Icon\n    className=\"rotating\"\n    icon=\"circle-o-notch\"\n    size={size}\n    title=\"Loading\"\n  />\n);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"./Icon\";\nimport \"./IconButton.scss\";\n\n// ------------------------------------------------------------------\n\ntype ButtonType = \"button\" | \"submit\";\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  disabled?: boolean;\n  displayTitle?: boolean;\n  icon: string;\n  kind?: \"default\" | \"primary\" | \"danger\" | \"special\";\n  onClick?: () => void;\n  size?: \"S\" | \"M\" | \"L\";\n  title: string;\n  type?: ButtonType;\n};\n\nclass IconButton extends Component<Props> {\n  public render = () => {\n    const {\n      className,\n      color,\n      disabled = false,\n      displayTitle = false,\n      icon,\n      kind = \"default\",\n      onClick,\n      size,\n      title,\n      type = \"button\",\n    } = this.props;\n    return (\n      <button\n        type={type}\n        aria-label={title}\n        className={classNames(\"IconButton\", className, kind, size, {\n          clickable: !disabled && (!!onClick || type === \"submit\"),\n        })}\n        onClick={disabled ? void 0 : onClick}\n        title={title}\n      >\n        <Icon color={color} icon={icon} size={size} />\n        {displayTitle && (\n          <div className={classNames(\"IconButtonTitle\", size)}>{title}</div>\n        )}\n      </button>\n    );\n  };\n}\n\nexport default IconButton;\n\n// ------------------------------------------------------------------\n\ntype CancelButtonProps = {\n  onClick: () => void;\n};\n\nclass _CancelButton extends Component<CancelButtonProps & WithTranslation> {\n  public render = () => {\n    const { onClick, t } = this.props;\n    return (\n      <IconButton\n        onClick={onClick}\n        title={t(\"cancel\")}\n        kind=\"default\"\n        icon=\"ban\"\n      />\n    );\n  };\n}\n\nexport const CancelButton = withTranslation()(_CancelButton);\n","// https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\nexport const copyToClipboard = async (value: string): Promise<void> =>\n  await new Promise(resolve => {\n    const elem = document.createElement(\"textarea\");\n    elem.value = value;\n    elem.setAttribute(\"readonly\", \"\");\n    elem.style.position = \"absolute\";\n    elem.style.left = \"-9999px\";\n\n    document.body.appendChild(elem);\n    const selection = document.getSelection();\n    if (selection !== null) {\n      const selected =\n        selection.rangeCount > 0 ? selection.getRangeAt(0) : false;\n      elem.select();\n      document.execCommand(\"copy\");\n      if (selected !== false) {\n        selection.removeAllRanges();\n        selection.addRange(selected);\n      }\n    }\n    document.body.removeChild(elem);\n    resolve();\n  });\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Room/Head\";\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport \"./Head.scss\";\n\n// ------------------------------------------------------------------\n\nclass Head extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const { locked, room, onUnlock, t } = this.props;\n    return (\n      <div className=\"Head\">\n        <div className=\"RoomStatus\">\n          {locked ? (\n            <IconButton\n              icon=\"lock\"\n              onClick={onUnlock}\n              size=\"M\"\n              title={t(\"rooms.locked\")}\n            />\n          ) : (\n            <IconButton\n              icon=\"unlock\"\n              onClick={this.onLock}\n              size=\"M\"\n              title={t(\"rooms.unlocked\")}\n            />\n          )}\n        </div>\n        <div className=\"RoomName\">{room ? room.name : \"\"}</div>\n        <div className=\"RoomLink\">\n          <IconButton\n            icon=\"link\"\n            onClick={this.onCopyLink}\n            size=\"M\"\n            title={t(\"rooms.copy_link\")}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyLink = async () => {\n    const { onMessage, t } = this.props;\n    await copyToClipboard(document.location.href.split(\"?\")[0]);\n    onMessage(t(\"rooms.link_copied_to_clipboard\"));\n  };\n\n  private onLock = () => {\n    const { onConfirm, t } = this.props;\n    onConfirm(t(\"rooms.confirm_lock\"), this.props.onLock);\n  };\n}\n\nexport default withTranslation()(Head);\n","import { RootState } from \"../reducers\";\n\nexport const extractRoom = (state: RootState) => state.rooms.room_info;\n\nexport const isRoomLoaded = (state: RootState) => !!state.rooms.room;\n\nexport const isRoomLocked = (state: RootState) =>\n  !state.rooms.room_access.secret;\n","import { AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../reducers\";\nimport { Player } from \"../utils/player\";\nimport { DeezerApi } from \"../utils/deezer\";\n\n// ------------------------------------------------------------------\n\nexport type Action<T extends string> = {\n  type: T;\n};\n\nexport type ActionWithPayload<T extends string, P> = {\n  type: T;\n  payload: P;\n};\n\nexport type Extended = {\n  deezer: ReturnType<typeof DeezerApi>;\n  previewPlayer: ReturnType<typeof Player>;\n  queuePlayer: ReturnType<typeof Player>;\n};\n\nexport type Dispatch = ThunkDispatch<RootState, Extended, AnyAction>;\n\nexport type AsyncAction = ThunkAction<void, RootState, Extended, AnyAction>;\n\nexport function createAction<T extends string>(type: T): Action<T>;\n\nexport function createAction<T extends string, P>(\n  type: T,\n  payload: P\n): ActionWithPayload<T, P>;\n\nexport function createAction<T extends string, P>(type: T, payload?: P) {\n  return payload === void 0 ? { type } : { type, payload };\n}\n","import { createAction, AsyncAction } from \".\";\nimport { ConfirmModalProps } from \"../components/Modals/ConfirmModal\";\n\n// ------------------------------------------------------------------\n\nexport type ModalPrereqT<T extends string, P> = {\n  type: T;\n  props: P;\n};\n\nexport type ModalPrereq =\n  | ModalPrereqT<\"Confirm\", ConfirmModalProps>\n  | ModalPrereqT<\"ConnectUser\", null>\n  | ModalPrereqT<\"CreateRoom\", null>\n  | ModalPrereqT<\"CreateUser\", null>\n  | ModalPrereqT<\"Search\", null>\n  | ModalPrereqT<\"UnlockRoom\", null>;\n\n// ------------------------------------------------------------------\n\nexport type ModalsAction =\n  | ReturnType<typeof closeModal>\n  | ReturnType<typeof openModal>\n  | ReturnType<typeof popModal>\n  | ReturnType<typeof pushModal>;\n\n// ------------------------------------------------------------------\n\nexport const openModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/OPEN\", prereq);\n\nexport const closeModal = () => createAction(\"modals/CLOSE\");\n\n// ------------------------------------------------------------------\n\nexport const pushModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/PUSH\", prereq);\n\nexport const popModal = () => createAction(\"modals/POP\");\n\n// ------------------------------------------------------------------\n\nexport const confirmModal = (\n  question: string,\n  onConfirmed: () => void,\n  onCanceled?: () => void\n): AsyncAction => async () => {\n  // TODO: open custom ConfirmModal instead of system popup\n  if (window.confirm(question)) {\n    onConfirmed();\n  } else if (onCanceled) {\n    onCanceled();\n  }\n};\n","import { createAction, AsyncAction } from \".\";\nimport { Message, MessageType, extractErrorMessage } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type MessagesAction =\n  | ReturnType<typeof addMessage>\n  | ReturnType<typeof clearMessages>\n  | ReturnType<typeof removeMessage>;\n\nconst addMessage = (message: Message) => createAction(\"message/ADD\", message);\n\nconst removeMessage = (id: number) => createAction(\"message/REMOVE\", id);\n\nconst clearMessages = () => createAction(\"message/RESET\");\n\n// ------------------------------------------------------------------\n\nlet MESSAGE_ID_GENERATOR: number = 0;\n\nexport const displayMessage = (\n  type: MessageType,\n  text: string,\n  duration: number = 5000\n): AsyncAction => (dispatch): any => {\n  const id = MESSAGE_ID_GENERATOR++;\n  dispatch(addMessage({ id, stamp: new Date().getTime(), text, type }));\n  setTimeout(() => dispatch(removeMessage(id)), duration);\n};\n\nexport const displayError = (text: string, error?: any): AsyncAction => (\n  dispatch\n): any => {\n  dispatch(\n    displayMessage(\n      \"error\",\n      error ? `${text}: ${extractErrorMessage(error)}` : text,\n      3000\n    )\n  );\n};\n\nexport const displayInfo = (text: string) => displayMessage(\"info\", text, 3000);\n","export type MessageType = \"error\" | \"info\";\n\nexport type Message = {\n  id: number;\n  stamp: number;\n  text: string;\n  type: MessageType;\n};\n\nexport const extractErrorMessage = (err: any) =>\n  err.response && err.response.data && err.response.data.message\n    ? err.response.data.message\n    : err.message;\n","const config = {\n  databaseURL: process.env.REACT_APP_FIREBASE_URL\n};\n\nconsole.debug(config);\n\nexport default config;\n","export const sleep = (delay: number) =>\n  new Promise(resolve => setTimeout(resolve, delay));\n","import * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n//\nimport firebaseConfig from \"../config/firebase\";\nimport { RoomInfo } from \"./rooms\";\nimport { UserInfo } from \"./users\";\nimport { sleep } from \".\";\n\n// ------------------------------------------------------------------\n\ntype FirebaseCB = (eventType: firebase.database.DataSnapshot) => void;\n\n// ------------------------------------------------------------------\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseDatabase = firebase.database(firebaseApp);\n\n// ------------------------------------------------------------------\n\nconst MEMBERS = firebaseDatabase.ref(\"members\");\nconst ROOMS = firebaseDatabase.ref(\"rooms\");\nconst USERS = firebaseDatabase.ref(\"users\");\n\n// ------------------------------------------------------------------\n\nexport const FirebaseRoom = (id: string, secret?: string) => {\n  const _room = ROOMS.child(id);\n  const _info = _room.child(\"info\");\n  const _members = MEMBERS.child(id);\n  let _secret = secret || \"\";\n  console.debug(\"INIT SECRET\", _secret);\n  let _values: RoomInfo = {\n    name: \"dummy\",\n    queue: {},\n    queue_position: 0,\n    timestamp: 0,\n    type: \"dj\",\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    console.debug(\"SETTING SECRET\", newSecret);\n    _secret = newSecret;\n  };\n\n  const wait = async (): Promise<RoomInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", (snapshot) => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"Room is invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const subscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.on(\"child_added\", cbAdded);\n    _members.on(\"child_removed\", cbRemoved);\n  };\n\n  const unsubscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.off(\"child_added\", cbAdded);\n    _members.off(\"child_removed\", cbRemoved);\n  };\n\n  const update = async ({\n    name,\n    queue,\n    queue_position,\n  }: Partial<Pick<RoomInfo, \"name\" | \"queue\" | \"queue_position\">>) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (queue !== void 0) {\n      _values.queue = queue;\n    }\n    if (queue_position !== void 0) {\n      _values.queue_position = queue_position;\n    }\n    await _room.set({\n      info: {\n        ..._values,\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n  };\n\n  return {\n    getInfo,\n    id,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    subscribeMembers,\n    unsubscribeInfo,\n    unsubscribeMembers,\n    update,\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const FirebaseUser = (id: string, secret?: string) => {\n  const _user = USERS.child(id);\n  const _info = _user.child(\"info\");\n  let _membership: firebase.database.Reference | null = null;\n  let _secret = secret || \"\";\n  let _values: UserInfo = {\n    name: \"dummy\",\n    online: false,\n    room_id: \"\",\n    status: \"\",\n    timestamp: 0,\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    _secret = newSecret;\n  };\n\n  const wait = async (): Promise<UserInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", (snapshot) => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"User is invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const update = async ({\n    name,\n    room_id,\n  }: Partial<Pick<UserInfo, \"name\" | \"room_id\">>) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (room_id !== void 0) {\n      _values.room_id = room_id;\n    }\n    await _user.set({\n      info: {\n        ..._values,\n        online: true,\n        status: \"online\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n    installDisconnect();\n  };\n\n  const installDisconnect = () => {\n    _user.onDisconnect().cancel();\n    _user.onDisconnect().set({\n      info: {\n        ..._values,\n        online: false,\n        room_id: \"\",\n        status: \"disconnected\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n  };\n\n  const enter = async (room: ReturnType<typeof FirebaseRoom>) => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: room.id,\n    });\n    _membership = MEMBERS.child(room.id).child(id);\n    _membership.onDisconnect().remove();\n    await _membership.set({\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n    });\n  };\n\n  const exit = async () => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: \"\",\n    });\n  };\n\n  return {\n    id,\n    enter,\n    exit,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    unsubscribeInfo,\n    update,\n    getInfo,\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const FirebaseParty = (\n  id: string,\n  room: ReturnType<typeof FirebaseRoom>\n) => {\n  const _members: string[] = [];\n  const _users: { [id: string]: ReturnType<typeof FirebaseUser> } = {};\n  let _info: RoomInfo = {\n    name: \"\",\n    queue: {},\n    queue_position: 0,\n    timestamp: 0,\n    type: \"dj\",\n  };\n\n  const _onAdded = (added: firebase.database.DataSnapshot) => {\n    const userId = added.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index === -1) {\n        _members.push(userId);\n        _users[userId] = FirebaseUser(userId);\n        _log();\n      }\n    }\n  };\n\n  const _onRemoved = (removed: firebase.database.DataSnapshot) => {\n    const userId = removed.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index !== -1) {\n        _members.splice(index, 1);\n        delete _users[userId];\n        _log();\n      }\n    }\n  };\n\n  const _onRoomInfo = (snapshot: firebase.database.DataSnapshot) => {\n    const newValues = snapshot.val() as RoomInfo | null;\n    if (newValues) {\n      _info = newValues;\n      _log();\n    }\n  };\n\n  const _log = () => {\n    console.debug(\"PARTY\", {\n      _info,\n      _members,\n    });\n  };\n\n  const init = () => {\n    room.subscribeInfo(_onRoomInfo);\n    room.subscribeMembers(_onAdded, _onRemoved);\n  };\n\n  const terminate = () => {\n    room.unsubscribeInfo(_onRoomInfo);\n    room.unsubscribeMembers(_onAdded, _onRemoved);\n  };\n\n  return {\n    init,\n    terminate,\n  };\n};\n\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n\nexport const testRoom = async () => {\n  const room = FirebaseRoom(\"r1\", \"rs1\");\n  await room.update({ name: \"R1\" });\n  room.subscribeInfo((info) => console.debug(\"ROOM\", info.val()));\n  room.subscribeMembers(\n    (members) => console.debug(\"ADDED\", members.key),\n    (members) => console.debug(\"REMOVED\", members.key)\n  );\n  await room.update({ name: \"R1\" });\n  await sleep(1000);\n  await room.update({\n    name: \"R1b\",\n    queue: {},\n    queue_position: 0,\n  });\n};\n\nexport const testUser = async () => {\n  const user = FirebaseUser(\"u1\", \"us1\");\n  user.subscribeInfo((info) => console.debug(\"USER\", info.val()));\n  await user.update({ name: \"U1\" });\n  await sleep(1000);\n  await user.update({ name: \"U1b\" });\n};\n\nexport const testParty = async () => {\n  const room1 = FirebaseRoom(\"r1\", \"rs1\");\n  await room1.update({ name: \"R1\" });\n  const room2 = FirebaseRoom(\"r2\", \"rs2\");\n  await room2.update({ name: \"R2\" });\n  const user1 = FirebaseUser(\"u1\", \"us1\");\n  await user1.update({ name: \"U1\" });\n  const user2 = FirebaseUser(\"u2\", \"us2\");\n  await user2.update({ name: \"U2\" });\n\n  await sleep(2000);\n\n  const party1 = FirebaseParty(\"P1\", room1);\n  await party1.init();\n  const party2 = FirebaseParty(\"P2\", room2);\n  await party2.init();\n\n  await sleep(1000);\n  user1.enter(room1);\n  await sleep(1000);\n  user2.enter(room1);\n  await sleep(1000);\n  user1.enter(room2);\n  await sleep(1000);\n  user1.exit();\n  await sleep(1000);\n  user1.enter(room1);\n};\n\nexport const test = () => {\n  // testRoom();\n  // testUser();\n  // testParty();\n};\n","import { createAction, AsyncAction } from \".\";\nimport { RoomQueue } from \"../utils/rooms\";\nimport { displayError } from \"./messages\";\nimport { lockRoom } from \"./rooms\";\n\n// ------------------------------------------------------------------\n\nexport type QueueAction = ReturnType<typeof setQueue>;\n\nexport const setQueue = (trackIds: string[], position: number) =>\n  createAction(\"queue/SET\", { position, trackIds });\n\n// ------------------------------------------------------------------\n\nexport const clearQueue = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: { room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    try {\n      console.debug(\"Clearing queue...\");\n      await room.update({ queue: {}, queue_position: 0 });\n    } catch (err) {\n      dispatch(displayError(\"Cannot clear queue\"));\n      dispatch(lockRoom());\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const appendInQueue = (trackIds: string[]): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: { room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    if (trackIds.length > 0) {\n      try {\n        console.debug(\"Appending queue...\", { trackIds });\n        const queue: RoomQueue = {};\n        [...getState().queue.trackIds, ...trackIds].forEach((id, index) => {\n          queue[index] = {\n            id,\n            type: \"deezer\",\n          };\n        });\n        await room.update({ queue });\n      } catch (err) {\n        dispatch(displayError(\"Cannot append in queue\"));\n        dispatch(lockRoom());\n      }\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const removeFromQueue = (index: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    queue: { trackIds, position },\n    rooms: { room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    if (index < trackIds.length) {\n      try {\n        console.debug(\"Removing from queue...\", { index });\n        const oldIndex = position % trackIds.length;\n        const queue: RoomQueue = {};\n        const copy = [...getState().queue.trackIds];\n        copy.splice(index, 1);\n        copy.forEach((id, index) => {\n          queue[index] = {\n            id,\n            type: \"deezer\",\n          };\n        });\n        await room.update({\n          queue,\n          queue_position: index < oldIndex ? position - 1 : position,\n        });\n      } catch (err) {\n        dispatch(displayError(\"Cannot remove from queue\"));\n        dispatch(lockRoom());\n      }\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const setQueuePosition = (newPosition: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    queue: { position: oldPosition },\n    rooms: { room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    if (oldPosition !== newPosition) {\n      try {\n        console.debug(\"Set queue position...\", {\n          oldPosition,\n          newPosition,\n        });\n        await room.update({ queue_position: newPosition });\n      } catch (err) {\n        dispatch(displayError(\"Cannot set queue position\"));\n        dispatch(lockRoom());\n      }\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const moveBackward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { position, trackIds },\n  } = getState();\n  if (trackIds.length > 0) {\n    console.debug(\"Moving backward...\");\n    dispatch(\n      setQueuePosition(position > 0 ? position - 1 : trackIds.length - 1)\n    );\n  }\n};\n\nexport const moveForward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { position, trackIds },\n  } = getState();\n  if (trackIds.length > 0) {\n    console.debug(\"Moving forward...\");\n    dispatch(setQueuePosition(position + 1));\n  }\n};\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { appendInQueue } from \"./queue\";\nimport { Track, TrackType, ProviderType } from \"../utils/medias\";\n\n// ------------------------------------------------------------------\n\nexport type TracksAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setTracks>;\n\nconst fetching = () => createAction(\"tracks/FETCHING\");\nconst success = () => createAction(\"tracks/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"tracks/ERROR\", error);\nconst reset = () => createAction(\"tracks/RESET\");\nexport const setTracks = (tracks: Track[]) =>\n  createAction(\"tracks/SET_TRACKS\", tracks);\n\n// ------------------------------------------------------------------\n\nconst onlyUnique = (value: string, index: number, self: string[]) =>\n  self.indexOf(value) === index;\n\nexport const loadTracks = (\n  providerType: ProviderType,\n  trackIds: string[],\n  enqueue: boolean,\n  preview: boolean\n): AsyncAction => async (dispatch, getState, { deezer, previewPlayer }) => {\n  if (trackIds.length > 0) {\n    try {\n      const {\n        tracks: { tracks: oldTracks },\n      } = getState();\n      const newTrackIds: string[] = trackIds\n        .filter((trackId) => !oldTracks[trackId])\n        .filter(onlyUnique);\n      let newTracks: Track[] = [];\n      if (newTrackIds.length > 0) {\n        console.debug(\"Loading track...\", { trackIds: newTrackIds });\n        newTracks = await Promise.all(\n          newTrackIds.map((trackId) => deezer.loadTrack(trackId))\n        );\n        dispatch(setTracks(newTracks));\n      }\n      if (enqueue) {\n        console.debug(\"Enqueuing track...\", { trackIds });\n        dispatch(appendInQueue(trackIds));\n      }\n      if (preview) {\n        const trackId = trackIds[0];\n        const track =\n          oldTracks[trackId] ||\n          newTracks.find((track) => track.id.toString() === trackId);\n        console.debug(\"Previewing track...\", { track, trackId });\n        await previewPlayer.play(0, track.id.toString(), track.preview, 0);\n      }\n    } catch (err) {\n      dispatch(displayError(\"Cannot load track\", err));\n    }\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const previewTrack = (\n  providerType: ProviderType,\n  trackType: TrackType,\n  trackId: string\n): AsyncAction => async (dispatch, getState, { deezer, previewPlayer }) => {\n  try {\n    const state = getState();\n    let track = state.tracks.tracks[trackId];\n    if (!track) {\n      console.debug(\"Loading track...\", { trackId });\n      track = await deezer.loadTrack(trackId);\n      dispatch(setTracks([track]));\n    }\n    console.debug(\"Start previewing...\");\n    await previewPlayer.play(0, track.id.toString(), track.preview, 0);\n  } catch (err) {\n    dispatch(displayError(\"Cannot load track\", err));\n  }\n};\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { Container, ContainerType, ProviderType } from \"../utils/medias\";\nimport { displayError } from \"./messages\";\nimport { appendInQueue } from \"./queue\";\nimport { loadTracks, setTracks } from \"./tracks\";\n\n// ------------------------------------------------------------------\n\nexport type ContainersAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setContainers>;\n\nconst fetching = () => createAction(\"containers/FETCHING\");\nconst success = () => createAction(\"containers/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"containers/ERROR\", error);\nconst reset = () => createAction(\"containers/RESET\");\nconst setContainers = (containers: Container[]) =>\n  createAction(\"containers/SET_CONTAINERS\", containers);\n\n// ------------------------------------------------------------------\n\nexport const loadContainer = (\n  providerType: ProviderType,\n  containerType: ContainerType,\n  containerId: string,\n  enqueue: boolean,\n  preview: boolean\n): AsyncAction => async (dispatch, getState, { deezer }) => {\n  try {\n    const state = getState();\n    const containerTypeId = `${containerType}|${containerId}`;\n    let container = state.containers.containers[containerTypeId];\n    if (!container) {\n      console.debug(\"Loading container...\", { containerId, containerType });\n      switch (containerType) {\n        case \"album\":\n          container = await deezer.loadAlbum(containerId);\n          break;\n        case \"playlist\":\n          container = await deezer.loadPlaylist(containerId);\n          break;\n      }\n    }\n    if (container) {\n      dispatch(setContainers([container]));\n      if (container.tracks && container.tracks.data.length > 0) {\n        dispatch(setTracks(container.tracks.data));\n        if (enqueue) {\n          console.debug(\"Enqueuing container...\");\n          dispatch(\n            appendInQueue(\n              container.tracks.data.map((track) => track.id.toString())\n            )\n          );\n        }\n        if (preview) {\n          console.debug(\"Previewing container...\");\n          dispatch(\n            loadTracks(\n              providerType,\n              [container.tracks.data[0].id.toString()],\n              false,\n              true\n            )\n          );\n        }\n      }\n    }\n  } catch (err) {\n    dispatch(displayError(\"Cannot load container\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const previewContainer = (\n  providerType: ProviderType,\n  containerType: ContainerType,\n  containerId: string\n): AsyncAction => async (dispatch) => {\n  console.debug(\"Previewing container...\", { containerType, containerId });\n  dispatch(\n    loadContainer(providerType, containerType, containerId, false, true)\n  );\n};\n","import { createHashHistory } from \"history\";\n\nexport default createHashHistory();\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { RoomInfo } from \"../utils/rooms\";\nimport { FirebaseRoom } from \"../utils/firebase\";\nimport { loadTracks } from \"./tracks\";\nimport { loadContainer } from \"./containers\";\nimport { ContainerType, ProviderType } from \"../utils/medias\";\nimport { CombinedColor } from \"../utils/colorpicker\";\nimport history from \"../utils/history\";\nimport { setQueue } from \"./queue\";\n\n// ------------------------------------------------------------------\n\nexport type RoomsAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setRoom>\n  | ReturnType<typeof setRoomAccess>\n  | ReturnType<typeof setRoomColor>;\n\nconst fetching = () => createAction(\"rooms/FETCHING\");\nconst success = () => createAction(\"rooms/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"rooms/ERROR\", error);\nconst reset = () => createAction(\"rooms/RESET\");\nconst setRoom = (\n  room: ReturnType<typeof FirebaseRoom> | null,\n  info: RoomInfo | null\n) => createAction(\"rooms/SET_ROOM\", { info, room });\nconst setRoomAccess = (id: string, secret: string) =>\n  createAction(\"rooms/SET_ROOM_ACCESS\", { id, secret });\nexport const setRoomColor = (color: CombinedColor) =>\n  createAction(\"rooms/SET_ROOM_COLOR\", color);\n\n// ------------------------------------------------------------------\n\nexport const createRoom = (name: string, secret: string): AsyncAction => async (\n  dispatch\n) => {\n  try {\n    const id = v4();\n    console.debug(\"Creating room...\", { id, secret });\n    await FirebaseRoom(id, secret).update({ name });\n    dispatch(enterRoom(id, secret));\n  } catch (err) {\n    dispatch(displayError(\"Cannot create room\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_CB: any = null;\n\nexport const enterRoom = (id: string, secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: { room },\n  } = getState();\n  if (!room || room.id !== id) {\n    dispatch(exitRoom());\n    try {\n      console.debug(\"Entering room...\", { id, secret });\n      const newRoom = FirebaseRoom(id, secret);\n      dispatch(setRoom(newRoom, await newRoom.wait()));\n      dispatch(setRoomAccess(id, secret));\n      FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n        const newInfo = snapshot.val() as RoomInfo;\n        let trackIds: string[] = [];\n        if (newInfo.queue) {\n          trackIds = Object.entries(newInfo.queue)\n            .sort((track1, track2) => Number(track1[0]) - Number(track2[0]))\n            .map((track) => track[1].id);\n          dispatch(loadTracks(\"deezer\", trackIds, false, false));\n        }\n        // console.log(\"TOTO\", newInfo);\n        dispatch(setQueue(trackIds, newInfo.queue_position));\n        dispatch(setRoom(newRoom, newInfo));\n      };\n      newRoom.subscribeInfo(FIREBASE_CB);\n      history.push(`/room/${id}?key=${secret}`); // TODO: should push only if we're not already in it\n    } catch (err) {\n      dispatch(displayError(\"Cannot join room\", err));\n    }\n  }\n};\n\nexport const exitRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: { room },\n  } = getState();\n  if (room) {\n    console.debug(\"Exiting room...\");\n    room.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_CB = null;\n    dispatch(setRoom(null, null));\n    dispatch(setRoomAccess(\"\", \"\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const lockRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: {\n      room,\n      room_access: { id },\n    },\n  } = getState();\n  if (room && room.id === id) {\n    console.debug(\"Locking room...\", { id });\n    room.setSecret(\"\");\n    dispatch(setRoomAccess(id, \"\"));\n  }\n};\n\nexport const unlockRoom = (secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: {\n      room,\n      room_access: { id },\n    },\n  } = getState();\n  if (room && room.id === id) {\n    console.debug(\"Unlocking room...\", { id, secret });\n    room.setSecret(secret);\n    dispatch(setRoomAccess(id, secret));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const queueTracks = (\n  providerType: ProviderType,\n  containerType: ContainerType,\n  containerId: string,\n  trackId: string\n): AsyncAction => async (dispatch) => {\n  if (containerId) {\n    dispatch(\n      loadContainer(providerType, containerType, containerId, true, false)\n    );\n  }\n  if (trackId) {\n    dispatch(loadTracks(providerType, [trackId], true, false));\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Head from \"../../components/Room/Head\";\nimport { extractRoom, isRoomLocked } from \"../../selectors/rooms\";\nimport { openModal, confirmModal } from \"../../actions/modals\";\nimport { lockRoom } from \"../../actions/rooms\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n  room: extractRoom(state),\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onConfirm: (question: string, onConfirmed: () => void) => {\n    dispatch(confirmModal(question, onConfirmed));\n  },\n  onLock: () => dispatch(lockRoom()),\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message)),\n  onUnlock: () => dispatch(openModal({ type: \"UnlockRoom\", props: null })),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Head);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"../Common/Icon\";\nimport \"./Cover.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  image: string;\n  onPlay: () => void;\n  onStop: () => void;\n  playable: boolean;\n  playing: boolean;\n};\n\nclass Cover extends Component<Props & WithTranslation> {\n  public render = () => {\n    const { playable, playing, image, onPlay, onStop, t } = this.props;\n    if (playable) {\n      return (\n        <div\n          className={classNames(\"Cover\", { playing })}\n          style={{ backgroundImage: `url('${image}')` }}\n          onClick={!playing ? onPlay : onStop}\n        >\n          {!playing ? (\n            <Icon icon=\"play\" title={t(\"player.play\")} />\n          ) : (\n            <Icon icon=\"pause\" title={t(\"player.stop\")} />\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={classNames(\"Cover\", { playing })}\n          style={{ backgroundImage: `url('${image}')` }}\n        >\n          {playing ? <Icon icon=\"music\" title={t(\"player.playing\")} /> : null}\n        </div>\n      );\n    }\n  };\n}\n\nexport default withTranslation()(Cover);\n","import React, { ReactNode, Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { ApiAlbum, ApiPlaylist, ApiTrack } from \"../../utils/deezer\";\nimport Cover from \"./Cover\";\nimport \"./Medias.scss\";\n\n// ------------------------------------------------------------------\n\ntype AlbumProps = {\n  actions?: ReactNode;\n  album: ApiAlbum;\n  playable: boolean;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n};\n\nexport class _Album extends Component<AlbumProps & WithTranslation> {\n  public render = () => {\n    const { actions, album, playable, playing, onPlay, onStop, t } = this.props;\n    return (\n      <div className=\"Media Album\">\n        {actions}\n        <Cover\n          playable={playable}\n          playing={playing}\n          image={album.cover_small}\n          onPlay={onPlay}\n          onStop={onStop}\n        />\n        <div className=\"Metas\">\n          <div className=\"Meta AlbumTitle\">\n            <a href={album.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {album.title}\n            </a>\n          </div>\n          <div className=\"Meta AlbumArtistName\">\n            <a\n              href={album.artist.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {t(\"medias.by\", { artist: album.artist.name })}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport const Album = withTranslation()(_Album);\n\n// ------------------------------------------------------------------\n\ntype PlaylistProps = {\n  actions?: ReactNode;\n  playlist: ApiPlaylist;\n  playable: boolean;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n};\n\nexport class _Playlist extends Component<PlaylistProps & WithTranslation> {\n  public render = () => {\n    const { actions, playlist, playable, playing, onPlay, onStop } = this.props;\n    return (\n      <div className=\"Media Playlist\">\n        {actions}\n        <Cover\n          playable={playable}\n          playing={playing}\n          image={playlist.picture_small}\n          onPlay={onPlay}\n          onStop={onStop}\n        />\n        <div className=\"Metas\">\n          <div className=\"Meta PlaylistTitle\">\n            <a href={playlist.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {playlist.title}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport const Playlist = withTranslation()(_Playlist);\n\n// ------------------------------------------------------------------\n\ntype TrackProps = {\n  actions?: ReactNode;\n  track: ApiTrack;\n  playable: boolean;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n};\n\nexport class _Track extends Component<TrackProps & WithTranslation> {\n  public render = () => {\n    const { actions, track, playable, playing, onPlay, onStop, t } = this.props;\n    return (\n      <div className=\"Media Track\">\n        {actions}\n        <Cover\n          playable={playable}\n          playing={playing}\n          image={track.album.cover_small}\n          onPlay={onPlay}\n          onStop={onStop}\n        />\n        <div className=\"Metas\">\n          <div className=\"Meta TrackTitle\">\n            <a href={track.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {track.title}\n            </a>\n          </div>\n          <div className=\"Meta TrackArtistName\">\n            <a\n              href={track.artist.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {t(\"medias.by\", { artist: track.artist.name })}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport const Track = withTranslation()(_Track);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { Track } from \"./Medias\";\nimport IconButton from \"../Common/IconButton\";\nimport { ApiTrack } from \"../../utils/deezer\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  locked: boolean;\n  playing: boolean;\n  track: ApiTrack;\n  onPlay: () => void;\n  onRemove: () => void;\n  onStop: () => void;\n};\n\nclass QueueItem extends Component<Props & WithTranslation> {\n  public render = () => {\n    const { locked, playing, track, onPlay, onRemove, onStop, t } = this.props;\n    return (\n      <div className=\"QueueItem\">\n        <Track\n          track={track}\n          playable={!locked}\n          playing={playing}\n          onPlay={onPlay}\n          onStop={onStop}\n          actions={\n            !locked ? (\n              <IconButton\n                title={t(\"medias.remove\")}\n                icon=\"trash\"\n                onClick={onRemove}\n              />\n            ) : null\n          }\n        />\n      </div>\n    );\n  };\n}\n\nexport default withTranslation()(QueueItem);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Room/Queue\";\nimport IconButton from \"../Common/IconButton\";\nimport { LoadingIcon } from \"../Common/Icon\";\nimport QueueItem from \"./QueueItem\";\nimport \"./Queue.scss\";\n\n// ------------------------------------------------------------------\n\nclass Queue extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      loaded,\n      locked,\n      playing,\n      playingIndex,\n      tracks,\n      onPlay,\n      onRemove,\n      onSearch,\n      onStop,\n      t,\n    } = this.props;\n    return (\n      <div className=\"Queue\">\n        {tracks.length > 0 ? (\n          tracks.map((track, index) => (\n            <QueueItem\n              key={index}\n              locked={locked}\n              playing={playing && playingIndex === index}\n              track={track}\n              onPlay={() => onPlay(index)}\n              onRemove={() => onRemove(index)}\n              onStop={onStop}\n            />\n          ))\n        ) : (\n          <div className=\"QueueEmpty\">\n            {loaded ? (\n              <>\n                <IconButton\n                  title=\"...\"\n                  icon=\"shower\"\n                  onClick={onSearch}\n                  size=\"L\"\n                />\n                <span onClick={onSearch}>{t(\"rooms.empty\")}</span>\n              </>\n            ) : (\n              <>\n                <LoadingIcon size=\"L\" />\n                <span>{t(\"rooms.loading\")}</span>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n}\n\nexport default withTranslation()(Queue);\n","import { RootState } from \"../reducers\";\nimport { Track } from \"../utils/medias\";\n\nexport const extractTracks = (state: RootState, trackIds: string[]) => {\n  const res: Track[] = [];\n  const {\n    tracks: { tracks },\n  } = state;\n  for (const trackId of trackIds) {\n    const track = tracks[trackId];\n    if (!!track) {\n      res.push(track);\n    }\n  }\n  return res;\n};\n","import * as jimp from \"jimp\";\n\n// ------------------------------------------------------------------\n\nexport type Color = {\n  r: number;\n  g: number;\n  b: number;\n};\n\nexport type CombinedColor = {\n  bg: Color;\n  fg: Color;\n};\n\nconst CACHE: { [url: string]: CombinedColor } = {};\n\nconst DEFAULT_COLOR = {\n  bg: { r: 255, g: 255, b: 255 },\n  fg: { r: 0, g: 0, b: 0 }\n};\n\n// ------------------------------------------------------------------\n\n// https://stackoverflow.com/questions/3942878/how-to-decide-font-color-in-white-or-black-depending-on-background-color\nexport const pickColor = async (url: string) => {\n  let res = DEFAULT_COLOR;\n  if (url) {\n    res = CACHE[url];\n    if (!res) {\n      try {\n        const image = await jimp.read(url);\n        const pixel = await image.resize(1, 1).getPixelColor(0, 0);\n        const bg = jimp.intToRGBA(pixel);\n        CACHE[url] = res = {\n          bg,\n          fg:\n            bg.r * 0.299 + bg.g * 0.587 + bg.b * 0.114 > 186\n              ? { r: 0, g: 0, b: 0 }\n              : { r: 255, g: 255, b: 255 }\n        };\n      } catch (err) {\n        console.debug(\"An error prevented colorpicking\", err);\n      }\n    }\n  }\n  return res;\n};\n\n/*\nconst backgroundColor = color\n? `rgb(${color.r}, ${color.g}, ${color.b})`\n: void 0;\n<div\nstyle={{\n  backgroundColor\n}}\n>\nx\n</div>\n\ncolors: {\n  [id: string]: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n};,\ncolors: {}\nconst color = this.state.colors[album.id];\n\nimport { pickColor } from \"../../utils/colorpicker\";\n\nprivate XXX = async (id: number, url: string) => {\n  if (!this.state.colors[id]) {\n    const color = await pickColor(url);\n    this.setState({\n      colors: { ...this.state.colors, [id]: color }\n    });\n  }\n};\n*/\n","import { AsyncAction, createAction, Dispatch } from \".\";\nimport { setRoomColor } from \"./rooms\";\nimport { pickColor } from \"../utils/colorpicker\";\nimport { setQueuePosition } from \"./queue\";\nimport { Player } from \"../utils/player\";\nimport { RootState } from \"../reducers\";\n\n// ------------------------------------------------------------------\n\nexport type PlayerAction =\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setPlayerTrackPercent>\n  | ReturnType<typeof start>\n  | ReturnType<typeof stop>;\n\nconst reset = () => createAction(\"player/RESET\");\nconst setPlayerTrackPercent = (percent: number) =>\n  createAction(\"player/SET_TRACK_PERCENT\", percent);\nconst start = () => createAction(\"player/START\");\nconst stop = () => createAction(\"player/STOP\");\n\n// ------------------------------------------------------------------\n\nexport const startPlayer = (): AsyncAction => async (\n  dispatch,\n  getState,\n  { queuePlayer }\n) => {\n  if (!PLAYER_TIMER1 && !PLAYER_TIMER2) {\n    _installTimer1(dispatch, getState, queuePlayer);\n    _installTimer2(dispatch, getState, queuePlayer);\n    dispatch(start());\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPlayer = (): AsyncAction => async (\n  dispatch,\n  _,\n  { queuePlayer }\n) => {\n  if (PLAYER_TIMER1 && PLAYER_TIMER2) {\n    clearTimeout(PLAYER_TIMER1);\n    PLAYER_TIMER1 = null;\n    clearTimeout(PLAYER_TIMER2);\n    PLAYER_TIMER2 = null;\n    await queuePlayer.stop();\n    dispatch(stop());\n    dispatch(setPlayerTrackPercent(0));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPreview = (): AsyncAction => async (\n  _1,\n  _2,\n  { previewPlayer }\n) => {\n  console.debug(\"Stop previewing...\");\n  await previewPlayer.stop();\n};\n\n// ------------------------------------------------------------------\n\nlet PLAYER_TIMER1: NodeJS.Timeout | null = null;\nlet PLAYER_TIMER2: NodeJS.Timeout | null = null;\n\nconst _computeNextPosition = (\n  queuePlayer: ReturnType<typeof Player>,\n  queueTrackPosition: number,\n  trackIds: string[]\n) => {\n  let nextPosition = -1;\n  const playingTrackID = queuePlayer.getPlayingTrackID();\n  const playingTrackPosition = queuePlayer.getPlayingTrackPosition();\n  if (playingTrackPosition !== queueTrackPosition) {\n    if (queuePlayer.isPlaying()) {\n      // User has clicked an other track or added/removed a track in queue\n      nextPosition = queueTrackPosition;\n    } else {\n      // Not playing which means previous track has terminated\n      nextPosition =\n        playingTrackPosition >= 0 ? playingTrackPosition : queueTrackPosition;\n    }\n  } else if (\n    playingTrackID !== trackIds[queueTrackPosition % trackIds.length]\n  ) {\n    // User has deleted playing track\n    nextPosition = queueTrackPosition;\n  }\n  return nextPosition;\n};\n\nconst _installTimer1 = (\n  dispatch: Dispatch,\n  getState: () => RootState,\n  queuePlayer: ReturnType<typeof Player>\n) => {\n  // Don't use setInterval because a step could be triggered before previous one terminated\n  PLAYER_TIMER1 = setTimeout(async () => {\n    const {\n      queue: { position, trackIds },\n      tracks: { tracks },\n    } = getState();\n    if (trackIds.length > 0) {\n      // Detect and apply change to queue and player\n      const nextTrackPosition = _computeNextPosition(\n        queuePlayer,\n        position,\n        trackIds\n      );\n      if (nextTrackPosition >= 0) {\n        const nextIndex = nextTrackPosition % trackIds.length;\n        const nextTrack = tracks[trackIds[nextIndex]];\n        console.debug(\"Detected play change...\", {\n          nextIndex,\n          nextTrack,\n          nextTrackPosition,\n        });\n        dispatch(setQueuePosition(nextTrackPosition));\n        const [color] = await Promise.all([\n          pickColor(nextTrack.album.cover_small),\n          queuePlayer.play(\n            nextTrackPosition,\n            nextTrack.id.toString(),\n            nextTrack.preview,\n            0\n          ),\n        ]);\n        dispatch(setRoomColor(color));\n      }\n\n      // Reschedule time\n      _installTimer1(dispatch, getState, queuePlayer);\n    } else {\n      // Last track has been removed from queue by user\n      console.debug(\"No more tracks in queue...\");\n      dispatch(stopPlayer());\n    }\n  }, 250);\n};\n\nconst _installTimer2 = (\n  dispatch: Dispatch,\n  getState: () => RootState,\n  queuePlayer: ReturnType<typeof Player>\n) => {\n  // Don't use setInterval because a step could be triggered before previous one terminated\n  PLAYER_TIMER2 = setTimeout(() => {\n    const {\n      queue: { trackIds },\n    } = getState();\n    if (trackIds.length > 0) {\n      // Refresh player track percent\n      dispatch(setPlayerTrackPercent(queuePlayer.getPlayingTrackPercent()));\n\n      // Reschedule time\n      _installTimer2(dispatch, getState, queuePlayer);\n    }\n  }, 250); // Must do very few operation because called very often (if we put less it creates blink on mobile when playing & scrolling)\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Queue from \"../../components/Room/Queue\";\nimport { extractTracks } from \"../../selectors/tracks\";\nimport { setQueuePosition, removeFromQueue } from \"../../actions/queue\";\nimport { stopPlayer, startPlayer } from \"../../actions/player\";\nimport { isRoomLoaded, isRoomLocked } from \"../../selectors/rooms\";\nimport { openModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  loaded: isRoomLoaded(state),\n  locked: isRoomLocked(state),\n  playing: state.player.playing,\n  playingIndex: state.queue.position % state.queue.trackIds.length,\n  tracks: extractTracks(state, state.queue.trackIds),\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onPlay: (index: number) => {\n    dispatch(startPlayer());\n    dispatch(setQueuePosition(index));\n  },\n  onRemove: (index: number) => dispatch(removeFromQueue(index)),\n  onSearch: () => dispatch(openModal({ type: \"Search\", props: null })),\n  onStop: () => dispatch(stopPlayer()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Queue);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport { MappedProps } from \"../../containers/Room/Progress\";\nimport \"./Progress.scss\";\n\n// ------------------------------------------------------------------\n\nclass Progress extends Component<MappedProps> {\n  public render = () => {\n    const { playing, value } = this.props;\n    return (\n      <div className={classNames(\"Progress\", { playing })}>\n        <progress max={100} value={value * 100} />\n      </div>\n    );\n  };\n}\n\nexport default Progress;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Progress from \"../../components/Room/Progress\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  playing: state.player.playing,\n  value: state.player.track_percent\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Progress);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Room/Controls\";\nimport IconButton from \"../Common/IconButton\";\nimport history from \"../../utils/history\";\nimport Progress from \"../../containers/Room/Progress\";\nimport \"./Controls.scss\";\n\n// ------------------------------------------------------------------\n\nclass Controls extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      onMoveBackward,\n      onMoveForward,\n      onPlay,\n      onSearch,\n      onStop,\n      tracksCount,\n      locked,\n      playing,\n      t,\n    } = this.props;\n    return (\n      <div className=\"Controls\">\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              icon=\"step-backward\"\n              onClick={onMoveBackward}\n              size=\"M\"\n              title={t(\"player.backward\")}\n            />\n          </div>\n          <div className=\"Control\">\n            {!playing ? (\n              <IconButton\n                disabled={locked || tracksCount === 0}\n                onClick={onPlay}\n                icon=\"play\"\n                size=\"L\"\n                title={t(\"player.play\")}\n              />\n            ) : (\n              <IconButton\n                disabled={locked || tracksCount === 0}\n                onClick={onStop}\n                icon=\"pause\"\n                title={t(\"player.stop\")}\n                size=\"L\"\n              />\n            )}\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              icon=\"step-forward\"\n              onClick={onMoveForward}\n              size=\"M\"\n              title={t(\"player.forward\")}\n            />\n          </div>\n        </div>\n        <Progress />\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              onClick={this.onClear}\n              icon=\"trash\"\n              title={t(\"rooms.clear\")}\n            />\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              onClick={onSearch}\n              icon=\"search\"\n              title={t(\"medias.search\")}\n            />\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              onClick={this.onExit}\n              icon=\"sign-out\"\n              title={t(\"rooms.exit\")}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  onClear = () => {\n    const { onClear, onConfirm, t } = this.props;\n    onConfirm(t(\"rooms.confirm_clear\"), onClear);\n  };\n\n  onExit = () => {\n    const { onConfirm, t } = this.props;\n    onConfirm(t(\"rooms.confirm_exit\"), () => {\n      history.push(\"/\");\n    });\n  };\n}\n\nexport default withTranslation()(Controls);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Controls from \"../../components/Room/Controls\";\nimport { startPlayer, stopPlayer } from \"../../actions/player\";\nimport { openModal, confirmModal } from \"../../actions/modals\";\nimport { clearQueue, moveBackward, moveForward } from \"../../actions/queue\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  tracksCount: state.queue.trackIds.length,\n  locked: isRoomLocked(state),\n  playing: state.player.playing,\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClear: () => {\n    dispatch(clearQueue());\n    dispatch(stopPlayer());\n  },\n  onConfirm: (question: string, onConfirmed: () => void) => {\n    dispatch(confirmModal(question, onConfirmed));\n  },\n  onMoveBackward: () => dispatch(moveBackward()),\n  onMoveForward: () => dispatch(moveForward()),\n  onPlay: () => dispatch(startPlayer()),\n  onSearch: () => dispatch(openModal({ type: \"Search\", props: null })),\n  onStop: () => dispatch(stopPlayer()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Controls);\n","import React, { Component } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/Room\";\nimport Head from \"../../containers/Room/Head\";\nimport Queue from \"../../containers/Room/Queue\";\nimport Controls from \"../../containers/Room/Controls\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = RouteComponentProps<{\n  room_id: string;\n}>;\n\nclass Room extends Component<Props & MappedProps> {\n  public componentDidMount = () => {\n    this.props.onEnter();\n  };\n\n  public componentWillUnmount = () => {\n    this.props.onExit();\n  };\n\n  public render = () => {\n    const {\n      color: { fg, bg }\n    } = this.props;\n    return (\n      <div\n        className=\"Room\"\n        style={{\n          color: `rgb(${fg.r}, ${fg.g}, ${fg.b})`,\n          backgroundColor: `rgb(${bg.r}, ${bg.g}, ${bg.b})`\n        }}\n      >\n        <Head />\n        <Queue />\n        <Controls />\n      </div>\n    );\n  };\n}\n\nexport default withRouter(Room);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport * as qs from \"qs\";\n//\nimport { RootState } from \"../../reducers\";\nimport Room, { Props } from \"../../components/Room\";\nimport { enterRoom, exitRoom } from \"../../actions/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState, ownProps: Props) => ({\n  color: state.rooms.room_color\n});\n\nconst dispatchToProps = (\n  dispatch: ThunkDispatch<RootState, any, any>,\n  ownProps: Props\n) => {\n  const { key } = qs.parse(ownProps.location.search.substr(1)) as {\n    key?: string;\n  };\n  return {\n    onEnter: () =>\n      dispatch(enterRoom(ownProps.match.params.room_id, key || \"\")),\n    onExit: () => dispatch(exitRoom())\n  };\n};\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Room);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Splash\";\nimport IconButton from \"../Common/IconButton\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass Splash extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const { loggedIn, onCreateRoom, onConnectUser, t } = this.props;\n    return (\n      <div className=\"Splash\">\n        <div className=\"Top\">\n          <div className=\"Logo\">\n            <Link to=\"/\">Party</Link>\n          </div>\n          <div className=\"PoweredWith\">\n            <span>{t(\"splash.powered_with\")}</span>\n            <a\n              href=\"https://www.deezer.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                src=\"/images/deezer.svg\"\n                height=\"20px\"\n                title=\"Deezer\"\n                alt=\"Deezer Logo\"\n              />\n            </a>\n          </div>\n        </div>\n        <div className=\"Middle\">\n          <div className=\"Menu\">\n            {loggedIn ? (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"plus\"\n                  onClick={onCreateRoom}\n                  size=\"L\"\n                  title={t(\"rooms.create\")}\n                />\n              </div>\n            ) : (\n              <>\n                <div className=\"MenuItem\">\n                  <IconButton\n                    displayTitle={true}\n                    onClick={onConnectUser}\n                    icon=\"sign-in\"\n                    size=\"L\"\n                    title={t(\"users.connect\")}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        <div className=\"Bottom\">\n          <div className=\"Menu\">\n            {loggedIn ? (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"sign-out\"\n                  onClick={this.onDisconnect}\n                  size=\"M\"\n                  title={t(\"users.disconnect\")}\n                />\n              </div>\n            ) : (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"info\"\n                  onClick={() => {}}\n                  size=\"M\"\n                  title={t(\"splash.CGU\")}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  onDisconnect = () => {\n    const { onConfirm, onDisconnectUser, t } = this.props;\n    onConfirm(t(\"users.confirm_disconnect\"), onDisconnectUser);\n  };\n}\n\nexport default withTranslation()(Splash);\n","import { RootState } from \"../reducers\";\n\nexport const extractUser = (state: RootState) => state.users.user_info;\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { UserInfo } from \"../utils/users\";\nimport { FirebaseUser } from \"../utils/firebase\";\nimport { displayError } from \"./messages\";\n\n// ------------------------------------------------------------------\n\nexport type UsersAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setUser>\n  | ReturnType<typeof setUserAccess>;\n\nconst fetching = () => createAction(\"users/FETCHING\");\nconst success = () => createAction(\"users/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"users/ERROR\", error);\nconst reset = () => createAction(\"users/RESET\");\nconst setUser = (\n  user: ReturnType<typeof FirebaseUser> | null,\n  info: UserInfo | null\n) => createAction(\"users/SET_USER\", { info, user });\nconst setUserAccess = (id: string, secret: string) =>\n  createAction(\"users/SET_USER_ACCESS\", { id, secret });\n\n// ------------------------------------------------------------------\n\nexport const createUser = (\n  name: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  try {\n    console.debug(\"Creating user...\");\n    const id = v4();\n    await FirebaseUser(id, secret).update({ name });\n    dispatch(connectUser(id, secret));\n  } catch (err) {\n    dispatch(displayError(\"Cannot create user\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_CB: any = null;\n\nexport const connectUser = (id: string, secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    users: { user }\n  } = getState();\n  if (!user || user.id !== id) {\n    dispatch(disconnectUser());\n    try {\n      console.debug(\"Connection user...\", { id, secret });\n      const newUser = FirebaseUser(id);\n      dispatch(setUser(newUser, await newUser.wait()));\n      dispatch(setUserAccess(id, secret));\n      FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n        const newInfo = snapshot.val() as UserInfo;\n        dispatch(setUser(newUser, newInfo));\n      };\n      newUser.subscribeInfo(FIREBASE_CB);\n    } catch (err) {\n      dispatch(displayError(\"Cannot connect user\", err));\n      dispatch(setUserAccess(\"\", \"\"));\n    }\n  }\n};\n\nexport const disconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    users: { user }\n  } = getState();\n  if (user) {\n    console.debug(\"Disconnecting user...\");\n    user.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_CB = null;\n    setUser(null, null);\n    dispatch(setUserAccess(\"\", \"\"));\n  }\n};\n\nexport const reconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    users: {\n      user_access: { id, secret }\n    }\n  } = getState();\n  if (id && secret) {\n    console.debug(\"Reconnecting user...\", { id, secret });\n    dispatch(connectUser(id, secret));\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Splash from \"../../components/Splash\";\nimport { extractUser } from \"../../selectors/users\";\nimport { openModal, confirmModal } from \"../../actions/modals\";\nimport { disconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  loggedIn: !!state.users.user_access.id,\n  user: extractUser(state),\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onConfirm: (question: string, onConfirmed: () => void) => {\n    dispatch(confirmModal(question, onConfirmed));\n  },\n  onCreateRoom: () => dispatch(openModal({ type: \"CreateRoom\", props: null })),\n  onConnectUser: () => dispatch(openModal({ type: \"CreateUser\", props: null })),\n  onDisconnectUser: () => dispatch(disconnectUser()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Splash);\n","import React, { Component, FormEvent, ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Modals/Modal\";\nimport IconButton from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n  className?: string;\n  title: string;\n  renderFoot?: () => React.ReactNode;\n  onSubmit?: () => void;\n};\n\nclass Modal extends Component<Props & MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      children,\n      className,\n      title,\n      renderFoot,\n      onClose,\n      onPop,\n      has_prev_modal,\n      t,\n    } = this.props;\n    return (\n      <form className={classNames(\"Modal\", className)} onSubmit={this.onSubmit}>\n        <div className=\"ModalHead\">\n          <IconButton\n            kind=\"special\"\n            className={classNames(\"ModalHeadBack\", {\n              hidden: !has_prev_modal,\n            })}\n            icon=\"angle-left\"\n            title=\"Back\"\n            onClick={onPop}\n          />\n          <div className=\"ModalTitle\">{title}</div>\n          <IconButton\n            kind=\"special\"\n            className=\"ModalHeadClose\"\n            onClick={onClose}\n            title={t(\"cancel\")}\n            icon=\"times\"\n          />\n        </div>\n        <div className=\"ModalBody\">{children}</div>\n        <div className=\"ModalFoot\">{renderFoot && renderFoot()}</div>\n      </form>\n    );\n  };\n\n  private onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  };\n}\n\nexport default withTranslation()(Modal);\n","import { connect } from \"react-redux\";\n//\nimport Modal from \"../../components/Modals/Modal\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  has_prev_modal: state.modals.stack.length > 1\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onClose: () => dispatch(popModal()),\n  onPop: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport Modal from \"../../containers/Modals/Modal\";\nimport \"./FormModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  className?: string;\n  onSubmit: () => void;\n  renderButtons: () => React.ReactNode;\n  title: string;\n};\n\nclass FormModal extends Component<Props> {\n  public render = () => {\n    const { children, className, renderButtons, title, onSubmit } = this.props;\n    return (\n      <Modal\n        className={classNames(\"FormModal\", className)}\n        title={title}\n        renderFoot={renderButtons}\n        onSubmit={onSubmit}\n      >\n        {children}\n      </Modal>\n    );\n  };\n}\n\nexport default FormModal;\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Modals/ConfirmModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\nexport type ConfirmModalProps = {\n  question: string;\n  onCanceled?: () => void;\n  onConfirmed: () => void;\n};\n\nclass ConfirmModal extends Component<\n  ConfirmModalProps & MappedProps & WithTranslation\n> {\n  public render = () => {\n    const { question, t } = this.props;\n    return (\n      <FormModal\n        title={t(\"confirm\")}\n        onSubmit={this.props.onConfirmed}\n        renderButtons={this.renderButtons}\n      >\n        {question}\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"cancel\")}\n          kind=\"primary\"\n          icon=\"plus\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onCancel} />\n      </>\n    );\n  };\n}\n\nexport default withTranslation()(ConfirmModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport ConfirmModal, {\n  ConfirmModalProps,\n} from \"../../components/Modals/ConfirmModal\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (\n  dispatch: ThunkDispatch<RootState, any, any>,\n  ownProps: ConfirmModalProps\n) => ({\n  onCancel: () => {\n    dispatch(popModal());\n    if (ownProps.onCanceled) {\n      ownProps.onCanceled();\n    }\n  },\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(ConfirmModal);\n","import React, { Component, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/ConnectUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  id: string;\n  secret: string;\n};\n\nclass ConnectUserModal extends Component<MappedProps & WithTranslation, State> {\n  private idRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    id: \"\",\n    secret: \"\",\n  };\n\n  public componentDidMount() {\n    if (this.idRef.current) {\n      this.idRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { id, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"users.connection\")}\n        onSubmit={this.onConnect}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-id\">{t(\"users.user_id\")}</label>\n          <input\n            id=\"modal-id\"\n            type=\"text\"\n            placeholder={t(\"users.id_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={id}\n            ref={this.idRef}\n            onChange={(e) => {\n              this.setState({ id: e.target.value });\n            }}\n          />\n        </div>\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">{t(\"users.secret\")}</label>\n          <input\n            id=\"modal-secret\"\n            type=\"password\"\n            placeholder={t(\"users.secret_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            onChange={(e) => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"users.connect\")}\n          kind=\"primary\"\n          icon=\"sign-in\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n        <IconButton\n          title={t(\"users.create\")}\n          kind=\"default\"\n          icon=\"plus\"\n          onClick={this.props.onToggle}\n        />\n      </>\n    );\n  };\n\n  private onConnect = () => {\n    const { onClose, onConnect, onError, t } = this.props;\n    const { id, secret } = this.state;\n    if (id.trim().length === 0) {\n      onError(t(\"users.id_is_invalid\"));\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(t(\"users.secret_is_invalid\"));\n      return;\n    }\n    onConnect(id, secret);\n    onClose();\n  };\n}\n\nexport default withTranslation()(ConnectUserModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport ConnectUserModal from \"../../components/Users/ConnectUserModal\";\nimport { connectUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onConnect: (id: string, secret: string) => dispatch(connectUser(id, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"CreateUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(ConnectUserModal);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  id: string;\n  label: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  value: string;\n};\n\nclass SecretField extends Component<Props & MappedProps & WithTranslation> {\n  public render = () => {\n    const { id, label, onChange, placeholder, value } = this.props;\n    return (\n      <div className=\"ModalField\">\n        <label htmlFor={id}>{label}</label>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <input\n            style={{\n              flexGrow: 1,\n              marginRight: \"0.5rem\",\n            }}\n            id={id}\n            type=\"password\"\n            placeholder={placeholder}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n          />\n          <IconButton\n            icon=\"clipboard\"\n            onClick={this.onCopyToClipboard}\n            size=\"M\"\n            title={`Copy to Clipboard`}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyToClipboard = async () => {\n    const { onMessage, value, t } = this.props;\n    await copyToClipboard(value);\n    onMessage(t(\"secret_copied_to_clipboard\"));\n  };\n}\n\nexport default withTranslation()(SecretField);\n","import { connect } from \"react-redux\";\n//\nimport SecretField from \"../../components/Modals/SecretField\";\nimport { RootState } from \"../../reducers\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message))\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretField);\n","import React, { Component, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/CreateRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\nlet ROOM_COUNTER = 1;\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateRoomModal extends Component<MappedProps & WithTranslation, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4(),\n  };\n\n  public componentDidMount() {\n    this.setState({\n      name: `${this.props.t(\"rooms.room\")} ${ROOM_COUNTER}`,\n    });\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"rooms.room_creation\")}\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">{t(\"rooms.name\")}</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder={t(\"rooms.name_placeholder\")}\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label={t(\"rooms.key\")}\n          placeholder={t(\"rooms.key_placeholder\")}\n          value={secret}\n          onChange={(newSecret) => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"rooms.create\")}\n          kind=\"primary\"\n          icon=\"plus\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </>\n    );\n  };\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError, t } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(t(\"rooms.name_is_invalid\"));\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(t(\"rooms.secret_is_invalid\"));\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n    ROOM_COUNTER++;\n  };\n}\n\nexport default withTranslation()(CreateRoomModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateRoomModal from \"../../components/Room/CreateRoomModal\";\nimport { createRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createRoom(name, secret)),\n  onError: (message: string) => dispatch(displayError(message))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateRoomModal);\n","import React, { Component, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/CreateUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\nlet USER_COUNTER = 1;\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateUserModal extends Component<MappedProps & WithTranslation, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4(),\n  };\n\n  public componentDidMount() {\n    this.setState({\n      name: `${this.props.t(\"users.user\")} ${USER_COUNTER}`,\n    });\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"users.user_creation\")}\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">{t(\"users.name\")}</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder={t(\"users.name_placeholder\")}\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label={t(\"users.secret\")}\n          placeholder={t(\"users.secret_placeholder\")}\n          value={secret}\n          onChange={(newSecret) => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"users.create\")}\n          kind=\"primary\"\n          icon=\"plus\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n        <IconButton\n          title={t(\"users.connect\")}\n          kind=\"default\"\n          icon=\"sign-in\"\n          onClick={this.props.onToggle}\n        />\n      </>\n    );\n  };\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError, t } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(t(\"users.name_is_invalid\"));\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(t(\"users.secret_is_invalid\"));\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n    USER_COUNTER++;\n  };\n}\n\nexport default withTranslation()(CreateUserModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateUserModal from \"../../components/Users/CreateUserModal\";\nimport { createUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createUser(name, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"ConnectUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateUserModal);\n","// import Axios from \"axios\";\nimport jsonp from \"jsonp\";\n\n// ------------------------------------------------------------------\n\ntype SearchResult<T> = {\n  data: T[];\n  total: number;\n};\n\nexport type SearchAllResults = {\n  albums: SearchResult<ApiAlbum>;\n  playlists: SearchResult<ApiPlaylist>;\n  tracks: SearchResult<ApiTrack>;\n};\n\nexport type ApiAlbum = {\n  artist: {\n    id: number;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  available: boolean;\n  cover_big: string;\n  cover_small: string;\n  id: number;\n  link: string;\n  nb_tracks: number;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  type: \"album\";\n};\n\nexport type ApiPlaylist = {\n  description: string;\n  id: number;\n  link: string;\n  nb_tracks: number;\n  picture_big: string;\n  picture_small: string;\n  public: true;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  type: \"playlist\";\n};\n\nexport type ApiTrack = {\n  album: {\n    id: number;\n    title: string;\n    cover_big: string;\n    cover_small: string;\n  };\n  artist: {\n    id: number;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  duration: number;\n  id: number;\n  link: string;\n  preview: string;\n  readable: boolean;\n  title: string;\n  type: \"track\";\n};\n\n// ------------------------------------------------------------------\n\nexport const DeezerApi = () => {\n  const API_BASE = \"https://api.deezer.com\";\n\n  const asyncJsonp = <T>(url: string): Promise<T> =>\n    new Promise((resolve, reject) => {\n      jsonp(url, void 0, (err, data) => {\n        if (err) {\n          reject(new Error(err.message));\n        } else {\n          resolve(data);\n        }\n      });\n    });\n\n  const call = async <T>(path: string, qs?: string) => {\n    // We have to rely on jsonp because the Deezer api is CORS restricted\n    const fullpath = qs\n      ? `${API_BASE}/${path}?${qs}&output=jsonp&callback=`\n      : `${API_BASE}/${path}?output=jsonp&callback=`;\n    return await asyncJsonp<T>(fullpath);\n  };\n\n  const search = <T>(type: string, query: string) =>\n    call<SearchResult<T>>(`search/${type}`, `q=${encodeURIComponent(query)}`);\n\n  const load = <T>(type: string, id: string) => call<T>(`/${type}/${id}`);\n\n  const searchAlbums = (query: string) => search<ApiAlbum>(\"album\", query);\n\n  const searchPlaylists = (query: string) =>\n    search<ApiPlaylist>(\"playlist\", query);\n\n  const searchTracks = (query: string) => search<ApiTrack>(\"track\", query);\n\n  const searchAll = async (query: string): Promise<SearchAllResults> => {\n    const [albums, playlists, tracks] = await Promise.all([\n      searchAlbums(query),\n      searchPlaylists(query),\n      searchTracks(query)\n    ]);\n    return { albums, playlists, tracks };\n  };\n\n  const loadAlbum = async (id: string) => {\n    const album = await load<ApiAlbum>(\"album\", id);\n    album.tracks!.data.forEach(track => {\n      track.album = album;\n      track.artist.link = `https://www.deezer.com/artist/${track.artist.id}`;\n    });\n    return album;\n  };\n\n  const loadPlaylist = (id: string) => load<ApiPlaylist>(\"playlist\", id);\n\n  const loadTrack = (id: string) => load<ApiTrack>(\"track\", id);\n\n  return {\n    searchAll,\n    loadAlbum,\n    loadPlaylist,\n    loadTrack\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const DEFAULT_API = DeezerApi();\n","import React, { ReactNode } from \"react\";\n//\nimport { MediaType } from \"../../utils/medias\";\n\n// ------------------------------------------------------------------\n\nconst MAX_RESULTS_COUNT = 5;\n\n// ------------------------------------------------------------------\n\nconst SearchResultCategory = <T extends { id: number }>({\n  items,\n  label,\n  cb,\n}: {\n  items: T[];\n  label: string;\n  type: MediaType;\n  cb: (item: T) => ReactNode;\n}) =>\n  items.length > 0 ? (\n    <>\n      <div className=\"ModalField\">\n        <label>{label}</label>\n      </div>\n      {items.slice(0, MAX_RESULTS_COUNT).map((item) => (\n        <div key={item.id} className=\"ModalField\">\n          <div className=\"SearchResultItem\">{cb(item)}</div>\n        </div>\n      ))}\n    </>\n  ) : null;\n\nexport default SearchResultCategory;\n","import React, { Component, createRef, RefObject } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/SearchModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport { DEFAULT_API, SearchAllResults } from \"../../utils/deezer\";\nimport { Album, Playlist, Track } from \"./Medias\";\nimport { MediaType } from \"../../utils/medias\";\nimport SearchResultCategory from \"./SearchResultCategory\";\nimport \"./SearchModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  mediaId: number;\n  mediaType: MediaType;\n  query: string;\n  results: SearchAllResults;\n};\n\nclass SearchModal extends Component<MappedProps & WithTranslation, State> {\n  private queryRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    mediaId: 0,\n    mediaType: \"track\",\n    query: \"\",\n    results: {\n      albums: { data: [], total: 0 },\n      playlists: { data: [], total: 0 },\n      tracks: { data: [], total: 0 },\n    },\n  };\n\n  public componentDidMount() {\n    if (this.queryRef.current) {\n      this.queryRef.current.focus();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.props.onStopPreview();\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    return (\n      <FormModal\n        className=\"SearchModal\"\n        title={t(\"medias.medias_search\")}\n        onSubmit={this.onSearch}\n        renderButtons={this.renderButtons}\n      >\n        {this.renderInputs()}\n        {this.renderResults()}\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"medias.search\")}\n          kind=\"primary\"\n          icon=\"search\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </>\n    );\n  };\n\n  private renderInputs = () => {\n    const { t } = this.props;\n    const { query } = this.state;\n    return (\n      <div className=\"ModalField\">\n        <input\n          id=\"modal-query\"\n          type=\"text\"\n          placeholder={t(\"medias.search_placeholder\")}\n          maxLength={100}\n          minLength={2}\n          required={true}\n          value={query}\n          ref={this.queryRef}\n          onChange={(e) => {\n            this.setState({ query: e.target.value });\n          }}\n        />\n      </div>\n    );\n  };\n\n  private renderResults = () => {\n    const { locked, t } = this.props;\n    const {\n      mediaId,\n      mediaType,\n      results: { albums, playlists, tracks },\n    } = this.state;\n    return (\n      <>\n        <SearchResultCategory\n          label={t(\"medias.albums\")}\n          type=\"album\"\n          items={albums.data}\n          cb={(album) => (\n            <Album\n              actions={\n                !locked ? (\n                  <IconButton\n                    title={t(\"medias.add\")}\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"album\", album.id)}\n                  />\n                ) : null\n              }\n              album={album}\n              playable={true}\n              playing={mediaType === \"album\" && mediaId === album.id}\n              onPlay={() => this.onStartPreview(\"album\", album.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n        <SearchResultCategory\n          label={t(\"medias.playlists\")}\n          type=\"playlist\"\n          items={playlists.data}\n          cb={(playlist) => (\n            <Playlist\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Add\"\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"playlist\", playlist.id)}\n                  />\n                ) : null\n              }\n              playlist={playlist}\n              playable={true}\n              playing={mediaType === \"playlist\" && mediaId === playlist.id}\n              onPlay={() => this.onStartPreview(\"playlist\", playlist.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n        <SearchResultCategory\n          label={t(\"medias.tracks\")}\n          type=\"track\"\n          items={tracks.data}\n          cb={(track) => (\n            <Track\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Add\"\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"track\", track.id)}\n                  />\n                ) : null\n              }\n              track={track}\n              playable={true}\n              playing={mediaType === \"track\" && mediaId === track.id}\n              onPlay={() => this.onStartPreview(\"track\", track.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n      </>\n    );\n  };\n\n  private onSearch = async () => {\n    const { query } = this.state;\n    if (query.trim().length > 0) {\n      this.setState({ results: await DEFAULT_API.searchAll(query) });\n    }\n  };\n\n  private onSelect = (mediaType: MediaType, mediaId: number) =>\n    this.props.onSelect(mediaType, mediaId.toString());\n\n  private onStartPreview = (mediaType: MediaType, mediaId: number) => {\n    this.props.onStartPreview(mediaType, mediaId.toString());\n    this.setState({\n      mediaId,\n      mediaType,\n    });\n  };\n\n  private onStopPreview = () => {\n    this.props.onStopPreview();\n    this.setState({\n      mediaId: 0,\n      mediaType: \"track\",\n    });\n  };\n}\n\nexport default withTranslation()(SearchModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport SearchModal from \"../../components/Room/SearchModal\";\nimport { popModal } from \"../../actions/modals\";\nimport { previewContainer } from \"../../actions/containers\";\nimport { queueTracks } from \"../../actions/rooms\";\nimport { stopPreview } from \"../../actions/player\";\nimport { MediaType } from \"../../utils/medias\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\nimport { previewTrack } from \"../../actions/tracks\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onSelect: (mediaType: MediaType, mediaId: string) =>\n    dispatch(\n      \"track\" === mediaType\n        ? queueTracks(\"deezer\", \"album\", \"\", mediaId)\n        : queueTracks(\"deezer\", mediaType, mediaId, \"\")\n    ),\n  onStartPreview: (mediaType: MediaType, mediaId: string) => {\n    dispatch(\n      \"track\" === mediaType\n        ? previewTrack(\"deezer\", mediaType, mediaId)\n        : previewContainer(\"deezer\", mediaType, mediaId)\n    );\n  },\n  onStopPreview: () => dispatch(stopPreview()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(SearchModal);\n","import React, { Component, createRef, RefObject } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/UnlockRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  secret: string;\n};\n\nclass UnlockRoomModal extends Component<MappedProps & WithTranslation, State> {\n  private secretRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    secret: \"\",\n  };\n\n  public componentDidMount() {\n    if (this.secretRef.current) {\n      this.secretRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"rooms.room_unlocking\")}\n        onSubmit={this.onUnlock}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">{t(\"rooms.key\")}</label>\n          <input\n            id=\"modal-secret\"\n            type=\"password\"\n            placeholder={t(\"rooms.key_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            ref={this.secretRef}\n            onChange={(e) => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"rooms.unlock\")}\n          kind=\"primary\"\n          icon=\"unlock\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </>\n    );\n  };\n\n  private onUnlock = () => {\n    const { onClose, onUnlock } = this.props;\n    onUnlock(this.state.secret);\n    onClose();\n  };\n}\n\nexport default withTranslation()(UnlockRoomModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport UnlockRoomModal from \"../../components/Room/UnlockRoomModal\";\nimport { unlockRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onUnlock: (secret: string) => dispatch(unlockRoom(secret))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(UnlockRoomModal);\n","import React, { Component, MouseEvent } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/Modals\";\nimport { ModalPrereq } from \"../../actions/modals\";\nimport ConfirmModal from \"../../containers/Modals/ConfirmModal\";\nimport ConnectUserModal from \"../../containers/Users/ConnectUserModal\";\nimport CreateRoomModal from \"../../containers/Room/CreateRoomModal\";\nimport CreateUserModal from \"../../containers/Users/CreateUserModal\";\nimport SearchModal from \"../../containers/Room/SearchModal\";\nimport UnlockRoomModal from \"../../containers/Room/UnlockRoomModal\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst TransitionTimeout = 300;\n\n// ------------------------------------------------------------------\n\nexport const getModal = (prereq: ModalPrereq) => {\n  switch (prereq.type) {\n    case \"Confirm\":\n      return <ConfirmModal {...prereq.props} />;\n    case \"ConnectUser\":\n      return <ConnectUserModal />;\n    case \"CreateRoom\":\n      return <CreateRoomModal />;\n    case \"CreateUser\":\n      return <CreateUserModal />;\n    case \"Search\":\n      return <SearchModal />;\n    case \"UnlockRoom\":\n      return <UnlockRoomModal />;\n  }\n};\n\n// ------------------------------------------------------------------\n\ntype State = {\n  curr_prereq?: ModalPrereq;\n  prev_prereq?: ModalPrereq; // Keeping prev modal prereq for modal fadeout\n};\n\nclass Modals extends Component<MappedProps, State> {\n  public readonly state: State = {\n    curr_prereq: void 0,\n    prev_prereq: void 0,\n  };\n\n  public componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentDidUpdate = (prevProps: MappedProps) => {\n    const oldPrereq = prevProps.prereq;\n    const newPrereq = this.props.prereq;\n    if (oldPrereq !== newPrereq) {\n      // Hide current modal before showing new one (if there is a new one)\n      this.setState(\n        {\n          curr_prereq: void 0,\n          prev_prereq: oldPrereq,\n        },\n        () => {\n          if (newPrereq) {\n            setTimeout(() => {\n              this.setState({\n                curr_prereq: newPrereq,\n              });\n            }, TransitionTimeout);\n          }\n        }\n      );\n    }\n  };\n\n  public render = () => {\n    const { curr_prereq, prev_prereq } = this.state;\n    const prereq = curr_prereq || prev_prereq;\n    let modal = null;\n    if (prereq) {\n      modal = getModal(prereq);\n    }\n    return (\n      <CSSTransition\n        in={!!curr_prereq}\n        timeout={TransitionTimeout}\n        unmountOnExit={true}\n      >\n        <div className=\"ModalOverlay\" onClick={this.onClickOverlay}>\n          {modal && (\n            <div\n              className=\"ModalWrapper\"\n              role=\"dialog\"\n              onClick={this.onClickWrapper}\n            >\n              {modal}\n            </div>\n          )}\n        </div>\n      </CSSTransition>\n    );\n  };\n\n  private onClickOverlay = (event: MouseEvent) => {\n    // Clicking overlay will close current modal\n    event.stopPropagation();\n    this.props.onCloseModal();\n  };\n\n  private onClickWrapper = (event: MouseEvent) => {\n    // Clicking wrapper modal will not progagate to overlay which would close current modal\n    event.stopPropagation();\n  };\n\n  private onKeyDown = (e: KeyboardEvent) => {\n    if (e.keyCode === 27) {\n      this.props.onCloseModal();\n    }\n  };\n}\n\nexport default Modals;\n","import { connect } from \"react-redux\";\n//\nimport Modals from \"../../components/Modals\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  prereq:\n    state.modals.stack.length > 0\n      ? state.modals.stack[state.modals.stack.length - 1]\n      : void 0\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onCloseModal: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modals);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/App/Messages\";\nimport { Message } from \"../../utils/messages\";\nimport \"./Messages.scss\";\n\n// ------------------------------------------------------------------\n\nclass Messages extends React.Component<MappedProps> {\n  public render = () => (\n    <div className=\"Messages\">\n      <TransitionGroup>\n        {this.props.messages.map((message) => this.renderMessage(message))}\n      </TransitionGroup>\n    </div>\n  );\n\n  public renderMessage(message: Message) {\n    return (\n      <CSSTransition\n        key={message.id}\n        classNames=\"Message\"\n        timeout={{ enter: 200, exit: 200 }}\n      >\n        <div className={classNames(\"Message\", \"Message-\" + message.type)}>\n          {message.text}\n        </div>\n      </CSSTransition>\n    );\n  }\n}\n\nexport default Messages;\n","import { RootState } from \"../reducers\";\n\n// ------------------------------------------------------------------\n\nexport const extractMessages = (state: RootState) =>\n  state.messages.sort((m1, m2) => m1.stamp - m2.stamp);\n","import { connect } from \"react-redux\";\n//\nimport { RootState } from \"../../reducers\";\nimport Messages from \"../../components/App/Messages\";\nimport { extractMessages } from \"../../selectors/messages\";\n\n// ------------------------------------------------------------------\n\nexport type MappedProps = ReturnType<typeof mapStateToProps>;\n\nconst mapStateToProps = (state: RootState) => ({\n  messages: extractMessages(state),\n});\n\nexport default connect(mapStateToProps)(Messages);\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/App\";\nimport Room from \"../../containers/Room\";\nimport Splash from \"../../containers/Splash\";\nimport Modals from \"../../containers/Modals\";\nimport Messages from \"../../containers/App/Messages\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass App extends Component<MappedProps> {\n  public componentDidMount = async () => {\n    this.props.onReconnect();\n  };\n\n  public render = () => {\n    return (\n      <div className=\"App\">\n        <Modals />\n        <Switch>\n          <Route exact={true} path=\"/room/:room_id\" component={Room} />\n          <Route exact={true} path=\"/\" component={Splash} />\n          <Redirect to=\"/\" />\n        </Switch>\n        <Messages />\n      </div>\n    );\n  };\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport App from \"../../components/App\";\nimport { reconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onReconnect: () => dispatch(reconnectUser())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(App);\n","// ------------------------------------------------------------------\n\nlet AUDIO_CONTEXT: AudioContext | null = null;\n\nconst getContext = () => {\n  if (!AUDIO_CONTEXT) {\n    AUDIO_CONTEXT = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n  }\n  return AUDIO_CONTEXT;\n};\n\nconst decodeAudioData = (encodedBuffer: ArrayBuffer): Promise<AudioBuffer> =>\n  new Promise((resolve, reject) =>\n    getContext().decodeAudioData(encodedBuffer, resolve, reject)\n  );\n\nconst loadAudioBuffer = (url: string): Promise<AudioBuffer> =>\n  new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest();\n    req.open(\"GET\", url, true);\n    req.responseType = \"arraybuffer\";\n    req.addEventListener(\n      \"error\",\n      () => reject(new Error(\"Audio buffer loading failed\")),\n      false\n    );\n    req.addEventListener(\n      \"load\",\n      async () => {\n        try {\n          resolve(await decodeAudioData(req.response as ArrayBuffer));\n        } catch (error) {\n          console.debug(\"An error occurred while decoding audio data\");\n          reject(error);\n        }\n      },\n      false\n    );\n    req.send();\n  });\n\n// ------------------------------------------------------------------\n\n// Fix Safari and iOS Audio Context\n(() => {\n  const fixAudioContext = () => {\n    document.removeEventListener(\"click\", fixAudioContext);\n    document.removeEventListener(\"touchstart\", fixAudioContext);\n    console.debug(\"Fixing audio context...\");\n    const context = getContext();\n    // Create empty buffer, connect to output, play sound\n    var buffer = context.createBuffer(1, 1, 22050);\n    var source = context.createBufferSource();\n    source.buffer = buffer;\n    source.connect(context.destination);\n    source.start(0);\n  };\n  document.addEventListener(\"click\", fixAudioContext);\n  document.addEventListener(\"touchstart\", fixAudioContext);\n})();\n\n// ------------------------------------------------------------------\n\nexport type PlayerCallbacks = {\n  onStart: () => void;\n  onStop: () => void;\n};\n\nexport const Player = (chainPlay: boolean) => {\n  let analyserNode: AnalyserNode | null = null;\n  let gainNode: GainNode | null = null;\n  let _node: AudioNode | null = null;\n  let _buffer: AudioBuffer | null = null;\n  let _bufferUrl: string = \"\";\n  let _sourceNode: AudioBufferSourceNode | null = null;\n  let _sourceNodeStartTime = 0;\n  let _trackId = \"\";\n  let _trackPosition = -1;\n\n  const getOrCreateNode = () => {\n    if (!_node) {\n      const context = getContext();\n      _node = context.destination;\n\n      gainNode = context.createGain();\n      gainNode.gain.value = 1.0;\n      gainNode.connect(_node);\n      _node = gainNode;\n\n      analyserNode = context.createAnalyser();\n      analyserNode.fftSize = 128;\n      // analyserNode.minDecibels = -90;\n      // analyserNode.maxDecibels = -10;\n      analyserNode.connect(_node);\n      _node = analyserNode;\n    }\n    return _node;\n  };\n\n  const isPlaying = () => !!_sourceNode;\n\n  const getPlayingTrackID = () => _trackId;\n\n  const getPlayingTrackPosition = () => _trackPosition;\n\n  // Percentage [0, 1]\n  const getPlayingTrackPercent = () => {\n    if (_buffer && _sourceNode) {\n      return (\n        (getContext().currentTime - _sourceNodeStartTime) / _buffer.duration\n      );\n    }\n    return 0;\n  };\n\n  const _loadBuffer = async (url: string) => {\n    // TODO: cache N last audio buffers\n    if (_bufferUrl !== url) {\n      console.debug(\"Loading audio...\", { url });\n      _buffer = await loadAudioBuffer(url);\n      _bufferUrl = url;\n    }\n  };\n\n  const play = async (\n    trackPosition: number,\n    trackId: string,\n    trackUrl: string,\n    offset: number\n  ) => {\n    await stop();\n    await _loadBuffer(trackUrl); // TODO: warning if loadBuffer takes long for some reason and user clicks stop before end, next part of this function will continue after stop have been requested\n    console.debug(\"Starting audio...\", { trackPosition, trackId, trackUrl });\n    _trackId = trackId;\n    _trackPosition = trackPosition;\n    _sourceNode = getContext().createBufferSource();\n    _sourceNode.buffer = _buffer;\n    _sourceNode.loop = false;\n    _sourceNode.loopStart = 0;\n    _sourceNode.loopEnd = 0;\n    _sourceNode.onended = () => {\n      console.debug(\"Audio terminated...\");\n      _sourceNode = null;\n      if (chainPlay) {\n        _trackPosition++;\n      }\n    };\n    _sourceNode.playbackRate.value = 1.0;\n    _sourceNode.connect(getOrCreateNode());\n    _sourceNode.start(0, offset); // A new BufferSource must be created for each start\n    _sourceNodeStartTime = getContext().currentTime;\n  };\n\n  const stop = async (): Promise<void> =>\n    new Promise((resolve) => {\n      if (null !== _sourceNode) {\n        console.debug(\"Stopping audio...\");\n        _sourceNode.onended = () => {\n          console.debug(\"Forced audio termination...\");\n          resolve();\n        };\n        _sourceNode.stop();\n        _sourceNode = null;\n        _sourceNodeStartTime = 0;\n        _trackPosition = -1;\n      } else {\n        resolve();\n      }\n    });\n\n  return {\n    analyserNode,\n    gainNode,\n    getPlayingTrackID,\n    getPlayingTrackPercent,\n    getPlayingTrackPosition,\n    isPlaying,\n    play,\n    stop,\n  };\n};\n","export default {\n  splash: {\n    CGU: \"CGU\",\n    powered_with: \"Powered with\",\n  },\n  users: {\n    user: \"User\",\n    confirm_disconnect: \"Are you sure you want to disconnect?\",\n    connect: \"Connect\",\n    connection: \"Connection\",\n    create: \"Create a user\",\n    disconnect: \"Disconnect\",\n    user_creation: \"User Registration\",\n    id_is_invalid: \"ID is invalid\",\n    id_placeholder: \"User ID...\",\n    user_id: \"User ID\",\n    name_is_invalid: \"Name is invalid\",\n    name_placeholder: \"User Name...\",\n    name: \"User Name\",\n    secret_is_invalid: \"Secret is invalid\",\n    secret_placeholder: \"User Secret...\",\n    secret: \"User Secret\",\n  },\n  rooms: {\n    clear: \"Clear all tracks\",\n    confirm_clear: \"Are you sure you want to remove all tracks?\",\n    confirm_exit: \"Are you sure you want to leave the room?\",\n    confirm_lock: \"Are you sure you want to lock the room?\",\n    copy_link: \"Copy Room Link to Clipboard\",\n    create: \"Create a room\",\n    empty: \"It's empty here, you should add some tracks...\",\n    exit: \"Exit Room\",\n    key_placeholder: \"Room Key...\",\n    key: \"Room Key\",\n    link_copied_to_clipboard: \"Room link has been copied to clipboard\",\n    loading: \"Loading...\",\n    locked: \"Locked (click to unlock)\",\n    name_is_invalid: \"Name is invalid\",\n    name_placeholderl: \"Room Name...\",\n    name: \"Room Name\",\n    room_creation: \"Room Creation\",\n    room_unlocking: \"Room Unlocking\",\n    room: \"Room\",\n    secret_is_invalid: \"Secret is invalid\",\n    unlock: \"Unlock\",\n    unlocked: \"Unlocked (click to lock)\",\n  },\n  medias: {\n    by: \"by {{artist}}\",\n    add: \"Add\",\n    remove: \"Remove\",\n    search: \"Search Media\",\n    search_placeholder: \"Search...\",\n    medias_search: \"Media Search\",\n    albums: \"Albums\",\n    playlists: \"Playlists\",\n    tracks: \"Tracks\",\n  },\n  player: {\n    backward: \"Backward\",\n    forward: \"Forward\",\n    play: \"Play\",\n    playing: \"Playing\",\n    stop: \"Stop\",\n  },\n  cancel: \"Cancel\",\n  secret_copied_to_clipboard: \"Secret has been copied to clipboard\",\n};\n","export default {\n  splash: {\n    CGU: \"CGU\",\n    powered_with: \"boosté avec\",\n  },\n  users: {\n    user: \"Utilisateur\",\n    confirm_disconnect: \"Êtes-vous sûr(e) de vouloir vous déconnecter ?\",\n    connect: \"Se connecter\",\n    connection: \"Connexion\",\n    create: \"Créer un utilisateur\",\n    disconnect: \"Se déconnecter\",\n    user_creation: \"Création d'un utilisateur\",\n    id_is_invalid: \"L'identifiant est invalide\",\n    id_placeholder: \"Identifiant...\",\n    user_id: \"Identifiant\",\n    name_is_invalid: \"Le nom est invalide\",\n    name_placeholder: \"Nom...\",\n    name: \"Nom\",\n    secret_is_invalid: \"Le secret est invalide\",\n    secret_placeholder: \"Secret...\",\n    secret: \"Secret\",\n  },\n  rooms: {\n    clear: \"Supprimer toutes les pistes\",\n    confirm_clear: \"Êtes-vous sûr(e) de vouloir supprimer toutes les pistes ?\",\n    confirm_exit: \"Êtes-vous sûr(e) de vouloir quitter la pièce ?\",\n    confirm_lock: \"Êtes-vous sûr(e) de vouloir verrouiller la pièce ?\",\n    copy_link: \"Copier le lien de la pièce dans le presse-papier\",\n    create: \"Créer une pièce\",\n    empty: \"Cette pièce est vide, vous devriez ajouter quelques pistes...\",\n    exit: \"Quitter la pièce\",\n    key_placeholder: \"Clef...\",\n    key: \"Clef\",\n    loading: \"Chargement...\",\n    link_copied_to_clipboard:\n      \"Le lien de la pièce a été copié dans le presse-papier\",\n    locked: \"Verrouillée (cliquer pour déverrouiller)\",\n    name_is_invalid: \"Le nom est invalide\",\n    name_placeholderl: \"Nom...\",\n    name: \"Nom\",\n    room_creation: \"Création d'une pièce\",\n    room_unlocking: \"Déverrouillage de la pièce\",\n    room: \"Pièce\",\n    secret_is_invalid: \"Le secret is invalide\",\n    unlock: \"Déverrouiller\",\n    unlocked: \"Déverrouillée (cliquer pour verrouiller)\",\n  },\n  medias: {\n    by: \"par {{artist}}\",\n    add: \"Ajouter\",\n    remove: \"Supprimer\",\n    search: \"Chercher des médias\",\n    search_placeholder: \"Recherche...\",\n    medias_search: \"Recherche de médias\",\n    albums: \"Albums\",\n    playlists: \"Playlists\",\n    tracks: \"Pistes\",\n  },\n  player: {\n    backward: \"Piste précédente\",\n    forward: \"Piste suivante\",\n    play: \"Lire\",\n    playing: \"En cours de lecture\",\n    stop: \"Arrêter\",\n  },\n  cancel: \"Annuler\",\n  secret_copied_to_clipboard: \"Le secret a été copié dans le presse-papier\",\n};\n","import i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n//\nimport en from \"../locales/en\";\nimport fr from \"../locales/fr\";\n\n// --------------------------------------------------------------\n\nexport const changeLanguage = (language: string) =>\n  i18next.changeLanguage(language);\n\n// --------------------------------------------------------------\n\nexport const initLocales = async (): Promise<void> =>\n  new Promise((resolve, reject) => {\n    console.log(\"Initializing language...\");\n    i18next.use(initReactI18next).init(\n      {\n        fallbackLng: \"en\",\n        lng: navigator.language || (navigator as any).userLanguage,\n        resources: {\n          \"en-US\": { translation: en },\n          \"fr-FR\": { translation: fr },\n        },\n        interpolation: {\n          escapeValue: false, // react is already safe from xss\n          format: (value, format, lng) => {\n            // if (format === \"uppercase\") return value.toUpperCase();\n            // if (value instanceof Date) return moment(value).format(format);\n            return value;\n          },\n        },\n      },\n      (error) => {\n        if (error) reject(error);\n        resolve();\n      }\n    );\n  });\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n//\nimport { rootReducer } from \"./reducers\";\nimport App from \"./containers/App\";\nimport { DEFAULT_API } from \"./utils/deezer\";\nimport { Player } from \"./utils/player\";\nimport { initLocales } from \"./utils/i18n\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst init = async () => {\n  const composeEnhancers =\n    process.env.NODE_ENV === \"development\" ? composeWithDevTools({}) : compose;\n\n  const deezer = DEFAULT_API;\n  const queuePlayer = Player(true);\n  const previewPlayer = Player(false);\n  initLocales();\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(\n        thunk.withExtraArgument({ deezer, queuePlayer, previewPlayer })\n      )\n    )\n  );\n\n  // const dispatch: Dispatch = store.dispatch.bind(store);\n\n  return store;\n};\n\n// ------------------------------------------------------------------\n\ninit().then((store) => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <Route path=\"/\" component={App} />\n      </HashRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n"],"sourceRoot":""}