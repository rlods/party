{"version":3,"sources":["reducers/containers.ts","reducers/messages.ts","reducers/modals.ts","reducers/player.ts","reducers/queue.ts","reducers/rooms.ts","reducers/tracks.ts","reducers/users.ts","utils/users.ts","reducers/index.ts","utils/rooms.ts","components/Common/Icon.tsx","components/Common/IconButton.tsx","utils/history.ts","components/Room/Controls.tsx","actions/index.ts","actions/messages.ts","actions/queue.ts","actions/tracks.ts","config/firebase.ts","utils/index.ts","utils/firebase.ts","actions/containers.ts","actions/rooms.ts","utils/colorpicker.ts","actions/player.ts","actions/modals.ts","containers/Room/Controls.ts","components/Room/Cover.tsx","components/Room/Medias.tsx","components/Room/Queue.tsx","selectors/tracks.ts","containers/Room/Queue.ts","utils/clipboard.ts","components/Room/Head.tsx","selectors/rooms.ts","containers/Room/Head.ts","components/Room/index.tsx","containers/Room/index.ts","components/Splash/Menu.tsx","actions/users.ts","containers/Splash/Menu.ts","components/Splash/index.tsx","containers/Splash/index.ts","components/Modals/Modal.tsx","containers/Modals/Modal.ts","components/Modals/FormModal.tsx","components/Users/ConnectUserModal.tsx","containers/Users/ConnectUserModal.ts","components/Modals/SecretField.tsx","containers/Modals/SecretField.ts","components/Room/CreateRoomModal.tsx","containers/Room/CreateRoomModal.ts","components/Users/CreateUserModal.tsx","containers/Users/CreateUserModal.ts","utils/api.ts","components/Room/SearchResultCategory.tsx","components/Room/SearchModal.tsx","containers/Room/SearchModal.ts","components/Room/UnlockRoomModal.tsx","containers/Room/UnlockRoomModal.ts","components/Modals/index.tsx","containers/Modals/index.ts","components/App/Messages.tsx","containers/App/Messages.ts","components/App/index.tsx","containers/App/index.ts","utils/player.ts","index.tsx"],"names":["INITIAL_STATE","fetching","error","containers","initialState","stack","playing","position","trackIds","room_access","id","secret","room_color","fg","r","g","b","bg","rooms","tracks","user_access","res","s","localStorage","getItem","d","JSON","parse","atob","i","console","log","err","loadUserAccess","users","rootReducer","combineReducers","state","action","type","payload","copy","container","messages","filter","other","modals","pop","player","queue","splice","setItem","btoa","stringify","saveRoomAccess","track","saveUserAccess","Icon","Component","render","this","props","className","color","icon","size","title","classNames","name","style","IconButton","disabled","kind","onClick","aria-label","clickable","CancelButton","createHashHistory","Controls","onMoveBackward","onMoveForward","onPlay","onSearch","onStop","playable","onClear","onExit","window","confirm","history","push","createAction","MESSAGE_ID_GENERATOR","displayMessage","text","duration","dispatch","setTimeout","removeMessage","displayError","response","data","message","pushTracks","setPosition","moveBackward","getState","a","length","moveForward","setTracks","loadTrack","trackId","enqueue","play","api","previewPlayer","preview","config","databaseURL","process","firebaseApp","firebase","firebaseConfig","firebaseDatabase","MEMBERS","ref","ROOMS","USERS","Room","_room","child","_info","_members","_values","queue_position","timestamp","init","values","subscribeInfo","snapshot","newValues","val","update","wait","Promise","resolve","reject","once","Error","cb","on","set","info","ServerValue","TIMESTAMP","getInfo","subscribeMembers","cbAdded","cbRemoved","unsubscribeInfo","off","unsubscribeMembers","User","_user","_membership","online","room_id","status","installDisconnect","onDisconnect","cancel","enter","room","remove","exit","loadContainer","containerType","containerId","containerTypeId","loadAlbum","loadPlaylist","map","toString","previewContainer","setRoom","setRooms","setRoomColor","createRoom","v4","FirebaseRoom","enterRoom","FIREBASE_ROOM","FIREBASE_CB","exitRoom","lockRoom","unlockRoom","queueTracks","CACHE","pickColor","url","value","jimp","image","resize","getPixelColor","pixel","PLAYER_TIMER","PLAYER_POSITION","startPlayer","queuePlayer","setInterval","album","cover_small","nextPosition","isPlaying","stopPlayer","_","clearInterval","stop","startPreview","stopPreview","_1","_2","openModal","prereq","popModal","connect","Cover","backgroundImage","Album","href","link","target","rel","artist","Playlist","playlist","picture_small","Track","Queue","playingPosition","index","key","extractTracks","copyToClipboard","elem","document","createElement","setAttribute","left","body","appendChild","selection","getSelection","selected","rangeCount","getRangeAt","select","execCommand","removeAllRanges","addRange","removeChild","Head","locked","onLock","onUnlock","onCopyLink","location","onMessage","extractRoom","componentDidMount","onEnter","componentWillUnmount","roomColor","backgroundColor","withRouter","ownProps","match","params","Menu","loggedIn","onCreateRoom","onConnectUser","onDisconnectUser","setUser","setUsers","createUser","FirebaseUser","connectUser","FIREBASE_USER","disconnectUser","user","reconnectUser","Splash","to","Modal","children","renderFoot","onClose","onPop","has_prev_modal","onSubmit","hidden","event","preventDefault","FormModal","renderButtons","ConnectUserModal","idRef","createRef","onConnect","htmlFor","placeholder","maxLength","minLength","required","onChange","e","setState","onToggle","onError","trim","current","focus","SecretField","label","display","flexDirection","justifyContent","flexGrow","marginRight","readOnly","onCopyToClipboard","CreateRoomModal","nameRef","onCreate","newSecret","CreateUserModal","DEFAULT_API","asyncJsonp","jsonp","call","path","qs","fullpath","search","query","encodeURIComponent","load","searchAlbums","searchPlaylists","searchTracks","searchAll","all","albums","playlists","forEach","Api","SearchResultCategory","items","slice","item","SearchModal","queryRef","mediaId","mediaType","results","total","renderInputs","renderResults","onSelect","onStartPreview","onStopPreview","UnlockRoomModal","secretRef","Modals","curr_prereq","prev_prereq","addEventListener","onKeyDown","removeEventListener","componentDidUpdate","prevProps","oldPrereq","newPrereq","modal","getModal","in","timeout","unmountOnExit","onClickOverlay","role","onClickWrapper","stopPropagation","onCloseModal","keyCode","Messages","React","renderMessage","App","onReconnect","exact","component","AUDIO_CONTEXT","getContext","AudioContext","webkitAudioContext","decodeAudioData","encodedBuffer","fixAudioContext","context","buffer","createBuffer","source","createBufferSource","destination","start","Player","analyserNode","gainNode","node","getNode","createGain","gain","createAnalyser","fftSize","bufferUrl","sourceNode","playCount","loadAudioBuffer","req","XMLHttpRequest","open","responseType","send","offset","loop","loopStart","loopEnd","onended","playbackRate","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","withExtraArgument","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ef30bc52.chunk.js","sourcesContent":["import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { ContainersAction } from \"../actions/containers\";\nimport { Containers } from \"../utils/containers\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  containers: Containers;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  containers: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const containersReducer: Reducer<State, ContainersAction> = (\n  state = INITIAL_STATE,\n  action: ContainersAction\n): State => {\n  switch (action.type) {\n    case \"containers/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"containers/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"containers/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"containers/SET_CONTAINERS\": {\n      const copy = { ...state, containers: { ...state.containers } };\n      for (const container of action.payload) {\n        copy.containers[`${container.type}|${container.id}`] = container;\n      }\n      return copy;\n    }\n    case \"containers/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { MessagesAction } from \"../actions/messages\";\nimport { Message } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type State = Message[];\n\nexport const INITIAL_STATE: State = [];\n\n// ------------------------------------------------------------------\n\nexport const messagesReducer: Reducer<State, MessagesAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"message/ADD\":\n      return [action.payload, ...state];\n    case \"message/REMOVE\":\n      return state.filter(other => other.id !== action.payload);\n    case \"message/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { ModalsAction, ModalPrereq } from \"../actions/modals\";\n\n// ------------------------------------------------------------------\n\nexport type ModalsState = {\n  stack: ModalPrereq[];\n};\n\n// ------------------------------------------------------------------\n\nexport const initialState: ModalsState = {\n  stack: []\n};\n\n// ------------------------------------------------------------------\n\nexport const modalsReducer: Reducer<ModalsState, ModalsAction> = (\n  state = initialState,\n  action\n): ModalsState => {\n  switch (action.type) {\n    case \"modals/OPEN\":\n      return {\n        ...state,\n        stack: [action.payload]\n      };\n    case \"modals/CLOSE\":\n      return {\n        ...state,\n        stack: []\n      };\n    case \"modals/PUSH\":\n      return {\n        ...state,\n        stack: [...state.stack, action.payload]\n      };\n    case \"modals/POP\":\n      const copy = [...state.stack];\n      copy.pop();\n      return {\n        ...state,\n        stack: copy\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { PlayerAction } from \"../actions/player\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  playing: boolean;\n};\n\nexport const INITIAL_STATE: State = {\n  playing: false\n};\n\n// ------------------------------------------------------------------\n\nexport const playerReducer: Reducer<State, PlayerAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"player/START\":\n      return { ...state, playing: true };\n    case \"player/STOP\":\n      return { ...state, playing: false };\n    case \"player/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { QueueAction } from \"../actions/queue\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  position: number;\n  trackIds: string[];\n};\n\nexport const INITIAL_STATE: State = {\n  position: -1,\n  trackIds: []\n};\n\n// ------------------------------------------------------------------\n\nexport const queueReducer: Reducer<State, QueueAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"queue/PUSH\":\n      return { ...state, trackIds: [...state.trackIds, ...action.payload] };\n    case \"queue/REMOVE\":\n      const copy = [...state.trackIds];\n      copy.splice(action.payload, 1);\n      return {\n        ...state,\n        position:\n          action.payload < state.position ? state.position - 1 : state.position,\n        trackIds: copy\n      };\n    case \"queue/SET_POSITION\":\n      return {\n        ...state,\n        position: action.payload\n      };\n    case \"queue/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { RoomsAction } from \"../actions/rooms\";\nimport { Rooms, saveRoomAccess, RoomAccess } from \"../utils/rooms\";\nimport { CombinedColor } from \"../utils/colorpicker\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  room_access: RoomAccess;\n  room_color: CombinedColor;\n  rooms: Rooms;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  room_access: { id: \"\", secret: \"\" },\n  room_color: { fg: { r: 0, g: 0, b: 0 }, bg: { r: 255, g: 255, b: 255 } },\n  rooms: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const roomsReducer: Reducer<State, RoomsAction> = (\n  state = INITIAL_STATE,\n  action: RoomsAction\n): State => {\n  switch (action.type) {\n    case \"rooms/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"rooms/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"rooms/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"rooms/SET_ROOM\": {\n      saveRoomAccess(action.payload);\n      return {\n        ...state,\n        room_access: action.payload\n      };\n    }\n    case \"rooms/SET_ROOMS\": {\n      return {\n        ...state,\n        rooms: { ...state.rooms, ...action.payload }\n      };\n    }\n    case \"rooms/SET_ROOM_COLOR\": {\n      return {\n        ...state,\n        room_color: action.payload\n      };\n    }\n    case \"rooms/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { TracksAction } from \"../actions/tracks\";\nimport { Tracks } from \"../utils/tracks\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  tracks: Tracks;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  tracks: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const tracksReducer: Reducer<State, TracksAction> = (\n  state = INITIAL_STATE,\n  action: TracksAction\n): State => {\n  switch (action.type) {\n    case \"tracks/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"tracks/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"tracks/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"tracks/SET_TRACKS\": {\n      const copy = { ...state, tracks: { ...state.tracks } };\n      for (const track of action.payload) {\n        copy.tracks[track.id] = track;\n      }\n      return copy;\n    }\n    case \"tracks/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { UsersAction } from \"../actions/users\";\nimport {\n  Users,\n  saveUserAccess,\n  loadUserAccess,\n  UserAccess\n} from \"../utils/users\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  user_access: UserAccess;\n  users: Users;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  user_access: loadUserAccess(),\n  users: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const usersReducer: Reducer<State, UsersAction> = (\n  state = INITIAL_STATE,\n  action: UsersAction\n): State => {\n  switch (action.type) {\n    case \"users/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"users/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"users/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"users/SET_USER\": {\n      saveUserAccess(action.payload);\n      return {\n        ...state,\n        user_access: { ...action.payload }\n      };\n    }\n    case \"users/SET_USERS\": {\n      return {\n        ...state,\n        users: { ...state.users, ...action.payload }\n      };\n    }\n    case \"users/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","export type User = {\n  name: string;\n  online: boolean;\n  room_id: string;\n  status: string;\n  timestamp: number;\n};\n\nexport type Users = { [id: string]: User };\n\nexport type UserAccess = {\n  id: string;\n  secret: string;\n};\n\n// ------------------------------------------------------------------\n\nexport const loadUserAccess = (): UserAccess => {\n  const res: UserAccess = {\n    id: \"\",\n    secret: \"\"\n  };\n  const s = localStorage.getItem(\"U\");\n  if (s) {\n    try {\n      const d = JSON.parse(atob(s));\n      if (typeof d.i === \"string\" && typeof d.s === \"string\") {\n        res.id = d.i;\n        res.secret = d.s;\n        console.log(\"Loaded user access: \", res);\n      }\n    } catch (err) {}\n  }\n  return res;\n};\n\nexport const saveUserAccess = ({ id, secret }: UserAccess) => {\n  localStorage.setItem(\n    \"U\",\n    btoa(\n      JSON.stringify({\n        i: id,\n        s: secret\n      })\n    )\n  );\n};\n","import { combineReducers } from \"redux\";\nimport { containersReducer as containers } from \"./containers\";\nimport { messagesReducer as messages } from \"./messages\";\nimport { modalsReducer as modals } from \"./modals\";\nimport { playerReducer as player } from \"./player\";\nimport { queueReducer as queue } from \"./queue\";\nimport { roomsReducer as rooms } from \"./rooms\";\nimport { tracksReducer as tracks } from \"./tracks\";\nimport { usersReducer as users } from \"./users\";\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const rootReducer = combineReducers({\n  containers,\n  messages,\n  modals,\n  player,\n  queue,\n  rooms,\n  tracks,\n  users\n});\n","export type Room = {\n  name: string;\n  queue: {\n    [index: string]: {\n      id: string;\n      type: string;\n    };\n  };\n  queue_position: number;\n  timestamp: number;\n};\n\nexport type Rooms = { [id: string]: Room };\n\nexport type RoomAccess = {\n  id: string;\n  secret: string;\n};\n\n// ------------------------------------------------------------------\n\nexport const createSharingUrl = (id: string) =>\n  `${window.location.origin}/#/room/${id}`;\n\n// ------------------------------------------------------------------\n\nexport const loadRoomAccess = (): RoomAccess => {\n  const res: RoomAccess = {\n    id: \"\",\n    secret: \"\"\n  };\n  const s = localStorage.getItem(\"R\");\n  if (s) {\n    try {\n      const d = JSON.parse(atob(s));\n      if (typeof d.i === \"string\" && typeof d.s === \"string\") {\n        res.id = d.i;\n        res.secret = d.s;\n        console.log(\"Loaded room access: \", res);\n      }\n    } catch (err) {}\n  }\n  return res;\n};\n\nexport const saveRoomAccess = ({ id, secret }: RoomAccess) => {\n  localStorage.setItem(\n    \"R\",\n    btoa(\n      JSON.stringify({\n        i: id,\n        s: secret\n      })\n    )\n  );\n};\n","import React, { Component } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport classNames from \"classnames\";\n//\nimport \"./Icon.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  icon: string;\n  size?: \"S\" | \"M\" | \"L\";\n  title?: string;\n};\n\nclass Icon extends Component<Props> {\n  public render = () => {\n    const { className, color, icon, size = \"M\", title } = this.props;\n    return (\n      <FontAwesome\n        className={classNames(\"Icon\", className, size)}\n        name={icon}\n        style={{ color }}\n        title={title}\n      />\n    );\n  };\n}\n\nexport default Icon;\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"./Icon\";\nimport \"./IconButton.scss\";\n\n// ------------------------------------------------------------------\n\ntype ButtonType = \"button\" | \"submit\";\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  disabled?: boolean;\n  icon: string;\n  kind?: \"default\" | \"primary\" | \"danger\" | \"special\";\n  onClick?: () => void;\n  size?: \"S\" | \"M\" | \"L\";\n  title: string;\n  type?: ButtonType;\n};\n\nclass IconButton extends Component<Props> {\n  public render = () => {\n    const {\n      className,\n      color,\n      disabled = false,\n      icon,\n      kind = \"default\",\n      onClick,\n      size,\n      title,\n      type = \"button\"\n    } = this.props;\n    return (\n      <button\n        type={type}\n        aria-label={title}\n        className={classNames(\"IconButton\", className, kind, size, {\n          clickable: !disabled && (!!onClick || type === \"submit\")\n        })}\n        onClick={disabled ? void 0 : onClick}\n        title={title}\n      >\n        <Icon color={color} icon={icon} size={size} />\n      </button>\n    );\n  };\n}\n\nexport const CancelButton = ({ onClick }: { onClick: () => void }) => (\n  <IconButton onClick={onClick} title=\"Cancel\" kind=\"default\" icon=\"ban\" />\n);\n\nexport default IconButton;\n","import { createHashHistory } from \"history\";\n\nexport default createHashHistory();\n","import React, { Component } from \"react\";\n//\nimport { MappedProps } from \"../../containers/Room/Controls\";\nimport IconButton from \"../Common/IconButton\";\nimport history from \"../../utils/history\";\nimport \"./Controls.scss\";\n\n// ------------------------------------------------------------------\n\nclass Controls extends Component<MappedProps> {\n  public render = () => {\n    const {\n      onMoveBackward,\n      onMoveForward,\n      onPlay,\n      onSearch,\n      onStop,\n      playable,\n      playing\n    } = this.props;\n    return (\n      <div className=\"Controls\">\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={!playable}\n              icon=\"step-backward\"\n              onClick={onMoveBackward}\n              size=\"M\"\n              title=\"Previous\"\n            />\n          </div>\n          <div className=\"Control\">\n            {!playable || !playing ? (\n              <IconButton\n                disabled={!playable}\n                onClick={onPlay}\n                icon=\"play\"\n                size=\"L\"\n                title=\"Play\"\n              />\n            ) : (\n              <IconButton\n                disabled={!playable}\n                onClick={onStop}\n                icon=\"pause\"\n                title=\"Stop\"\n                size=\"L\"\n              />\n            )}\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              disabled={!playable}\n              icon=\"step-forward\"\n              onClick={onMoveForward}\n              size=\"M\"\n              title=\"Next\"\n            />\n          </div>\n        </div>\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              onClick={this.onClear}\n              icon=\"trash\"\n              title=\"Clear Room\"\n            />\n          </div>\n          <div className=\"Control\">\n            <IconButton onClick={onSearch} icon=\"search\" title=\"Search Media\" />\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              onClick={this.onExit}\n              icon=\"sign-out\"\n              title=\"Exit Room\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  onClear = () => {\n    if (window.confirm(\"Are you sure you want to clear Room\")) {\n      this.props.onClear();\n    }\n  };\n\n  onExit = () => {\n    if (window.confirm(\"Are you sure you want to leave the room?\")) {\n      history.push(\"/\");\n    }\n  };\n}\n\nexport default Controls;\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"../reducers\";\nimport { Player } from \"../utils/player\";\nimport { Api } from \"../utils/api\";\n\n// ------------------------------------------------------------------\n\nexport type Action<T extends string> = {\n  type: T;\n};\n\nexport type ActionWithPayload<T extends string, P> = {\n  type: T;\n  payload: P;\n};\n\nexport type AsyncAction = ThunkAction<\n  void,\n  RootState,\n  {\n    api: ReturnType<typeof Api>;\n    previewPlayer: ReturnType<typeof Player>;\n    queuePlayer: ReturnType<typeof Player>;\n  },\n  AnyAction\n>;\n\nexport function createAction<T extends string>(type: T): Action<T>;\n\nexport function createAction<T extends string, P>(\n  type: T,\n  payload: P\n): ActionWithPayload<T, P>;\n\nexport function createAction<T extends string, P>(type: T, payload?: P) {\n  return payload === void 0 ? { type } : { type, payload };\n}\n","import { createAction, AsyncAction } from \".\";\nimport { Message, MessageType } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nlet MESSAGE_ID_GENERATOR: number = 0;\n\nexport const extractErrorMessage = (err: any) =>\n  err.response && err.response.data && err.response.data.message\n    ? err.response.data.message\n    : err.message;\n\nexport type MessagesAction =\n  | ReturnType<typeof addMessage>\n  | ReturnType<typeof clearMessages>\n  | ReturnType<typeof removeMessage>;\n\nconst addMessage = (message: Message) => createAction(\"message/ADD\", message);\n\nconst removeMessage = (id: number) => createAction(\"message/REMOVE\", id);\n\nconst clearMessages = () => createAction(\"message/RESET\");\n\nexport const displayMessage = (\n  type: MessageType,\n  text: string,\n  duration: number = 5000\n): AsyncAction => (dispatch): any => {\n  const id = MESSAGE_ID_GENERATOR++;\n  dispatch(addMessage({ id, text, type }));\n  setTimeout(() => dispatch(removeMessage(id)), duration);\n};\n\nexport const displayError = (text: string, error?: any): AsyncAction => (\n  dispatch\n): any => {\n  dispatch(\n    displayMessage(\n      \"error\",\n      error ? `${text}: ${extractErrorMessage(error)}` : text,\n      3000\n    )\n  );\n};\n\nexport const displayInfo = (text: string) => displayMessage(\"info\", text, 3000);\n","import { createAction, AsyncAction } from \".\";\n\n// ------------------------------------------------------------------\n\nexport type QueueAction =\n  | ReturnType<typeof clearQueue>\n  | ReturnType<typeof pushTracks>\n  | ReturnType<typeof removeTrack>\n  | ReturnType<typeof setPosition>;\n\nexport const clearQueue = () => createAction(\"queue/RESET\");\n\nexport const pushTracks = (trackIds: string[]) =>\n  createAction(\"queue/PUSH\", trackIds);\n\nexport const removeTrack = (position: number) =>\n  createAction(\"queue/REMOVE\", position);\n\nexport const setPosition = (position: number) =>\n  createAction(\"queue/SET_POSITION\", position);\n\n// ------------------------------------------------------------------\n\nexport const moveBackward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { position, trackIds }\n  } = getState();\n  if (trackIds.length > 0) {\n    dispatch(setPosition(position > 0 ? position - 1 : trackIds.length - 1));\n  }\n};\n\nexport const moveForward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { position, trackIds }\n  } = getState();\n  if (trackIds.length > 0) {\n    dispatch(setPosition((position + 1) % trackIds.length));\n  }\n};\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { pushTracks } from \"./queue\";\nimport { ApiTrack } from \"../utils/api\";\n\n// ------------------------------------------------------------------\n\nexport type TracksAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setTracks>;\n\nconst fetching = () => createAction(\"tracks/FETCHING\");\nconst success = () => createAction(\"tracks/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"tracks/ERROR\", error);\nconst reset = () => createAction(\"tracks/RESET\");\nexport const setTracks = (tracks: ApiTrack[]) =>\n  createAction(\"tracks/SET_TRACKS\", tracks);\n\n// ------------------------------------------------------------------\n\nexport const loadTrack = (\n  trackId: string,\n  enqueue: boolean,\n  play: boolean\n): AsyncAction => async (dispatch, getState, { api, previewPlayer }) => {\n  try {\n    const state = getState();\n    let track = state.tracks.tracks[trackId];\n    if (!track) {\n      console.log(\"Loading track...\", { trackId });\n      track = await api.loadTrack(trackId);\n      dispatch(setTracks([track]));\n    }\n    if (enqueue) {\n      console.log(\"Enqueuing track...\");\n      dispatch(pushTracks([trackId]));\n    }\n    if (play) {\n      console.log(\"Previewing track...\");\n      await previewPlayer.play(track.preview, 0);\n    }\n  } catch (err) {\n    dispatch(displayError(\"Cannot load track\", err));\n  }\n};\n","const config = {\n  databaseURL: process.env.REACT_APP_FIREBASE_URL\n};\n\nconsole.log(config);\n\nexport default config;\n","export const sleep = (delay: number) =>\n  new Promise(resolve => setTimeout(resolve, delay));\n","import * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n//\nimport firebaseConfig from \"../config/firebase\";\nimport { Room as RoomInfo } from \"./rooms\";\nimport { User as UserInfo } from \"./users\";\nimport { sleep } from \".\";\n\n// ------------------------------------------------------------------\n\ntype FirebaseCB = (eventType: firebase.database.DataSnapshot) => void;\n\n// ------------------------------------------------------------------\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseDatabase = firebase.database(firebaseApp);\n\n// ------------------------------------------------------------------\n\nconst MEMBERS = firebaseDatabase.ref(\"members\");\nconst ROOMS = firebaseDatabase.ref(\"rooms\");\nconst USERS = firebaseDatabase.ref(\"users\");\n\n// ------------------------------------------------------------------\n\nexport const Room = (id: string, secret?: string) => {\n  const _room = ROOMS.child(id);\n  const _info = _room.child(\"info\");\n  const _members = MEMBERS.child(id);\n  let _values: RoomInfo = {\n    name: \"dummy\",\n    queue: {},\n    queue_position: 0,\n    timestamp: 0\n  };\n\n  const getInfo = () => _values;\n\n  const init = async (values: Pick<RoomInfo, \"name\">) => {\n    subscribeInfo((snapshot: firebase.database.DataSnapshot) => {\n      const newValues = snapshot.val();\n      if (newValues) {\n        _values = newValues;\n      }\n    });\n    await update(values);\n  };\n\n  const wait = async (): Promise<RoomInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", snapshot => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"Room is invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const subscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.on(\"child_added\", cbAdded);\n    _members.on(\"child_removed\", cbRemoved);\n  };\n\n  const unsubscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.off(\"child_added\", cbAdded);\n    _members.off(\"child_removed\", cbRemoved);\n  };\n\n  const update = async ({\n    name,\n    queue,\n    queue_position\n  }: Partial<Pick<RoomInfo, \"name\" | \"queue\" | \"queue_position\">>) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (queue !== void 0) {\n      _values.queue = queue;\n    }\n    if (queue_position !== void 0) {\n      _values.queue_position = queue_position;\n    }\n    await _room.set({\n      info: {\n        ..._values,\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      },\n      secret\n    });\n  };\n\n  return {\n    getInfo,\n    id,\n    init,\n    wait,\n    subscribeInfo,\n    subscribeMembers,\n    unsubscribeInfo,\n    unsubscribeMembers,\n    update\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const User = (id: string, secret?: string) => {\n  const _user = USERS.child(id);\n  const _info = _user.child(\"info\");\n  let _membership: firebase.database.Reference | null = null;\n  let _values = {\n    name: \"dummy\",\n    online: false,\n    room_id: \"\",\n    status: \"\",\n    timestamp: 0\n  };\n\n  const getInfo = () => _values;\n\n  const init = async (values: Pick<UserInfo, \"name\">) => {\n    subscribeInfo((snapshot: firebase.database.DataSnapshot) => {\n      const newValues = snapshot.val();\n      if (newValues) {\n        _values = newValues;\n      }\n    });\n    await update(values);\n  };\n\n  const wait = async (): Promise<UserInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", snapshot => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"User is invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const update = async ({\n    name,\n    room_id\n  }: Partial<Pick<UserInfo, \"name\" | \"room_id\">>) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (room_id !== void 0) {\n      _values.room_id = room_id;\n    }\n    await _user.set({\n      info: {\n        ..._values,\n        online: true,\n        status: \"online\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      },\n      secret\n    });\n    installDisconnect();\n  };\n\n  const installDisconnect = () => {\n    _user.onDisconnect().cancel();\n    _user.onDisconnect().set({\n      info: {\n        ..._values,\n        online: false,\n        room_id: \"\",\n        status: \"disconnected\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      },\n      secret\n    });\n  };\n\n  const enter = async (room: ReturnType<typeof Room>) => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: room.id\n    });\n    _membership = MEMBERS.child(room.id).child(id);\n    _membership.onDisconnect().remove();\n    await _membership.set({\n      timestamp: firebase.database.ServerValue.TIMESTAMP\n    });\n  };\n\n  const exit = async () => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: \"\"\n    });\n  };\n\n  return {\n    id,\n    enter,\n    exit,\n    init,\n    wait,\n    subscribeInfo,\n    unsubscribeInfo,\n    update,\n    getInfo\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const Party = (id: string, room: ReturnType<typeof Room>) => {\n  const _members: string[] = [];\n  const _users: { [id: string]: ReturnType<typeof User> } = {};\n  let _info = {\n    name: \"\",\n    queue: {},\n    queue_position: 0,\n    timestamp: 0\n  };\n\n  const _onAdded = (added: firebase.database.DataSnapshot) => {\n    const userId = added.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index === -1) {\n        _members.push(userId);\n        _users[userId] = User(userId);\n        _log();\n      }\n    }\n  };\n\n  const _onRemoved = (removed: firebase.database.DataSnapshot) => {\n    const userId = removed.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index !== -1) {\n        _members.splice(index, 1);\n        delete _users[userId];\n        _log();\n      }\n    }\n  };\n\n  const _onRoomInfo = (snapshot: firebase.database.DataSnapshot) => {\n    const newValues = snapshot.val() as RoomInfo | null;\n    if (newValues) {\n      _info = newValues;\n      _log();\n    }\n  };\n\n  const _log = () => {\n    console.log(\"PARTY\", {\n      _info,\n      _members\n    });\n  };\n\n  const init = () => {\n    room.subscribeInfo(_onRoomInfo);\n    room.subscribeMembers(_onAdded, _onRemoved);\n  };\n\n  const terminate = () => {\n    room.unsubscribeInfo(_onRoomInfo);\n    room.unsubscribeMembers(_onAdded, _onRemoved);\n  };\n\n  return {\n    init,\n    terminate\n  };\n};\n\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n\nexport const testRoom = async () => {\n  const room = Room(\"r1\", \"rs1\");\n  await room.init({ name: \"R1\" });\n  room.subscribeInfo(info => console.log(\"ROOM\", info.val()));\n  room.subscribeMembers(\n    members => console.log(\"ADDED\", members.key),\n    members => console.log(\"REMOVED\", members.key)\n  );\n  await room.init({ name: \"R1\" });\n  await sleep(1000);\n  await room.update({\n    name: \"R1b\",\n    queue: {},\n    queue_position: 0\n  });\n};\n\nexport const testUser = async () => {\n  const user = User(\"u1\", \"us1\");\n  user.subscribeInfo(info => console.log(\"USER\", info.val()));\n  await user.init({ name: \"U1\" });\n  await sleep(1000);\n  await user.update({ name: \"U1b\" });\n};\n\nexport const testParty = async () => {\n  const room1 = Room(\"r1\", \"rs1\");\n  room1.init({ name: \"R1\" });\n  const room2 = Room(\"r2\", \"rs2\");\n  room2.init({ name: \"R2\" });\n  const user1 = User(\"u1\", \"us1\");\n  user1.init({ name: \"U1\" });\n  const user2 = User(\"u2\", \"us2\");\n  user2.init({ name: \"U2\" });\n\n  await sleep(2000);\n\n  const party1 = Party(\"P1\", room1);\n  party1.init();\n  const party2 = Party(\"P2\", room2);\n  party2.init();\n\n  await sleep(1000);\n  user1.enter(room1);\n  await sleep(1000);\n  user2.enter(room1);\n  await sleep(1000);\n  user1.enter(room2);\n  await sleep(1000);\n  user1.exit();\n  await sleep(1000);\n  user1.enter(room1);\n};\n\nexport const test = () => {\n  // testRoom();\n  // testUser();\n  // testParty();\n};\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { Container, ContainerType } from \"../utils/containers\";\nimport { displayError } from \"./messages\";\nimport { pushTracks } from \"./queue\";\nimport { loadTrack, setTracks } from \"./tracks\";\n\n// ------------------------------------------------------------------\n\nexport type ContainersAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setContainers>;\n\nconst fetching = () => createAction(\"containers/FETCHING\");\nconst success = () => createAction(\"containers/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"containers/ERROR\", error);\nconst reset = () => createAction(\"containers/RESET\");\nconst setContainers = (containers: Container[]) =>\n  createAction(\"containers/SET_CONTAINERS\", containers);\n\n// ------------------------------------------------------------------\n\nexport const loadContainer = (\n  containerType: ContainerType,\n  containerId: string,\n  enqueue: boolean,\n  play: boolean\n): AsyncAction => async (dispatch, getState, { api }) => {\n  try {\n    const state = getState();\n    const containerTypeId = `${containerType}|${containerId}`;\n    let container = state.containers.containers[containerTypeId];\n    if (!container) {\n      console.log(\"Loading container...\", { containerId, containerType });\n      switch (containerType) {\n        case \"album\":\n          container = await api.loadAlbum(containerId);\n          break;\n        case \"playlist\":\n          container = await api.loadPlaylist(containerId);\n          break;\n      }\n    }\n    if (container) {\n      dispatch(setContainers([container]));\n      if (container.tracks && container.tracks.data.length > 0) {\n        dispatch(setTracks(container.tracks.data));\n        if (enqueue) {\n          console.log(\"Enqueuing container...\");\n          dispatch(\n            pushTracks(container.tracks.data.map(track => track.id.toString()))\n          );\n        }\n        if (play) {\n          console.log(\"Playing container...\");\n          dispatch(\n            loadTrack(container.tracks.data[0].id.toString(), false, true)\n          );\n        }\n      }\n    }\n  } catch (err) {\n    dispatch(displayError(\"Cannot load container\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const previewContainer = (\n  containerType: ContainerType,\n  containerId: string\n): AsyncAction => async dispatch => {\n  console.log(\"Previewing container...\", { containerType, containerId });\n  dispatch(loadContainer(containerType, containerId, false, true));\n};\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { Rooms, Room } from \"../utils/rooms\";\nimport { Room as FirebaseRoom } from \"../utils/firebase\";\nimport { loadTrack } from \"./tracks\";\nimport { loadContainer } from \"./containers\";\nimport { ContainerType } from \"../utils/containers\";\nimport { CombinedColor } from \"../utils/colorpicker\";\nimport history from \"../utils/history\";\n\n// ------------------------------------------------------------------\n\nexport type RoomsAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setRoom>\n  | ReturnType<typeof setRooms>\n  | ReturnType<typeof setRoomColor>;\n\nconst fetching = () => createAction(\"rooms/FETCHING\");\nconst success = () => createAction(\"rooms/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"rooms/ERROR\", error);\nconst reset = () => createAction(\"rooms/RESET\");\nconst setRoom = (id: string, secret: string) =>\n  createAction(\"rooms/SET_ROOM\", { id, secret });\nconst setRooms = (rooms: Rooms) => createAction(\"rooms/SET_ROOMS\", rooms);\nexport const setRoomColor = (color: CombinedColor) =>\n  createAction(\"rooms/SET_ROOM_COLOR\", color);\n\n// ------------------------------------------------------------------\n\nexport const createRoom = (\n  name: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  try {\n    console.log(\"Creating room...\");\n    const id = v4();\n    await FirebaseRoom(id, secret).init({ name });\n    dispatch(enterRoom(id, secret));\n  } catch (err) {\n    dispatch(displayError(\"Cannot create room\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_ROOM: ReturnType<typeof FirebaseRoom> | null = null;\nlet FIREBASE_CB: any = null;\n\nexport const enterRoom = (\n  id: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  if (!FIREBASE_ROOM || FIREBASE_ROOM.id !== id) {\n    dispatch(exitRoom());\n    try {\n      console.log(\"Entering room...\", { id, secret });\n      const room = FirebaseRoom(id);\n      dispatch(setRooms({ [id]: await room.wait() }));\n      dispatch(setRoom(id, secret));\n      FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n        dispatch(setRooms({ [id]: snapshot.val() as Room }));\n      };\n      FIREBASE_ROOM = room;\n      FIREBASE_ROOM.subscribeInfo(FIREBASE_CB);\n      history.push(`/room/${id}`);\n    } catch (err) {\n      dispatch(displayError(\"Cannot join room\", err));\n    }\n  }\n};\n\nexport const exitRoom = (): AsyncAction => async dispatch => {\n  if (FIREBASE_ROOM) {\n    console.log(\"Exiting room...\");\n    FIREBASE_ROOM.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_ROOM = null;\n    FIREBASE_CB = null;\n    dispatch(setRoom(\"\", \"\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const lockRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: {\n      room_access: { id }\n    }\n  } = getState();\n  console.log(\"Locking room...\", { id });\n  dispatch(setRoom(id, \"\"));\n};\n\nexport const unlockRoom = (secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: {\n      room_access: { id }\n    }\n  } = getState();\n  console.log(\"Unlocking room...\", { id, secret });\n  dispatch(setRoom(id, secret));\n};\n\n// ------------------------------------------------------------------\n\nexport const queueTracks = (\n  containerType: ContainerType,\n  containerId: string,\n  trackId: string\n): AsyncAction => async dispatch => {\n  console.log(\"Queuing room tracks...\", {\n    containerType,\n    containerId,\n    trackId\n  });\n  if (containerId) {\n    dispatch(loadContainer(containerType, containerId, true, false));\n  }\n  if (trackId) {\n    dispatch(loadTrack(trackId, true, false));\n  }\n};\n","import * as jimp from \"jimp\";\n\n// ------------------------------------------------------------------\n\nexport type Color = {\n  r: number;\n  g: number;\n  b: number;\n};\n\nexport type CombinedColor = {\n  bg: Color;\n  fg: Color;\n};\n\nconst CACHE: { [url: string]: CombinedColor } = {};\n\n// ------------------------------------------------------------------\n\nexport const pickColor = async (url: string) => {\n  if (!url) {\n    return {\n      bg: { r: 255, g: 255, b: 255 },\n      fg: { r: 0, g: 0, b: 0 }\n    };\n  }\n  let value = CACHE[url];\n  if (!value) {\n    const image = await jimp.read(url);\n    const pixel = await image.resize(1, 1).getPixelColor(0, 0);\n    const bg = jimp.intToRGBA(pixel);\n    // https://stackoverflow.com/questions/3942878/how-to-decide-font-color-in-white-or-black-depending-on-background-color\n    CACHE[url] = value = {\n      bg,\n      fg:\n        bg.r * 0.299 + bg.g * 0.587 + bg.b * 0.114 > 186\n          ? { r: 0, g: 0, b: 0 }\n          : { r: 255, g: 255, b: 255 }\n    };\n  }\n  return value;\n};\n\n/*\nconst backgroundColor = color\n? `rgb(${color.r}, ${color.g}, ${color.b})`\n: void 0;\n<div\nstyle={{\n  backgroundColor\n}}\n>\nx\n</div>\n\ncolors: {\n  [id: string]: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n};,\ncolors: {}\nconst color = this.state.colors[album.id];\n\nimport { pickColor } from \"../../utils/colorpicker\";\n\nprivate XXX = async (id: number, url: string) => {\n  if (!this.state.colors[id]) {\n    const color = await pickColor(url);\n    this.setState({\n      colors: { ...this.state.colors, [id]: color }\n    });\n  }\n};\n*/\n","import { AsyncAction, createAction } from \".\";\nimport { setTracks } from \"./tracks\";\nimport { displayError } from \"./messages\";\nimport { setRoomColor } from \"./rooms\";\nimport { pickColor } from \"../utils/colorpicker\";\nimport { setPosition } from \"./queue\";\n\n// ------------------------------------------------------------------\n\nexport type PlayerAction =\n  | ReturnType<typeof reset>\n  | ReturnType<typeof start>\n  | ReturnType<typeof stop>;\n\nconst reset = () => createAction(\"player/RESET\");\n\nconst start = () => createAction(\"player/START\");\n\nconst stop = () => createAction(\"player/STOP\");\n\n// ------------------------------------------------------------------\n\nlet PLAYER_TIMER: NodeJS.Timeout | null = null;\nlet PLAYER_POSITION = -1;\n\nexport const startPlayer = (): AsyncAction => async (\n  dispatch,\n  getState,\n  { queuePlayer }\n) => {\n  if (!PLAYER_TIMER) {\n    PLAYER_TIMER = setInterval(async () => {\n      const {\n        queue: { position, trackIds },\n        tracks\n      } = getState();\n      if (trackIds.length > 0) {\n        if (PLAYER_POSITION !== position) {\n          // User has clicked an other track\n          PLAYER_POSITION = position;\n          console.log(\"Playing clicked track...\", {\n            position: PLAYER_POSITION\n          });\n          const track = tracks.tracks[trackIds[PLAYER_POSITION]];\n          await queuePlayer.play(track.preview, 0);\n          dispatch(setPosition(PLAYER_POSITION));\n          dispatch(setRoomColor(await pickColor(track.album.cover_small)));\n        } else {\n          const nextPosition = (position + 1) % trackIds.length;\n          if (!queuePlayer.isPlaying() && nextPosition < trackIds.length) {\n            // Time to move to next track\n            PLAYER_POSITION = nextPosition;\n            console.log(\"Playing next track...\", { position: PLAYER_POSITION });\n            const track = tracks.tracks[trackIds[PLAYER_POSITION]];\n            await queuePlayer.play(track.preview, 0);\n            dispatch(setPosition(PLAYER_POSITION));\n            dispatch(setRoomColor(await pickColor(track.album.cover_small)));\n          }\n        }\n      }\n    }, 1000);\n    dispatch(start());\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPlayer = (): AsyncAction => async (\n  dispatch,\n  _,\n  { queuePlayer }\n) => {\n  if (PLAYER_TIMER) {\n    clearInterval(PLAYER_TIMER);\n    PLAYER_TIMER = null;\n    PLAYER_POSITION = -1;\n\n    queuePlayer.stop();\n    dispatch(stop());\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const startPreview = (trackId: string): AsyncAction => async (\n  dispatch,\n  getState,\n  { api, previewPlayer }\n) => {\n  try {\n    const state = getState();\n    let track = state.tracks.tracks[trackId];\n    if (!track) {\n      console.log(\"Loading track...\", { trackId });\n      track = await api.loadTrack(trackId);\n      dispatch(setTracks([track]));\n    }\n    console.log(\"Start previewing...\");\n    await previewPlayer.play(track.preview, 0);\n  } catch (err) {\n    dispatch(displayError(\"Cannot load track\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPreview = (): AsyncAction => async (\n  _1,\n  _2,\n  { previewPlayer }\n) => {\n  console.log(\"Stop previewing...\");\n  previewPlayer.stop();\n};\n","import { createAction } from \".\";\n\n// ------------------------------------------------------------------\n\nexport type ModalPrereqT<T extends string, P> = {\n  type: T;\n  props: P;\n};\n\nexport type ModalPrereq =\n  | ModalPrereqT<\"ConnectUser\", null>\n  | ModalPrereqT<\"CreateRoom\", null>\n  | ModalPrereqT<\"CreateUser\", null>\n  | ModalPrereqT<\"Search\", null>\n  | ModalPrereqT<\"UnlockRoom\", null>;\n\n// ------------------------------------------------------------------\n\nexport type ModalsAction =\n  | ReturnType<typeof closeModal>\n  | ReturnType<typeof openModal>\n  | ReturnType<typeof popModal>\n  | ReturnType<typeof pushModal>;\n\n// ------------------------------------------------------------------\n\nexport const openModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/OPEN\", prereq);\n\nexport const closeModal = () => createAction(\"modals/CLOSE\");\n\n// ------------------------------------------------------------------\n\nexport const pushModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/PUSH\", prereq);\n\nexport const popModal = () => createAction(\"modals/POP\");\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Controls from \"../../components/Room/Controls\";\nimport { startPlayer, stopPlayer } from \"../../actions/player\";\nimport { openModal } from \"../../actions/modals\";\nimport { clearQueue, moveBackward, moveForward } from \"../../actions/queue\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  playable: state.queue.trackIds.length > 0,\n  playing: state.player.playing\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClear: () => {\n    dispatch(clearQueue());\n    dispatch(stopPlayer());\n  },\n  onMoveBackward: () => dispatch(moveBackward()),\n  onMoveForward: () => dispatch(moveForward()),\n  onPlay: () => dispatch(startPlayer()),\n  onSearch: () => dispatch(openModal({ type: \"Search\", props: null })),\n  onStop: () => dispatch(stopPlayer())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Controls);\n","import React from \"react\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"../Common/Icon\";\nimport \"./Cover.scss\";\n\nexport const Cover = ({\n  playing,\n  image,\n  onPlay,\n  onStop\n}: {\n  image: string;\n  onPlay: () => void;\n  onStop: () => void;\n  playing: boolean;\n}) => (\n  <div\n    className={classNames(\"Cover\", { playing })}\n    style={{ backgroundImage: `url('${image}')` }}\n    onClick={!playing ? onPlay : onStop}\n  >\n    {!playing ? (\n      <Icon icon=\"play\" title=\"Play\" />\n    ) : (\n      <Icon icon=\"pause\" title=\"Stop\" />\n    )}\n  </div>\n);\n","import React from \"react\";\n//\nimport { ApiAlbum, ApiPlaylist, ApiTrack } from \"../../utils/api\";\nimport { Cover } from \"./Cover\";\nimport \"./Medias.scss\";\n\n// ------------------------------------------------------------------\n\nexport const Album = ({\n  album,\n  playing,\n  onPlay,\n  onStop\n}: {\n  album: ApiAlbum;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n}) => (\n  <div className=\"Media Album\">\n    <Cover\n      playing={playing}\n      image={album.cover_small}\n      onPlay={onPlay}\n      onStop={onStop}\n    />\n    <div className=\"Metas\">\n      <div className=\"Meta AlbumTitle\">\n        <a href={album.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {album.title}\n        </a>\n      </div>\n      <div className=\"Meta AlbumArtistName\">\n        by{\" \"}\n        <a href={album.artist.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {album.artist.name}\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\n// ------------------------------------------------------------------\n\nexport const Playlist = ({\n  playlist,\n  playing,\n  onPlay,\n  onStop\n}: {\n  playlist: ApiPlaylist;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n}) => (\n  <div className=\"Media Playlist\">\n    <Cover\n      playing={playing}\n      image={playlist.picture_small}\n      onPlay={onPlay}\n      onStop={onStop}\n    />\n    <div className=\"Metas\">\n      <div className=\"Meta PlaylistTitle\">\n        <a href={playlist.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {playlist.title}\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\n// ------------------------------------------------------------------\n\nexport const Track = ({\n  track,\n  playing,\n  onPlay,\n  onStop\n}: {\n  track: ApiTrack;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n}) => (\n  <div className=\"Media Track\">\n    <Cover\n      playing={playing}\n      image={track.album.cover_small}\n      onPlay={onPlay}\n      onStop={onStop}\n    />\n    <div className=\"Metas\">\n      <div className=\"Meta TrackTitle\">\n        <a href={track.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {track.title}\n        </a>\n      </div>\n      <div className=\"Meta TrackArtistName\">\n        by{\" \"}\n        <a href={track.artist.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {track.artist.name}\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React, { Component } from \"react\";\n//\nimport { MappedProps } from \"../../containers/Room/Queue\";\nimport { Track } from \"./Medias\";\nimport \"./Queue.scss\";\n\n// ------------------------------------------------------------------\n\nclass Queue extends Component<MappedProps> {\n  public render = () => {\n    const { playing, playingPosition, tracks, onPlay, onStop } = this.props;\n    return (\n      <div className=\"Queue\">\n        {tracks.map((track, index) => (\n          <div className=\"QueueItem\" key={track.id}>\n            <Track\n              track={track}\n              playing={playing && playingPosition === index}\n              onPlay={() => onPlay(index)}\n              onStop={onStop}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  };\n}\n\nexport default Queue;\n","import { RootState } from \"../reducers\";\nimport { ApiTrack } from \"../utils/api\";\n\nexport const extractTracks = (state: RootState, trackIds: string[]) => {\n  const res: Array<ApiTrack> = [];\n  const {\n    tracks: { tracks }\n  } = state;\n  for (const trackId of trackIds) {\n    const track = tracks[trackId];\n    if (!!track) {\n      res.push(track);\n    }\n  }\n  return res;\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Queue from \"../../components/Room/Queue\";\nimport { extractTracks } from \"../../selectors/tracks\";\nimport { setPosition } from \"../../actions/queue\";\nimport { stopPlayer, startPlayer } from \"../../actions/player\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  playing: state.player.playing,\n  playingPosition: state.queue.position,\n  tracks: extractTracks(state, state.queue.trackIds)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onPlay: (index: number) => {\n    dispatch(startPlayer());\n    dispatch(setPosition(index));\n  },\n  onStop: () => dispatch(stopPlayer())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Queue);\n","// https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\nexport const copyToClipboard = async (value: string): Promise<void> =>\n  await new Promise(resolve => {\n    const elem = document.createElement(\"textarea\");\n    elem.value = value;\n    elem.setAttribute(\"readonly\", \"\");\n    elem.style.position = \"absolute\";\n    elem.style.left = \"-9999px\";\n\n    document.body.appendChild(elem);\n    const selection = document.getSelection();\n    if (selection !== null) {\n      const selected =\n        selection.rangeCount > 0 ? selection.getRangeAt(0) : false;\n      elem.select();\n      document.execCommand(\"copy\");\n      if (selected !== false) {\n        selection.removeAllRanges();\n        selection.addRange(selected);\n      }\n    }\n    document.body.removeChild(elem);\n    resolve();\n  });\n","import React, { Component } from \"react\";\n//\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Room/Head\";\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport \"./Head.scss\";\n\n// ------------------------------------------------------------------\n\nclass Head extends Component<MappedProps> {\n  public render = () => {\n    const { locked, room, onLock, onUnlock } = this.props;\n    return (\n      <div className=\"Head\">\n        <div className=\"RoomStatus\">\n          {locked ? (\n            <IconButton\n              icon=\"lock\"\n              onClick={onUnlock}\n              size=\"M\"\n              title=\"Locked (click to unlock)\"\n            />\n          ) : (\n            <IconButton\n              icon=\"unlock\"\n              onClick={onLock}\n              size=\"M\"\n              title=\"Unlocked (click to lock)\"\n            />\n          )}\n        </div>\n        <div className=\"RoomName\">{room ? room.name : \"?\"}</div>\n        <div className=\"RoomLink\">\n          <IconButton\n            icon=\"link\"\n            onClick={this.onCopyLink}\n            size=\"M\"\n            title=\"Copy Room Link to Clipboard\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyLink = async () => {\n    await copyToClipboard(document.location.href);\n    this.props.onMessage(\"Room link has been copied to clipboard\");\n  };\n}\n\nexport default Head;\n","import { RootState } from \"../reducers\";\nimport { Room } from \"../utils/rooms\";\n\nexport const extractRoom = (state: RootState, id: string): Room | null => {\n  const room = state.rooms.rooms[id];\n  if (!room) {\n    return null;\n  }\n  return room;\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Head from \"../../components/Room/Head\";\nimport { extractRoom } from \"../../selectors/rooms\";\nimport { openModal } from \"../../actions/modals\";\nimport { lockRoom } from \"../../actions/rooms\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: !state.rooms.room_access.secret,\n  room: extractRoom(state, state.rooms.room_access.id)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onLock: () => dispatch(lockRoom()),\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message)),\n  onUnlock: () => dispatch(openModal({ type: \"UnlockRoom\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Head);\n","import React, { Component } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/Room\";\nimport Controls from \"../../containers/Room/Controls\";\nimport Queue from \"../../containers/Room/Queue\";\nimport Head from \"../../containers/Room/Head\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = RouteComponentProps<{\n  room_id: string;\n}>;\n\nclass Room extends Component<Props & MappedProps> {\n  public componentDidMount = () => {\n    this.props.onEnter();\n  };\n\n  public componentWillUnmount = () => {\n    this.props.onExit();\n  };\n\n  public render = () => {\n    const {\n      roomColor: { fg, bg }\n    } = this.props;\n    return (\n      <div\n        className=\"Room\"\n        style={{\n          color: `rgb(${fg.r}, ${fg.g}, ${fg.b})`,\n          backgroundColor: `rgb(${bg.r}, ${bg.g}, ${bg.b})`\n        }}\n      >\n        <Head />\n        <Queue />\n        <Controls />\n      </div>\n    );\n  };\n}\n\nexport default withRouter(Room);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Room, { Props } from \"../../components/Room\";\nimport { enterRoom, exitRoom } from \"../../actions/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState, ownProps: Props) => ({\n  roomColor: state.rooms.room_color\n});\n\nconst dispatchToProps = (\n  dispatch: ThunkDispatch<RootState, any, any>,\n  ownProps: Props\n) => ({\n  onEnter: () => dispatch(enterRoom(ownProps.match.params.room_id, \"\")),\n  onExit: () => dispatch(exitRoom())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Room);\n","import React, { Component, Fragment } from \"react\";\n//\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Splash/Menu\";\n\n// ------------------------------------------------------------------\n\nclass Menu extends Component<MappedProps> {\n  public render = () => {\n    const { loggedIn, onCreateRoom, onConnectUser } = this.props;\n    return (\n      <div className=\"Menu\">\n        {loggedIn ? (\n          <Fragment>\n            <div className=\"MenuItem\">\n              <IconButton\n                icon=\"plus\"\n                onClick={onCreateRoom}\n                size=\"L\"\n                title=\"Create Room\"\n              />\n            </div>\n            <div className=\"MenuItem\">\n              <IconButton\n                icon=\"sign-out\"\n                onClick={this.onDisconnect}\n                size=\"M\"\n                title=\"Disconnect\"\n              />\n            </div>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <div className=\"MenuItem\">\n              <IconButton\n                onClick={onConnectUser}\n                icon=\"sign-in\"\n                size=\"L\"\n                title=\"Connect\"\n              />\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  };\n\n  onDisconnect = () => {\n    if (window.confirm(\"Are you sure you want to disconnect?\")) {\n      this.props.onDisconnectUser();\n    }\n  };\n}\n\nexport default Menu;\n","import { AxiosError } from \"axios\";\nimport { createAction, AsyncAction } from \".\";\nimport { Users, User } from \"../utils/users\";\nimport { User as FirebaseUser } from \"../utils/firebase\";\nimport { v4 } from \"uuid\";\nimport { displayError } from \"./messages\";\n\n// ------------------------------------------------------------------\n\nexport type UsersAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setUser>\n  | ReturnType<typeof setUsers>;\n\nconst fetching = () => createAction(\"users/FETCHING\");\nconst success = () => createAction(\"users/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"users/ERROR\", error);\nconst reset = () => createAction(\"users/RESET\");\nconst setUser = (id: string, secret: string) =>\n  createAction(\"users/SET_USER\", { id, secret });\nconst setUsers = (users: Users) => createAction(\"users/SET_USERS\", users);\n\n// ------------------------------------------------------------------\n\nexport const createUser = (\n  name: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  try {\n    console.log(\"Creating user...\");\n    const id = v4();\n    await FirebaseUser(id, secret).init({ name });\n    dispatch(connectUser(id, secret));\n  } catch (err) {\n    dispatch(displayError(\"Cannot create user\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_USER: ReturnType<typeof FirebaseUser> | null = null;\nlet FIREBASE_CB: any = null;\n\nexport const connectUser = (\n  id: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  dispatch(disconnectUser());\n  try {\n    console.log(\"Connection user...\", { id, secret });\n    const user = FirebaseUser(id);\n    dispatch(setUsers({ [id]: await user.wait() }));\n    dispatch(setUser(id, secret));\n    FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n      dispatch(setUsers({ [id]: snapshot.val() as User }));\n    };\n    FIREBASE_USER = user;\n    FIREBASE_USER.subscribeInfo(FIREBASE_CB);\n  } catch (err) {\n    dispatch(displayError(\"Cannot connect user\", err));\n    dispatch(setUser(\"\", \"\"));\n  }\n};\n\nexport const disconnectUser = (): AsyncAction => async dispatch => {\n  if (FIREBASE_USER) {\n    console.log(\"Disconnecting user...\");\n    FIREBASE_USER.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_USER = null;\n    FIREBASE_CB = null;\n    dispatch(setUser(\"\", \"\"));\n  }\n};\n\nexport const reconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const state = getState();\n  const { id, secret } = state.users.user_access;\n  if (id && secret) {\n    try {\n      console.log(\"Loading user...\");\n      dispatch(connectUser(id, secret));\n    } catch (err) {\n      dispatch(displayError(\"Cannot load user\", err));\n    }\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport { openModal } from \"../../actions/modals\";\nimport Menu from \"../../components/Splash/Menu\";\nimport { disconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  loggedIn: !!state.users.user_access.id\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onCreateRoom: () => dispatch(openModal({ type: \"CreateRoom\", props: null })),\n  onConnectUser: () => dispatch(openModal({ type: \"CreateUser\", props: null })),\n  onDisconnectUser: () => dispatch(disconnectUser())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Menu);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/Splash\";\nimport Menu from \"../../containers/Splash/Menu\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass Splash extends Component<MappedProps> {\n  public render = () => {\n    return (\n      <div className=\"Splash\">\n        <div className=\"Logo\">\n          <Link to=\"/\">Deezer Party</Link>\n        </div>\n        <Menu />\n      </div>\n    );\n  };\n}\n\nexport default Splash;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Splash from \"../../components/Splash\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Splash);\n","import React, { Component, FormEvent, ReactNode } from \"react\";\nimport classNames from \"classnames\";\n//\nimport { MappedProps } from \"../../containers/Modals/Modal\";\nimport IconButton from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n  className?: string;\n  title: string;\n  renderFoot?: () => React.ReactNode;\n  onSubmit?: () => void;\n};\n\nclass Modal extends Component<Props & MappedProps> {\n  public render = () => {\n    const {\n      children,\n      className,\n      title,\n      renderFoot,\n      onClose,\n      onPop,\n      has_prev_modal\n    } = this.props;\n    return (\n      <form className={classNames(\"Modal\", className)} onSubmit={this.onSubmit}>\n        <div className=\"ModalHead\">\n          <IconButton\n            kind=\"special\"\n            className={classNames(\"ModalHeadBack\", {\n              hidden: !has_prev_modal\n            })}\n            icon=\"angle-left\"\n            title=\"Back\"\n            onClick={onPop}\n          />\n          <div className=\"ModalTitle\">{title}</div>\n          <IconButton\n            kind=\"special\"\n            className=\"ModalHeadClose\"\n            onClick={onClose}\n            title=\"Cancel\"\n            icon=\"times\"\n          />\n        </div>\n        <div className=\"ModalBody\">{children}</div>\n        <div className=\"ModalFoot\">{renderFoot && renderFoot()}</div>\n      </form>\n    );\n  };\n\n  private onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  };\n}\n\nexport default Modal;\n","import { connect } from \"react-redux\";\n//\nimport Modal from \"../../components/Modals/Modal\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  has_prev_modal: state.modals.stack.length > 1\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onClose: () => dispatch(popModal()),\n  onPop: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport Modal from \"../../containers/Modals/Modal\";\nimport \"./FormModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  className?: string;\n  onSubmit: () => void;\n  renderButtons: () => React.ReactNode;\n  title: string;\n};\n\nclass FormModal extends Component<Props> {\n  public render = () => {\n    const { children, className, renderButtons, title, onSubmit } = this.props;\n    return (\n      <Modal\n        className={classNames(\"FormModal\", className)}\n        title={title}\n        renderFoot={renderButtons}\n        onSubmit={onSubmit}\n      >\n        {children}\n      </Modal>\n    );\n  };\n}\n\nexport default FormModal;\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/ConnectUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  id: string;\n  secret: string;\n};\n\nclass ConnectUserModal extends Component<MappedProps, State> {\n  private idRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    id: \"\",\n    secret: \"\"\n  };\n\n  public componentDidMount() {\n    if (this.idRef.current) {\n      this.idRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { id, secret } = this.state;\n    return (\n      <FormModal\n        title=\"Connect User\"\n        onSubmit={this.onConnect}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-id\">User ID</label>\n          <input\n            id=\"modal-id\"\n            type=\"text\"\n            placeholder=\"User ID...\"\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={id}\n            ref={this.idRef}\n            onChange={e => {\n              this.setState({ id: e.target.value });\n            }}\n          />\n        </div>\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">User Secret</label>\n          <input\n            id=\"modal-secret\"\n            type=\"text\"\n            placeholder=\"User Secret...\"\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            onChange={e => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Connect\" kind=\"primary\" icon=\"sign-in\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n      <IconButton\n        title=\"Create\"\n        kind=\"default\"\n        icon=\"plus\"\n        onClick={this.props.onToggle}\n      />\n    </Fragment>\n  );\n\n  private onConnect = () => {\n    const { onClose, onConnect, onError } = this.props;\n    const { id, secret } = this.state;\n    if (id.trim().length === 0) {\n      onError(\"User ID is invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"User secret is invalid\");\n      return;\n    }\n    onConnect(id, secret);\n    onClose();\n  };\n}\n\nexport default ConnectUserModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport ConnectUserModal from \"../../components/Users/ConnectUserModal\";\nimport { connectUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onConnect: (id: string, secret: string) => dispatch(connectUser(id, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"CreateUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(ConnectUserModal);\n","import React, { Component } from \"react\";\n//\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  id: string;\n  label: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  value: string;\n};\n\nclass SecretField extends Component<Props & MappedProps> {\n  public render = () => {\n    const { id, label, onChange, placeholder, value } = this.props;\n    return (\n      <div className=\"ModalField\">\n        <label htmlFor={id}>{label}</label>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}\n        >\n          <input\n            style={{\n              flexGrow: 1,\n              marginRight: \"0.5rem\"\n            }}\n            id={id}\n            type=\"text\"\n            placeholder={placeholder}\n            maxLength={36}\n            minLength={36}\n            readOnly={true}\n            required={true}\n            value={value}\n            onChange={e => onChange(e.target.value)}\n          />\n          <IconButton\n            icon=\"clipboard\"\n            onClick={this.onCopyToClipboard}\n            size=\"M\"\n            title={`Copy ${label} to Clipboard`}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyToClipboard = async () => {\n    const { onMessage, label, value } = this.props;\n    await copyToClipboard(value);\n    onMessage(`${label} has been copied to clipboard`);\n  };\n}\n\nexport default SecretField;\n","import { connect } from \"react-redux\";\n//\nimport SecretField from \"../../components/Modals/SecretField\";\nimport { RootState } from \"../../reducers\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message))\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretField);\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/CreateRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateRoomModal extends Component<MappedProps, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4()\n  };\n\n  public componentDidMount() {\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title=\"Create Room\"\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">Room Name</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder=\"Room Name...\"\n            maxLength={20}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={e => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label=\"Room Key\"\n          placeholder=\"Room Key...\"\n          value={secret}\n          onChange={newSecret => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Create\" kind=\"primary\" icon=\"plus\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n    </Fragment>\n  );\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(\"Room name is invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"Room secret is invalid\");\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n  };\n}\n\nexport default CreateRoomModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateRoomModal from \"../../components/Room/CreateRoomModal\";\nimport { createRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createRoom(name, secret)),\n  onError: (message: string) => dispatch(displayError(message))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateRoomModal);\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/CreateUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateUserModal extends Component<MappedProps, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4()\n  };\n\n  public componentDidMount() {\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title=\"Create User\"\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">User Name</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder=\"User Name...\"\n            maxLength={20}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={e => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label=\"User Secret\"\n          placeholder=\"User Secret...\"\n          value={secret}\n          onChange={newSecret => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Create\" kind=\"primary\" icon=\"plus\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n      <IconButton\n        title=\"Connect\"\n        kind=\"default\"\n        icon=\"sign-in\"\n        onClick={this.props.onToggle}\n      />\n    </Fragment>\n  );\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(\"User name is invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"User secret is invalid\");\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n  };\n}\n\nexport default CreateUserModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateUserModal from \"../../components/Users/CreateUserModal\";\nimport { createUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createUser(name, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"ConnectUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateUserModal);\n","// import Axios from \"axios\";\nimport jsonp from \"jsonp\";\n\n// ------------------------------------------------------------------\n\ntype SearchResult<T> = {\n  data: T[];\n  total: number;\n};\n\nexport type SearchAllResults = {\n  albums: SearchResult<ApiAlbum>;\n  playlists: SearchResult<ApiPlaylist>;\n  tracks: SearchResult<ApiTrack>;\n};\n\nexport type ApiAlbum = {\n  artist: {\n    id: number;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  available: boolean;\n  cover_big: string;\n  cover_small: string;\n  id: number;\n  link: string;\n  nb_tracks: number;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  type: \"album\";\n};\n\nexport type ApiPlaylist = {\n  description: string;\n  id: number;\n  link: string;\n  nb_tracks: number;\n  picture_big: string;\n  picture_small: string;\n  public: true;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  type: \"playlist\";\n};\n\nexport type ApiTrack = {\n  album: {\n    id: number;\n    title: string;\n    cover_big: string;\n    cover_small: string;\n  };\n  artist: {\n    id: number;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  duration: number;\n  id: number;\n  link: string;\n  preview: string;\n  readable: boolean;\n  title: string;\n  type: \"track\";\n};\n\n// ------------------------------------------------------------------\n\nexport const Api = () => {\n  const API_BASE = \"https://api.deezer.com\";\n\n  const asyncJsonp = <T>(url: string): Promise<T> =>\n    new Promise((resolve, reject) => {\n      jsonp(url, void 0, (err, data) => {\n        if (err) {\n          reject(new Error(err.message));\n        } else {\n          resolve(data);\n        }\n      });\n    });\n\n  const call = async <T>(path: string, qs?: string) => {\n    // We have to rely on jsonp because the Deezer api is CORS restricted\n    const fullpath = qs\n      ? `${API_BASE}/${path}?${qs}&output=jsonp&callback=`\n      : `${API_BASE}/${path}?output=jsonp&callback=`;\n    return await asyncJsonp<T>(fullpath);\n  };\n\n  const search = <T>(type: string, query: string) =>\n    call<SearchResult<T>>(`search/${type}`, `q=${encodeURIComponent(query)}`);\n\n  const load = <T>(type: string, id: string) => call<T>(`/${type}/${id}`);\n\n  const searchAlbums = (query: string) => search<ApiAlbum>(\"album\", query);\n\n  const searchPlaylists = (query: string) =>\n    search<ApiPlaylist>(\"playlist\", query);\n\n  const searchTracks = (query: string) => search<ApiTrack>(\"track\", query);\n\n  const searchAll = async (query: string): Promise<SearchAllResults> => {\n    const [albums, playlists, tracks] = await Promise.all([\n      searchAlbums(query),\n      searchPlaylists(query),\n      searchTracks(query)\n    ]);\n    return { albums, playlists, tracks };\n  };\n\n  const loadAlbum = async (id: string) => {\n    const album = await load<ApiAlbum>(\"album\", id);\n    album.tracks!.data.forEach(track => {\n      track.album = album;\n      track.artist.link = `https://www.deezer.com/artist/${track.artist.id}`;\n    });\n    return album;\n  };\n\n  const loadPlaylist = (id: string) => load<ApiPlaylist>(\"playlist\", id);\n\n  const loadTrack = (id: string) => load<ApiTrack>(\"track\", id);\n\n  return {\n    searchAll,\n    loadAlbum,\n    loadPlaylist,\n    loadTrack\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const DEFAULT_API = Api();\n","import React, { Fragment, ReactNode } from \"react\";\n//\nimport { MediaType } from \"../../utils/containers\";\n\n// ------------------------------------------------------------------\n\nconst MAX_RESULTS_COUNT = 5;\n\n// ------------------------------------------------------------------\n\nconst SearchResultCategory = <T extends { id: number }>({\n  items,\n  label,\n  cb\n}: {\n  items: T[];\n  label: string;\n  type: MediaType;\n  cb: (item: T) => ReactNode;\n}) =>\n  items.length > 0 ? (\n    <Fragment>\n      <div className=\"ModalField\">\n        <label>{label}</label>\n      </div>\n      {items.slice(0, MAX_RESULTS_COUNT).map(item => (\n        <div key={item.id} className=\"ModalField\">\n          <div className=\"SearchResultItem\">{cb(item)}</div>\n        </div>\n      ))}\n    </Fragment>\n  ) : null;\n\nexport default SearchResultCategory;\n","import React, { Component, Fragment, createRef, RefObject } from \"react\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/SearchModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport { DEFAULT_API, SearchAllResults } from \"../../utils/api\";\nimport { Album, Playlist, Track } from \"./Medias\";\nimport { MediaType } from \"../../utils/containers\";\nimport SearchResultCategory from \"./SearchResultCategory\";\nimport \"./SearchModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  mediaId: number;\n  mediaType: MediaType;\n  query: string;\n  results: SearchAllResults;\n};\n\nclass SearchModal extends Component<MappedProps, State> {\n  private queryRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    mediaId: 0,\n    mediaType: \"track\",\n    query: \"\",\n    results: {\n      albums: { data: [], total: 0 },\n      playlists: { data: [], total: 0 },\n      tracks: { data: [], total: 0 }\n    }\n  };\n\n  public componentDidMount() {\n    if (this.queryRef.current) {\n      this.queryRef.current.focus();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.props.onStopPreview();\n  }\n\n  public render = () => (\n    <FormModal\n      className=\"SearchModal\"\n      title=\"Search\"\n      onSubmit={this.onSearch}\n      renderButtons={this.renderButtons}\n    >\n      {this.renderInputs()}\n      {this.renderResults()}\n    </FormModal>\n  );\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Search\" kind=\"primary\" icon=\"search\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n    </Fragment>\n  );\n\n  private renderInputs = () => {\n    const { query } = this.state;\n    return (\n      <div className=\"ModalField\">\n        <label htmlFor=\"modal-query\">Query</label>\n        <input\n          id=\"modal-query\"\n          type=\"text\"\n          placeholder=\"Query...\"\n          maxLength={100}\n          minLength={2}\n          required={true}\n          value={query}\n          ref={this.queryRef}\n          onChange={e => {\n            this.setState({ query: e.target.value });\n          }}\n        />\n      </div>\n    );\n  };\n\n  private renderResults = () => {\n    const {\n      mediaId,\n      mediaType,\n      results: { albums, playlists, tracks }\n    } = this.state;\n    return (\n      <Fragment>\n        <SearchResultCategory\n          label=\"Albums\"\n          type=\"album\"\n          items={albums.data}\n          cb={album => (\n            <Fragment>\n              <IconButton\n                title=\"Add\"\n                icon=\"plus\"\n                onClick={() => this.onSelect(\"album\", album.id)}\n              />\n              <Album\n                album={album}\n                playing={mediaType === \"album\" && mediaId === album.id}\n                onPlay={() => this.onStartPreview(\"album\", album.id)}\n                onStop={() => this.onStopPreview()}\n              />\n            </Fragment>\n          )}\n        />\n        <SearchResultCategory\n          label=\"Playlists\"\n          type=\"playlist\"\n          items={playlists.data}\n          cb={playlist => (\n            <Fragment>\n              <IconButton\n                title=\"Add\"\n                icon=\"plus\"\n                onClick={() => this.onSelect(\"playlist\", playlist.id)}\n              />\n              <Playlist\n                playlist={playlist}\n                playing={mediaType === \"playlist\" && mediaId === playlist.id}\n                onPlay={() => this.onStartPreview(\"playlist\", playlist.id)}\n                onStop={() => this.onStopPreview()}\n              />\n            </Fragment>\n          )}\n        />\n        <SearchResultCategory\n          label=\"Tracks\"\n          type=\"track\"\n          items={tracks.data}\n          cb={track => (\n            <Fragment>\n              <IconButton\n                title=\"Add\"\n                icon=\"plus\"\n                onClick={() => this.onSelect(\"track\", track.id)}\n              />\n              <Track\n                track={track}\n                playing={mediaType === \"track\" && mediaId === track.id}\n                onPlay={() => this.onStartPreview(\"track\", track.id)}\n                onStop={() => this.onStopPreview()}\n              />\n            </Fragment>\n          )}\n        />\n      </Fragment>\n    );\n  };\n\n  private onSearch = async () => {\n    const { query } = this.state;\n    if (query.trim().length > 0) {\n      this.setState({ results: await DEFAULT_API.searchAll(query) });\n    }\n  };\n\n  private onSelect = (mediaType: MediaType, mediaId: number) =>\n    this.props.onSelect(mediaType, mediaId.toString());\n\n  private onStartPreview = (mediaType: MediaType, mediaId: number) => {\n    this.props.onStartPreview(mediaType, mediaId.toString());\n    this.setState({\n      mediaId,\n      mediaType\n    });\n  };\n\n  private onStopPreview = () => {\n    this.props.onStopPreview();\n    this.setState({\n      mediaId: 0,\n      mediaType: \"track\"\n    });\n  };\n}\n\nexport default SearchModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport SearchModal from \"../../components/Room/SearchModal\";\nimport { popModal } from \"../../actions/modals\";\nimport { previewContainer } from \"../../actions/containers\";\nimport { queueTracks } from \"../../actions/rooms\";\nimport { startPreview, stopPreview } from \"../../actions/player\";\nimport { MediaType } from \"../../utils/containers\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onSelect: (mediaType: MediaType, mediaId: string) =>\n    dispatch(\n      \"track\" === mediaType\n        ? queueTracks(\"album\", \"\", mediaId)\n        : queueTracks(mediaType, mediaId, \"\")\n    ),\n  onStartPreview: (mediaType: MediaType, mediaId: string) => {\n    dispatch(\n      \"track\" === mediaType\n        ? startPreview(mediaId)\n        : previewContainer(mediaType, mediaId)\n    );\n  },\n  onStopPreview: () => dispatch(stopPreview())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(SearchModal);\n","import React, { Component, Fragment, createRef, RefObject } from \"react\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/UnlockRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  secret: string;\n};\n\nclass UnlockRoomModal extends Component<MappedProps, State> {\n  private secretRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    secret: \"\"\n  };\n\n  public componentDidMount() {\n    if (this.secretRef.current) {\n      this.secretRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { secret } = this.state;\n    return (\n      <FormModal\n        title=\"Unlock Room\"\n        onSubmit={this.onUnlock}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">Room Key</label>\n          <input\n            id=\"modal-secret\"\n            type=\"text\"\n            placeholder=\"Room Key...\"\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            ref={this.secretRef}\n            onChange={e => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Join\" kind=\"primary\" icon=\"sign-in\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n    </Fragment>\n  );\n\n  private onUnlock = () => {\n    const { onClose, onUnlock } = this.props;\n    onUnlock(this.state.secret);\n    onClose();\n  };\n}\n\nexport default UnlockRoomModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport UnlockRoomModal from \"../../components/Room/UnlockRoomModal\";\nimport { unlockRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onUnlock: (secret: string) => dispatch(unlockRoom(secret))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(UnlockRoomModal);\n","import React, { Component, MouseEvent } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/Modals\";\nimport { ModalPrereq } from \"../../actions/modals\";\nimport ConnectUserModal from \"../../containers/Users/ConnectUserModal\";\nimport CreateRoomModal from \"../../containers/Room/CreateRoomModal\";\nimport CreateUserModal from \"../../containers/Users/CreateUserModal\";\nimport SearchModal from \"../../containers/Room/SearchModal\";\nimport UnlockRoomModal from \"../../containers/Room/UnlockRoomModal\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst TransitionTimeout = 300;\n\n// ------------------------------------------------------------------\n\nexport const getModal = (prereq: ModalPrereq) => {\n  switch (prereq.type) {\n    case \"ConnectUser\":\n      return <ConnectUserModal />;\n    case \"CreateRoom\":\n      return <CreateRoomModal />;\n    case \"CreateUser\":\n      return <CreateUserModal />;\n    case \"Search\":\n      return <SearchModal />;\n    case \"UnlockRoom\":\n      return <UnlockRoomModal />;\n  }\n};\n\n// ------------------------------------------------------------------\n\ntype State = {\n  curr_prereq?: ModalPrereq;\n  prev_prereq?: ModalPrereq; // Keeping prev modal prereq for modal fadeout\n};\n\nclass Modals extends Component<MappedProps, State> {\n  public readonly state: State = {\n    curr_prereq: void 0,\n    prev_prereq: void 0\n  };\n\n  public componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentDidUpdate = (prevProps: MappedProps) => {\n    const oldPrereq = prevProps.prereq;\n    const newPrereq = this.props.prereq;\n    if (oldPrereq !== newPrereq) {\n      // Hide current modal before showing new one (if there is a new one)\n      this.setState(\n        {\n          curr_prereq: void 0,\n          prev_prereq: oldPrereq\n        },\n        () => {\n          if (newPrereq) {\n            setTimeout(() => {\n              this.setState({\n                curr_prereq: newPrereq\n              });\n            }, TransitionTimeout);\n          }\n        }\n      );\n    }\n  };\n\n  public render = () => {\n    const { curr_prereq, prev_prereq } = this.state;\n    const prereq = curr_prereq || prev_prereq;\n    let modal = null;\n    if (prereq) {\n      modal = getModal(prereq);\n    }\n    return (\n      <CSSTransition\n        in={!!curr_prereq}\n        timeout={TransitionTimeout}\n        unmountOnExit={true}\n      >\n        <div className=\"ModalOverlay\" onClick={this.onClickOverlay}>\n          {modal && (\n            <div\n              className=\"ModalWrapper\"\n              role=\"dialog\"\n              onClick={this.onClickWrapper}\n            >\n              {modal}\n            </div>\n          )}\n        </div>\n      </CSSTransition>\n    );\n  };\n\n  private onClickOverlay = (event: MouseEvent) => {\n    // Clicking overlay will close current modal\n    event.stopPropagation();\n    this.props.onCloseModal();\n  };\n\n  private onClickWrapper = (event: MouseEvent) => {\n    // Clicking wrapper modal will not progagate to overlay which would close current modal\n    event.stopPropagation();\n  };\n\n  private onKeyDown = (e: KeyboardEvent) => {\n    if (e.keyCode === 27) {\n      this.props.onCloseModal();\n    }\n  };\n}\n\nexport default Modals;\n","import { connect } from \"react-redux\";\n//\nimport Modals from \"../../components/Modals\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  prereq:\n    state.modals.stack.length > 0\n      ? state.modals.stack[state.modals.stack.length - 1]\n      : void 0\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onCloseModal: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modals);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n//\nimport { Message } from \"../../utils/messages\";\nimport \"./Messages.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  messages: Message[];\n};\n\nclass Messages extends React.Component<Props> {\n  public render = () => (\n    <div className=\"Messages\">\n      <TransitionGroup>\n        {this.props.messages.map(message => this.renderMessage(message))}\n      </TransitionGroup>\n    </div>\n  );\n\n  public renderMessage(message: Message) {\n    return (\n      <CSSTransition\n        key={message.id}\n        classNames=\"Message\"\n        timeout={{ enter: 200, exit: 200 }}\n      >\n        <div className={classNames(\"Message\", \"Message-\" + message.type)}>\n          {message.text}\n        </div>\n      </CSSTransition>\n    );\n  }\n}\n\nexport default Messages;\n","import { connect } from \"react-redux\";\n//\nimport { RootState } from \"../../reducers\";\nimport Messages from \"../../components/App/Messages\";\n\n// ------------------------------------------------------------------\n\nexport type MappedProps = ReturnType<typeof mapStateToProps>;\n\nconst mapStateToProps = (state: RootState) => ({\n  messages: state.messages\n});\n\nexport default connect(mapStateToProps)(Messages);\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/App\";\nimport Room from \"../../containers/Room\";\nimport Splash from \"../../containers/Splash\";\nimport Modals from \"../../containers/Modals\";\nimport Messages from \"../../containers/App/Messages\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass App extends Component<MappedProps> {\n  public componentDidMount = async () => {\n    this.props.onReconnect();\n  };\n\n  public render = () => {\n    return (\n      <div className=\"App\">\n        <Modals />\n        <Switch>\n          <Route exact={true} path=\"/room/:room_id\" component={Room} />\n          <Route exact={true} path=\"/\" component={Splash} />\n          <Redirect to=\"/\" />\n        </Switch>\n        <Messages />\n      </div>\n    );\n  };\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport App from \"../../components/App\";\nimport { reconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onReconnect: () => dispatch(reconnectUser())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(App);\n","// ------------------------------------------------------------------\n\nlet AUDIO_CONTEXT: AudioContext | null = null;\n\nconst getContext = () => {\n  if (!AUDIO_CONTEXT) {\n    AUDIO_CONTEXT = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n  }\n  return AUDIO_CONTEXT;\n};\n\nconst decodeAudioData = (encodedBuffer: ArrayBuffer): Promise<AudioBuffer> =>\n  new Promise((resolve, reject) =>\n    getContext().decodeAudioData(encodedBuffer, resolve, reject)\n  );\n\n// ------------------------------------------------------------------\n\n// Fix Safari and iOS Audio Context\n(() => {\n  const fixAudioContext = () => {\n    document.removeEventListener(\"click\", fixAudioContext);\n    document.removeEventListener(\"touchstart\", fixAudioContext);\n    console.log(\"Fixing audio context...\");\n    const context = getContext();\n    // Create empty buffer, connect to output, play sound\n    var buffer = context.createBuffer(1, 1, 22050);\n    var source = context.createBufferSource();\n    source.buffer = buffer;\n    source.connect(context.destination);\n    source.start(0);\n  };\n  document.addEventListener(\"click\", fixAudioContext);\n  document.addEventListener(\"touchstart\", fixAudioContext);\n})();\n\n// ------------------------------------------------------------------\n\nexport type PlayerCallbacks = {\n  onStart: () => void;\n  onStop: () => void;\n};\n\nexport const Player = () => {\n  let analyserNode: AnalyserNode | null = null;\n  let gainNode: GainNode | null = null;\n  let node: AudioNode | null = null;\n\n  const getNode = () => {\n    if (!node) {\n      const context = getContext();\n      node = context.destination;\n\n      gainNode = context.createGain();\n      gainNode.gain.value = 1.0;\n      gainNode.connect(node);\n      node = gainNode;\n\n      analyserNode = context.createAnalyser();\n      analyserNode.fftSize = 128;\n      // analyserNode.minDecibels = -90;\n      // analyserNode.maxDecibels = -10;\n      analyserNode.connect(node);\n      node = analyserNode;\n    }\n    return node;\n  };\n\n  let buffer: AudioBuffer | null = null;\n  let bufferUrl: string = \"\";\n\n  let sourceNode: AudioBufferSourceNode | null = null;\n  let playCount = 0;\n\n  const isPlaying = () => playCount > 0;\n\n  const loadAudioBuffer = (url: string): Promise<AudioBuffer> =>\n    new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.open(\"GET\", url, true);\n      req.responseType = \"arraybuffer\";\n      req.addEventListener(\n        \"error\",\n        () => reject(new Error(\"Audio buffer loading failed\")),\n        false\n      );\n      req.addEventListener(\n        \"load\",\n        async () => {\n          try {\n            resolve(await decodeAudioData(req.response as ArrayBuffer));\n          } catch (error) {\n            console.log(\"An error occurred while decoding audio data\");\n            reject(error);\n          }\n        },\n        false\n      );\n      req.send();\n    });\n\n  const play = async (url: string, offset: number) => {\n    if (bufferUrl !== url) {\n      console.log(\"Loading audio...\", { url });\n      buffer = await loadAudioBuffer(url);\n      bufferUrl = url;\n    }\n    stop();\n    playCount++;\n    console.log(\"Starting audio...\");\n    sourceNode = getContext().createBufferSource();\n    sourceNode.buffer = buffer;\n    sourceNode.loop = false;\n    sourceNode.loopStart = 0;\n    sourceNode.loopEnd = 0;\n    sourceNode.onended = () => {\n      console.log(\"Audio terminated...\");\n      playCount--;\n    };\n    sourceNode.playbackRate.value = 1.0;\n    sourceNode.connect(getNode());\n    sourceNode.start(0, offset); // A new BufferSource must be created for each start\n  };\n\n  const stop = () => {\n    if (null !== sourceNode) {\n      console.log(\"Stopping audio...\");\n      sourceNode.stop();\n      sourceNode = null;\n    }\n  };\n\n  return {\n    analyserNode,\n    gainNode,\n    isPlaying,\n    play,\n    stop\n  };\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n//\nimport { rootReducer } from \"./reducers\";\nimport App from \"./containers/App\";\nimport { DEFAULT_API } from \"./utils/api\";\nimport { Player } from \"./utils/player\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\" ? composeWithDevTools({}) : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(\n      thunk.withExtraArgument({\n        api: DEFAULT_API,\n        queuePlayer: Player(),\n        previewPlayer: Player()\n      })\n    )\n  )\n);\n\n// ------------------------------------------------------------------\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Route path=\"/\" component={App} />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}