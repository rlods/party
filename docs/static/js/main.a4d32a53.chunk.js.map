{"version":3,"sources":["reducers/containers.ts","reducers/messages.ts","reducers/modals.ts","reducers/player.ts","reducers/queue.ts","reducers/rooms.ts","reducers/tracks.ts","reducers/users.ts","utils/users.ts","reducers/index.ts","components/Common/Icon.tsx","components/Common/IconButton.tsx","utils/clipboard.ts","components/Room/Head.tsx","selectors/rooms.ts","actions/index.ts","actions/modals.ts","actions/messages.ts","utils/messages.ts","config/firebase.ts","utils/index.ts","utils/firebase.ts","actions/queue.ts","actions/tracks.ts","actions/containers.ts","utils/history.ts","actions/rooms.ts","containers/Room/Head.ts","components/Room/Cover.tsx","components/Room/Medias.tsx","components/Room/Queue.tsx","selectors/tracks.ts","utils/colorpicker.ts","actions/player.ts","containers/Room/Queue.ts","components/Room/Progress.tsx","containers/Room/Progress.ts","components/Room/Controls.tsx","containers/Room/Controls.ts","components/Room/index.tsx","containers/Room/index.ts","components/Splash/index.tsx","selectors/users.ts","actions/users.ts","containers/Splash/index.ts","components/Modals/Modal.tsx","containers/Modals/Modal.ts","components/Modals/FormModal.tsx","components/Users/ConnectUserModal.tsx","containers/Users/ConnectUserModal.ts","components/Modals/SecretField.tsx","containers/Modals/SecretField.ts","components/Room/CreateRoomModal.tsx","containers/Room/CreateRoomModal.ts","components/Users/CreateUserModal.tsx","containers/Users/CreateUserModal.ts","utils/deezer.ts","components/Room/SearchResultCategory.tsx","components/Room/SearchModal.tsx","containers/Room/SearchModal.ts","components/Room/UnlockRoomModal.tsx","containers/Room/UnlockRoomModal.ts","components/Modals/index.tsx","containers/Modals/index.ts","components/App/Messages.tsx","selectors/messages.ts","containers/App/Messages.ts","components/App/index.tsx","containers/App/index.ts","utils/player.ts","locales/en.ts","locales/fr.ts","utils/i18n.ts","index.tsx"],"names":["INITIAL_STATE","fetching","error","containers","initialState","stack","playing","track_percent","position","trackIds","room","room_access","id","secret","room_color","fg","r","g","b","bg","room_info","tracks","user","user_access","res","s","localStorage","getItem","d","JSON","parse","atob","i","console","debug","err","loadUserAccess","user_info","rootReducer","combineReducers","state","action","type","payload","copy","container","messages","filter","other","modals","pop","player","queue","rooms","info","track","users","setItem","btoa","stringify","saveUserAccess","Icon","Component","render","this","props","className","color","icon","size","title","classNames","name","style","IconButton","disabled","displayTitle","kind","onClick","aria-label","clickable","_CancelButton","t","CancelButton","withTranslation","copyToClipboard","value","a","Promise","resolve","elem","document","createElement","setAttribute","left","body","appendChild","selection","getSelection","selected","rangeCount","getRangeAt","select","execCommand","removeAllRanges","addRange","removeChild","Head","locked","onUnlock","onLock","onCopyLink","location","href","split","onMessage","window","confirm","extractRoom","isRoomLocked","createAction","openModal","prereq","popModal","MESSAGE_ID_GENERATOR","displayMessage","text","duration","dispatch","stamp","Date","getTime","setTimeout","removeMessage","displayError","response","data","message","config","databaseURL","process","firebaseApp","firebase","firebaseConfig","firebaseDatabase","MEMBERS","ref","ROOMS","USERS","FirebaseRoom","_room","child","_info","_members","_secret","_values","queue_position","timestamp","getInfo","isLocked","setSecret","newSecret","wait","reject","once","snapshot","newValues","val","Error","subscribeInfo","cb","on","subscribeMembers","cbAdded","cbRemoved","unsubscribeInfo","off","unsubscribeMembers","update","set","ServerValue","TIMESTAMP","FirebaseUser","_user","_membership","online","room_id","status","installDisconnect","onDisconnect","cancel","enter","remove","exit","setQueue","clearQueue","getState","lockRoom","appendInQueue","length","forEach","index","removeFromQueue","oldIndex","splice","setQueuePosition","moveBackward","moveForward","setTracks","onlyUnique","self","indexOf","loadTracks","enqueue","preview","deezer","previewPlayer","oldTracks","newTrackIds","trackId","newTracks","all","map","loadTrack","find","toString","play","loadContainer","containerType","containerId","containerTypeId","loadAlbum","loadPlaylist","previewContainer","createHashHistory","setRoom","setRoomAccess","setRoomColor","createRoom","v4","enterRoom","FIREBASE_CB","exitRoom","newRoom","newInfo","Object","entries","sort","track1","track2","Number","history","push","unlockRoom","queueTracks","connect","Cover","playable","image","onPlay","onStop","backgroundImage","_Album","actions","album","cover_small","link","target","rel","artist","Album","_Playlist","playlist","picture_small","Playlist","_Track","Track","Queue","trackIndex","onRemove","onSearch","key","extractTracks","CACHE","DEFAULT_COLOR","pickColor","url","jimp","resize","getPixelColor","pixel","setPlayerTrackPercent","percent","PLAYER_TIMER1","PLAYER_TIMER2","_computeNextPosition","queuePlayer","playingPosition","queuePosition","nextPosition","isPlaying","_installTimer1","getPlayingPosition","nextIndex","nextTrack","stopPlayer","_installTimer2","getTrackPercent","startPlayer","_","clearTimeout","stop","startPreview","stopPreview","_1","_2","Progress","max","Controls","onMoveBackward","onMoveForward","tracksCount","onClear","onExit","Room","componentDidMount","onEnter","componentWillUnmount","backgroundColor","withRouter","ownProps","qs","search","substr","match","params","Splash","loggedIn","onCreateRoom","onConnectUser","to","src","height","alt","onDisconnectUser","extractUser","setUser","setUserAccess","createUser","connectUser","disconnectUser","newUser","reconnectUser","Modal","children","renderFoot","onClose","onPop","has_prev_modal","onSubmit","hidden","event","preventDefault","FormModal","renderButtons","ConnectUserModal","idRef","createRef","onConnect","htmlFor","placeholder","maxLength","minLength","required","onChange","e","setState","onToggle","onError","trim","current","focus","SecretField","label","display","flexDirection","justifyContent","flexGrow","marginRight","onCopyToClipboard","ROOM_COUNTER","CreateRoomModal","nameRef","onCreate","USER_COUNTER","CreateUserModal","DEFAULT_API","asyncJsonp","jsonp","call","path","fullpath","query","encodeURIComponent","load","searchAlbums","searchPlaylists","searchTracks","searchAll","albums","playlists","DeezerApi","SearchResultCategory","items","slice","item","SearchModal","queryRef","mediaId","mediaType","results","total","renderInputs","renderResults","onSelect","onStartPreview","onStopPreview","UnlockRoomModal","secretRef","Modals","curr_prereq","prev_prereq","addEventListener","onKeyDown","removeEventListener","componentDidUpdate","prevProps","oldPrereq","newPrereq","modal","getModal","in","timeout","unmountOnExit","onClickOverlay","role","onClickWrapper","stopPropagation","onCloseModal","keyCode","Messages","React","renderMessage","extractMessages","m1","m2","App","onReconnect","exact","component","AUDIO_CONTEXT","getContext","AudioContext","webkitAudioContext","decodeAudioData","encodedBuffer","loadAudioBuffer","req","XMLHttpRequest","open","responseType","send","fixAudioContext","context","buffer","createBuffer","source","createBufferSource","destination","start","Player","chainPlay","analyserNode","gainNode","_node","_buffer","_bufferUrl","_sourceNode","_sourceNodeStartTime","_position","getOrCreateNode","createGain","gain","createAnalyser","fftSize","_loadBuffer","offset","loop","loopStart","loopEnd","onended","playbackRate","currentTime","splash","CGU","powered_with","confirm_disconnect","connection","create","disconnect","user_creation","id_is_invalid","id_placeholder","user_id","name_is_invalid","name_placeholder","secret_is_invalid","secret_placeholder","clear","confirm_clear","confirm_exit","confirm_lock","copy_link","empty","key_placeholder","link_copied_to_clipboard","name_placeholderl","room_creation","room_unlocking","unlock","unlocked","medias","by","add","search_placeholder","medias_search","backward","forward","secret_copied_to_clipboard","initLocales","log","i18next","use","initReactI18next","init","fallbackLng","lng","navigator","language","userLanguage","resources","translation","en","fr","interpolation","escapeValue","format","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","withExtraArgument","then","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a4d32a53.chunk.js","sourcesContent":["import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { ContainersAction } from \"../actions/containers\";\nimport { Containers } from \"../utils/containers\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  containers: Containers;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  containers: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const containersReducer: Reducer<State, ContainersAction> = (\n  state = INITIAL_STATE,\n  action: ContainersAction\n): State => {\n  switch (action.type) {\n    case \"containers/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"containers/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"containers/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"containers/SET_CONTAINERS\": {\n      const copy = { ...state, containers: { ...state.containers } };\n      for (const container of action.payload) {\n        copy.containers[`${container.type}|${container.id}`] = container;\n      }\n      return copy;\n    }\n    case \"containers/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { MessagesAction } from \"../actions/messages\";\nimport { Message } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type State = Message[];\n\nexport const INITIAL_STATE: State = [];\n\n// ------------------------------------------------------------------\n\nexport const messagesReducer: Reducer<State, MessagesAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"message/ADD\":\n      return [action.payload, ...state];\n    case \"message/REMOVE\":\n      return state.filter(other => other.id !== action.payload);\n    case \"message/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { ModalsAction, ModalPrereq } from \"../actions/modals\";\n\n// ------------------------------------------------------------------\n\nexport type ModalsState = {\n  stack: ModalPrereq[];\n};\n\n// ------------------------------------------------------------------\n\nexport const initialState: ModalsState = {\n  stack: []\n};\n\n// ------------------------------------------------------------------\n\nexport const modalsReducer: Reducer<ModalsState, ModalsAction> = (\n  state = initialState,\n  action\n): ModalsState => {\n  switch (action.type) {\n    case \"modals/OPEN\":\n      return {\n        ...state,\n        stack: [action.payload]\n      };\n    case \"modals/CLOSE\":\n      return {\n        ...state,\n        stack: []\n      };\n    case \"modals/PUSH\":\n      return {\n        ...state,\n        stack: [...state.stack, action.payload]\n      };\n    case \"modals/POP\":\n      const copy = [...state.stack];\n      copy.pop();\n      return {\n        ...state,\n        stack: copy\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { PlayerAction } from \"../actions/player\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  playing: boolean;\n  track_percent: number;\n};\n\nexport const INITIAL_STATE: State = {\n  playing: false,\n  track_percent: 0\n};\n\n// ------------------------------------------------------------------\n\nexport const playerReducer: Reducer<State, PlayerAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"player/START\":\n      return { ...state, playing: true };\n    case \"player/STOP\":\n      return { ...state, playing: false };\n    case \"player/SET_TRACK_PERCENT\":\n      return { ...state, track_percent: action.payload };\n    case \"player/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { QueueAction } from \"../actions/queue\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  position: number;\n  trackIds: string[];\n};\n\nexport const INITIAL_STATE: State = {\n  position: 0,\n  trackIds: []\n};\n\n// ------------------------------------------------------------------\n\nexport const queueReducer: Reducer<State, QueueAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"queue/SET\":\n      return {\n        ...state,\n        position: action.payload.position,\n        trackIds: action.payload.trackIds\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { RoomsAction } from \"../actions/rooms\";\nimport { RoomAccess, RoomInfo } from \"../utils/rooms\";\nimport { CombinedColor } from \"../utils/colorpicker\";\nimport { FirebaseRoom } from \"../utils/firebase\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  room: ReturnType<typeof FirebaseRoom> | null;\n  room_access: RoomAccess;\n  room_color: CombinedColor;\n  room_info: RoomInfo | null;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  room: null,\n  room_access: { id: \"\", secret: \"\" },\n  room_color: { fg: { r: 0, g: 0, b: 0 }, bg: { r: 255, g: 255, b: 255 } },\n  room_info: null\n};\n\n// ------------------------------------------------------------------\n\nexport const roomsReducer: Reducer<State, RoomsAction> = (\n  state = INITIAL_STATE,\n  action: RoomsAction\n): State => {\n  switch (action.type) {\n    case \"rooms/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"rooms/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"rooms/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"rooms/SET_ROOM\": {\n      return {\n        ...state,\n        room: action.payload.room,\n        room_info: action.payload.info\n      };\n    }\n    case \"rooms/SET_ROOM_ACCESS\": {\n      return {\n        ...state,\n        room_access: action.payload\n      };\n    }\n    case \"rooms/SET_ROOM_COLOR\": {\n      return {\n        ...state,\n        room_color: action.payload\n      };\n    }\n    case \"rooms/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { TracksAction } from \"../actions/tracks\";\nimport { Tracks } from \"../utils/tracks\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  tracks: Tracks;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  tracks: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const tracksReducer: Reducer<State, TracksAction> = (\n  state = INITIAL_STATE,\n  action: TracksAction\n): State => {\n  switch (action.type) {\n    case \"tracks/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"tracks/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"tracks/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"tracks/SET_TRACKS\": {\n      const copy = { ...state, tracks: { ...state.tracks } };\n      for (const track of action.payload) {\n        copy.tracks[track.id] = track;\n      }\n      return copy;\n    }\n    case \"tracks/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { UsersAction } from \"../actions/users\";\nimport {\n  saveUserAccess,\n  loadUserAccess,\n  UserAccess,\n  UserInfo\n} from \"../utils/users\";\nimport { FirebaseUser } from \"../utils/firebase\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  user: ReturnType<typeof FirebaseUser> | null;\n  user_access: UserAccess;\n  user_info: UserInfo | null;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  user: null,\n  user_access: loadUserAccess(),\n  user_info: null\n};\n\n// ------------------------------------------------------------------\n\nexport const usersReducer: Reducer<State, UsersAction> = (\n  state = INITIAL_STATE,\n  action: UsersAction\n): State => {\n  switch (action.type) {\n    case \"users/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"users/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"users/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"users/SET_USER\": {\n      return {\n        ...state,\n        user: action.payload.user,\n        user_info: action.payload.info\n      };\n    }\n    case \"users/SET_USER_ACCESS\": {\n      saveUserAccess(action.payload);\n      return {\n        ...state,\n        user_access: { ...action.payload }\n      };\n    }\n    case \"users/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","export type UserInfo = {\n  name: string;\n  online: boolean;\n  room_id: string;\n  status: string;\n  timestamp: number;\n};\n\nexport type UserAccess = {\n  id: string;\n  secret: string;\n};\n\n// ------------------------------------------------------------------\n\nexport const loadUserAccess = (): UserAccess => {\n  const res: UserAccess = {\n    id: \"\",\n    secret: \"\"\n  };\n  const s = localStorage.getItem(\"U\");\n  if (s) {\n    try {\n      const d = JSON.parse(atob(s));\n      if (typeof d.i === \"string\" && typeof d.s === \"string\") {\n        res.id = d.i;\n        res.secret = d.s;\n        console.debug(\"Loaded user access: \", res);\n      }\n    } catch (err) {}\n  }\n  return res;\n};\n\nexport const saveUserAccess = ({ id, secret }: UserAccess) => {\n  localStorage.setItem(\n    \"U\",\n    btoa(\n      JSON.stringify({\n        i: id,\n        s: secret\n      })\n    )\n  );\n};\n","import { combineReducers } from \"redux\";\nimport { containersReducer as containers } from \"./containers\";\nimport { messagesReducer as messages } from \"./messages\";\nimport { modalsReducer as modals } from \"./modals\";\nimport { playerReducer as player } from \"./player\";\nimport { queueReducer as queue } from \"./queue\";\nimport { roomsReducer as rooms } from \"./rooms\";\nimport { tracksReducer as tracks } from \"./tracks\";\nimport { usersReducer as users } from \"./users\";\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const rootReducer = combineReducers({\n  containers,\n  messages,\n  modals,\n  player,\n  queue,\n  rooms,\n  tracks,\n  users\n});\n","import React, { Component } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport classNames from \"classnames\";\n//\nimport \"./Icon.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  icon: string;\n  size?: \"S\" | \"M\" | \"L\";\n  title?: string;\n};\n\nclass Icon extends Component<Props> {\n  public render = () => {\n    const { className, color, icon, size = \"M\", title } = this.props;\n    return (\n      <FontAwesome\n        className={classNames(\"Icon\", className, size)}\n        name={icon}\n        style={{ color }}\n        title={title}\n      />\n    );\n  };\n}\n\nexport default Icon;\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"./Icon\";\nimport \"./IconButton.scss\";\n\n// ------------------------------------------------------------------\n\ntype ButtonType = \"button\" | \"submit\";\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  disabled?: boolean;\n  displayTitle?: boolean;\n  icon: string;\n  kind?: \"default\" | \"primary\" | \"danger\" | \"special\";\n  onClick?: () => void;\n  size?: \"S\" | \"M\" | \"L\";\n  title: string;\n  type?: ButtonType;\n};\n\nclass IconButton extends Component<Props> {\n  public render = () => {\n    const {\n      className,\n      color,\n      disabled = false,\n      displayTitle = false,\n      icon,\n      kind = \"default\",\n      onClick,\n      size,\n      title,\n      type = \"button\",\n    } = this.props;\n    return (\n      <button\n        type={type}\n        aria-label={title}\n        className={classNames(\"IconButton\", className, kind, size, {\n          clickable: !disabled && (!!onClick || type === \"submit\"),\n        })}\n        onClick={disabled ? void 0 : onClick}\n        title={title}\n      >\n        <Icon color={color} icon={icon} size={size} />\n        {displayTitle && (\n          <div className={classNames(\"IconButtonTitle\", size)}>{title}</div>\n        )}\n      </button>\n    );\n  };\n}\n\nexport default IconButton;\n\n// ------------------------------------------------------------------\n\ntype CancelButtonProps = {\n  onClick: () => void;\n};\n\nclass _CancelButton extends Component<CancelButtonProps & WithTranslation> {\n  public render = () => {\n    const { onClick, t } = this.props;\n    return (\n      <IconButton\n        onClick={onClick}\n        title={t(\"cancel\")}\n        kind=\"default\"\n        icon=\"ban\"\n      />\n    );\n  };\n}\n\nexport const CancelButton = withTranslation()(_CancelButton);\n","// https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\nexport const copyToClipboard = async (value: string): Promise<void> =>\n  await new Promise(resolve => {\n    const elem = document.createElement(\"textarea\");\n    elem.value = value;\n    elem.setAttribute(\"readonly\", \"\");\n    elem.style.position = \"absolute\";\n    elem.style.left = \"-9999px\";\n\n    document.body.appendChild(elem);\n    const selection = document.getSelection();\n    if (selection !== null) {\n      const selected =\n        selection.rangeCount > 0 ? selection.getRangeAt(0) : false;\n      elem.select();\n      document.execCommand(\"copy\");\n      if (selected !== false) {\n        selection.removeAllRanges();\n        selection.addRange(selected);\n      }\n    }\n    document.body.removeChild(elem);\n    resolve();\n  });\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Room/Head\";\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport \"./Head.scss\";\n\n// ------------------------------------------------------------------\n\nclass Head extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const { locked, room, onUnlock, t } = this.props;\n    return (\n      <div className=\"Head\">\n        <div className=\"RoomStatus\">\n          {locked ? (\n            <IconButton\n              icon=\"lock\"\n              onClick={onUnlock}\n              size=\"M\"\n              title={t(\"rooms.locked\")}\n            />\n          ) : (\n            <IconButton\n              icon=\"unlock\"\n              onClick={this.onLock}\n              size=\"M\"\n              title={t(\"rooms.unlocked\")}\n            />\n          )}\n        </div>\n        <div className=\"RoomName\">{room ? room.name : \"\"}</div>\n        <div className=\"RoomLink\">\n          <IconButton\n            icon=\"link\"\n            onClick={this.onCopyLink}\n            size=\"M\"\n            title={t(\"rooms.copy_link\")}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyLink = async () => {\n    const { t } = this.props;\n    await copyToClipboard(document.location.href.split(\"?\")[0]);\n    this.props.onMessage(t(\"rooms.link_copied_to_clipboard\"));\n  };\n\n  private onLock = () => {\n    const { t } = this.props;\n    if (window.confirm(t(\"rooms.confirm_lock\"))) {\n      this.props.onLock();\n    }\n  };\n}\n\nexport default withTranslation()(Head);\n","import { RootState } from \"../reducers\";\n\nexport const extractRoom = (state: RootState) => state.rooms.room_info;\n\nexport const isRoomLocked = (state: RootState) =>\n  !state.rooms.room_access.secret;\n","import { AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../reducers\";\nimport { Player } from \"../utils/player\";\nimport { DeezerApi } from \"../utils/deezer\";\n\n// ------------------------------------------------------------------\n\nexport type Action<T extends string> = {\n  type: T;\n};\n\nexport type ActionWithPayload<T extends string, P> = {\n  type: T;\n  payload: P;\n};\n\nexport type Extended = {\n  deezer: ReturnType<typeof DeezerApi>;\n  previewPlayer: ReturnType<typeof Player>;\n  queuePlayer: ReturnType<typeof Player>;\n};\n\nexport type Dispatch = ThunkDispatch<RootState, Extended, AnyAction>;\n\nexport type AsyncAction = ThunkAction<void, RootState, Extended, AnyAction>;\n\nexport function createAction<T extends string>(type: T): Action<T>;\n\nexport function createAction<T extends string, P>(\n  type: T,\n  payload: P\n): ActionWithPayload<T, P>;\n\nexport function createAction<T extends string, P>(type: T, payload?: P) {\n  return payload === void 0 ? { type } : { type, payload };\n}\n","import { createAction } from \".\";\n\n// ------------------------------------------------------------------\n\nexport type ModalPrereqT<T extends string, P> = {\n  type: T;\n  props: P;\n};\n\nexport type ModalPrereq =\n  | ModalPrereqT<\"ConnectUser\", null>\n  | ModalPrereqT<\"CreateRoom\", null>\n  | ModalPrereqT<\"CreateUser\", null>\n  | ModalPrereqT<\"Search\", null>\n  | ModalPrereqT<\"UnlockRoom\", null>;\n\n// ------------------------------------------------------------------\n\nexport type ModalsAction =\n  | ReturnType<typeof closeModal>\n  | ReturnType<typeof openModal>\n  | ReturnType<typeof popModal>\n  | ReturnType<typeof pushModal>;\n\n// ------------------------------------------------------------------\n\nexport const openModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/OPEN\", prereq);\n\nexport const closeModal = () => createAction(\"modals/CLOSE\");\n\n// ------------------------------------------------------------------\n\nexport const pushModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/PUSH\", prereq);\n\nexport const popModal = () => createAction(\"modals/POP\");\n","import { createAction, AsyncAction } from \".\";\nimport { Message, MessageType, extractErrorMessage } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type MessagesAction =\n  | ReturnType<typeof addMessage>\n  | ReturnType<typeof clearMessages>\n  | ReturnType<typeof removeMessage>;\n\nconst addMessage = (message: Message) => createAction(\"message/ADD\", message);\n\nconst removeMessage = (id: number) => createAction(\"message/REMOVE\", id);\n\nconst clearMessages = () => createAction(\"message/RESET\");\n\n// ------------------------------------------------------------------\n\nlet MESSAGE_ID_GENERATOR: number = 0;\n\nexport const displayMessage = (\n  type: MessageType,\n  text: string,\n  duration: number = 5000\n): AsyncAction => (dispatch): any => {\n  const id = MESSAGE_ID_GENERATOR++;\n  dispatch(addMessage({ id, stamp: new Date().getTime(), text, type }));\n  setTimeout(() => dispatch(removeMessage(id)), duration);\n};\n\nexport const displayError = (text: string, error?: any): AsyncAction => (\n  dispatch\n): any => {\n  dispatch(\n    displayMessage(\n      \"error\",\n      error ? `${text}: ${extractErrorMessage(error)}` : text,\n      3000\n    )\n  );\n};\n\nexport const displayInfo = (text: string) => displayMessage(\"info\", text, 3000);\n","export type MessageType = \"error\" | \"info\";\n\nexport type Message = {\n  id: number;\n  stamp: number;\n  text: string;\n  type: MessageType;\n};\n\nexport const extractErrorMessage = (err: any) =>\n  err.response && err.response.data && err.response.data.message\n    ? err.response.data.message\n    : err.message;\n","const config = {\n  databaseURL: process.env.REACT_APP_FIREBASE_URL\n};\n\nconsole.debug(config);\n\nexport default config;\n","export const sleep = (delay: number) =>\n  new Promise(resolve => setTimeout(resolve, delay));\n","import * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n//\nimport firebaseConfig from \"../config/firebase\";\nimport { RoomInfo } from \"./rooms\";\nimport { UserInfo } from \"./users\";\nimport { sleep } from \".\";\n\n// ------------------------------------------------------------------\n\ntype FirebaseCB = (eventType: firebase.database.DataSnapshot) => void;\n\n// ------------------------------------------------------------------\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseDatabase = firebase.database(firebaseApp);\n\n// ------------------------------------------------------------------\n\nconst MEMBERS = firebaseDatabase.ref(\"members\");\nconst ROOMS = firebaseDatabase.ref(\"rooms\");\nconst USERS = firebaseDatabase.ref(\"users\");\n\n// ------------------------------------------------------------------\n\nexport const FirebaseRoom = (id: string, secret?: string) => {\n  const _room = ROOMS.child(id);\n  const _info = _room.child(\"info\");\n  const _members = MEMBERS.child(id);\n  let _secret = secret || \"\";\n  console.debug(\"INIT SECRET\", _secret);\n  let _values: RoomInfo = {\n    name: \"dummy\",\n    queue: {},\n    queue_position: 0,\n    timestamp: 0,\n    type: \"dj\",\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    console.debug(\"SETTING SECRET\", newSecret);\n    _secret = newSecret;\n  };\n\n  const wait = async (): Promise<RoomInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", (snapshot) => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"Room is invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const subscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.on(\"child_added\", cbAdded);\n    _members.on(\"child_removed\", cbRemoved);\n  };\n\n  const unsubscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.off(\"child_added\", cbAdded);\n    _members.off(\"child_removed\", cbRemoved);\n  };\n\n  const update = async ({\n    name,\n    queue,\n    queue_position,\n  }: Partial<Pick<RoomInfo, \"name\" | \"queue\" | \"queue_position\">>) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (queue !== void 0) {\n      _values.queue = queue;\n    }\n    if (queue_position !== void 0) {\n      _values.queue_position = queue_position;\n    }\n    await _room.set({\n      info: {\n        ..._values,\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n  };\n\n  return {\n    getInfo,\n    id,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    subscribeMembers,\n    unsubscribeInfo,\n    unsubscribeMembers,\n    update,\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const FirebaseUser = (id: string, secret?: string) => {\n  const _user = USERS.child(id);\n  const _info = _user.child(\"info\");\n  let _membership: firebase.database.Reference | null = null;\n  let _secret = secret || \"\";\n  let _values: UserInfo = {\n    name: \"dummy\",\n    online: false,\n    room_id: \"\",\n    status: \"\",\n    timestamp: 0,\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    _secret = newSecret;\n  };\n\n  const wait = async (): Promise<UserInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", (snapshot) => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"User is invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const update = async ({\n    name,\n    room_id,\n  }: Partial<Pick<UserInfo, \"name\" | \"room_id\">>) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (room_id !== void 0) {\n      _values.room_id = room_id;\n    }\n    await _user.set({\n      info: {\n        ..._values,\n        online: true,\n        status: \"online\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n    installDisconnect();\n  };\n\n  const installDisconnect = () => {\n    _user.onDisconnect().cancel();\n    _user.onDisconnect().set({\n      info: {\n        ..._values,\n        online: false,\n        room_id: \"\",\n        status: \"disconnected\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n  };\n\n  const enter = async (room: ReturnType<typeof FirebaseRoom>) => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: room.id,\n    });\n    _membership = MEMBERS.child(room.id).child(id);\n    _membership.onDisconnect().remove();\n    await _membership.set({\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n    });\n  };\n\n  const exit = async () => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: \"\",\n    });\n  };\n\n  return {\n    id,\n    enter,\n    exit,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    unsubscribeInfo,\n    update,\n    getInfo,\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const FirebaseParty = (\n  id: string,\n  room: ReturnType<typeof FirebaseRoom>\n) => {\n  const _members: string[] = [];\n  const _users: { [id: string]: ReturnType<typeof FirebaseUser> } = {};\n  let _info: RoomInfo = {\n    name: \"\",\n    queue: {},\n    queue_position: 0,\n    timestamp: 0,\n    type: \"dj\",\n  };\n\n  const _onAdded = (added: firebase.database.DataSnapshot) => {\n    const userId = added.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index === -1) {\n        _members.push(userId);\n        _users[userId] = FirebaseUser(userId);\n        _log();\n      }\n    }\n  };\n\n  const _onRemoved = (removed: firebase.database.DataSnapshot) => {\n    const userId = removed.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index !== -1) {\n        _members.splice(index, 1);\n        delete _users[userId];\n        _log();\n      }\n    }\n  };\n\n  const _onRoomInfo = (snapshot: firebase.database.DataSnapshot) => {\n    const newValues = snapshot.val() as RoomInfo | null;\n    if (newValues) {\n      _info = newValues;\n      _log();\n    }\n  };\n\n  const _log = () => {\n    console.debug(\"PARTY\", {\n      _info,\n      _members,\n    });\n  };\n\n  const init = () => {\n    room.subscribeInfo(_onRoomInfo);\n    room.subscribeMembers(_onAdded, _onRemoved);\n  };\n\n  const terminate = () => {\n    room.unsubscribeInfo(_onRoomInfo);\n    room.unsubscribeMembers(_onAdded, _onRemoved);\n  };\n\n  return {\n    init,\n    terminate,\n  };\n};\n\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n\nexport const testRoom = async () => {\n  const room = FirebaseRoom(\"r1\", \"rs1\");\n  await room.update({ name: \"R1\" });\n  room.subscribeInfo((info) => console.debug(\"ROOM\", info.val()));\n  room.subscribeMembers(\n    (members) => console.debug(\"ADDED\", members.key),\n    (members) => console.debug(\"REMOVED\", members.key)\n  );\n  await room.update({ name: \"R1\" });\n  await sleep(1000);\n  await room.update({\n    name: \"R1b\",\n    queue: {},\n    queue_position: 0,\n  });\n};\n\nexport const testUser = async () => {\n  const user = FirebaseUser(\"u1\", \"us1\");\n  user.subscribeInfo((info) => console.debug(\"USER\", info.val()));\n  await user.update({ name: \"U1\" });\n  await sleep(1000);\n  await user.update({ name: \"U1b\" });\n};\n\nexport const testParty = async () => {\n  const room1 = FirebaseRoom(\"r1\", \"rs1\");\n  await room1.update({ name: \"R1\" });\n  const room2 = FirebaseRoom(\"r2\", \"rs2\");\n  await room2.update({ name: \"R2\" });\n  const user1 = FirebaseUser(\"u1\", \"us1\");\n  await user1.update({ name: \"U1\" });\n  const user2 = FirebaseUser(\"u2\", \"us2\");\n  await user2.update({ name: \"U2\" });\n\n  await sleep(2000);\n\n  const party1 = FirebaseParty(\"P1\", room1);\n  await party1.init();\n  const party2 = FirebaseParty(\"P2\", room2);\n  await party2.init();\n\n  await sleep(1000);\n  user1.enter(room1);\n  await sleep(1000);\n  user2.enter(room1);\n  await sleep(1000);\n  user1.enter(room2);\n  await sleep(1000);\n  user1.exit();\n  await sleep(1000);\n  user1.enter(room1);\n};\n\nexport const test = () => {\n  // testRoom();\n  // testUser();\n  // testParty();\n};\n","import { createAction, AsyncAction } from \".\";\nimport { RoomQueue } from \"../utils/rooms\";\nimport { displayError } from \"./messages\";\nimport { lockRoom } from \"./rooms\";\n\n// ------------------------------------------------------------------\n\nexport type QueueAction = ReturnType<typeof setQueue>;\n\nexport const setQueue = (trackIds: string[], position: number) =>\n  createAction(\"queue/SET\", { position, trackIds });\n\n// ------------------------------------------------------------------\n\nexport const clearQueue = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: { room }\n  } = getState();\n  if (room && !room.isLocked()) {\n    try {\n      console.debug(\"Clearing queue...\");\n      await room.update({ queue: {}, queue_position: 0 });\n    } catch (err) {\n      dispatch(displayError(\"Cannot clear queue\"));\n      dispatch(lockRoom());\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const appendInQueue = (trackIds: string[]): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: { room }\n  } = getState();\n  if (room && !room.isLocked() && trackIds.length > 0) {\n    try {\n      console.debug(\"Appending queue...\", { trackIds });\n      const queue: RoomQueue = {};\n      [...getState().queue.trackIds, ...trackIds].forEach((id, index) => {\n        queue[index] = {\n          id,\n          type: \"deezer\"\n        };\n      });\n      await room.update({ queue });\n    } catch (err) {\n      dispatch(displayError(\"Cannot append in queue\"));\n      dispatch(lockRoom());\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const removeFromQueue = (index: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    queue: { trackIds, position },\n    rooms: { room }\n  } = getState();\n  if (room && !room.isLocked()) {\n    if (index < trackIds.length) {\n      try {\n        console.debug(\"Removing from queue...\", { index });\n        const oldIndex = position % trackIds.length;\n        const queue: RoomQueue = {};\n        const copy = [...getState().queue.trackIds];\n        copy.splice(index, 1);\n        copy.forEach((id, index) => {\n          queue[index] = {\n            id,\n            type: \"deezer\"\n          };\n        });\n        await room.update({\n          queue,\n          queue_position: index < oldIndex ? position - 1 : position\n        });\n      } catch (err) {\n        dispatch(displayError(\"Cannot remove from queue\"));\n        dispatch(lockRoom());\n      }\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const setQueuePosition = (position: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: { room }\n  } = getState();\n  if (room && !room.isLocked()) {\n    try {\n      console.debug(\"Set queue position...\", { position });\n      await room.update({ queue_position: position });\n    } catch (err) {\n      dispatch(displayError(\"Cannot set queue position\"));\n      dispatch(lockRoom());\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const moveBackward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { position, trackIds }\n  } = getState();\n  if (trackIds.length > 0) {\n    console.debug(\"Moving backward...\");\n    dispatch(\n      setQueuePosition(position > 0 ? position - 1 : trackIds.length - 1)\n    );\n  }\n};\n\nexport const moveForward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { position, trackIds }\n  } = getState();\n  if (trackIds.length > 0) {\n    console.debug(\"Moving forward...\");\n    dispatch(setQueuePosition(position + 1));\n  }\n};\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { appendInQueue } from \"./queue\";\nimport { ApiTrack } from \"../utils/deezer\";\n\n// ------------------------------------------------------------------\n\nexport type TracksAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setTracks>;\n\nconst fetching = () => createAction(\"tracks/FETCHING\");\nconst success = () => createAction(\"tracks/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"tracks/ERROR\", error);\nconst reset = () => createAction(\"tracks/RESET\");\nexport const setTracks = (tracks: ApiTrack[]) =>\n  createAction(\"tracks/SET_TRACKS\", tracks);\n\n// ------------------------------------------------------------------\n\nconst onlyUnique = (value: string, index: number, self: string[]) =>\n  self.indexOf(value) === index;\n\nexport const loadTracks = (\n  trackIds: string[],\n  enqueue: boolean,\n  preview: boolean\n): AsyncAction => async (dispatch, getState, { deezer, previewPlayer }) => {\n  if (trackIds.length > 0) {\n    try {\n      const {\n        tracks: { tracks: oldTracks }\n      } = getState();\n      const newTrackIds: string[] = trackIds\n        .filter(trackId => !oldTracks[trackId])\n        .filter(onlyUnique);\n      let newTracks: ApiTrack[] = [];\n      if (newTrackIds.length > 0) {\n        console.debug(\"Loading track...\", { trackIds: newTrackIds });\n        newTracks = await Promise.all(\n          newTrackIds.map(trackId => deezer.loadTrack(trackId))\n        );\n        dispatch(setTracks(newTracks));\n      }\n      if (enqueue) {\n        console.debug(\"Enqueuing track...\", { trackIds });\n        dispatch(appendInQueue(trackIds));\n      }\n      if (preview) {\n        const trackId = trackIds[0];\n        const track =\n          oldTracks[trackId] ||\n          newTracks.find(track => track.id.toString() === trackId);\n        console.debug(\"Previewing track...\", { track, trackId });\n        await previewPlayer.play(0, track.preview, 0);\n      }\n    } catch (err) {\n      dispatch(displayError(\"Cannot load track\", err));\n    }\n  }\n};\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { Container, ContainerType } from \"../utils/containers\";\nimport { displayError } from \"./messages\";\nimport { appendInQueue } from \"./queue\";\nimport { loadTracks, setTracks } from \"./tracks\";\n\n// ------------------------------------------------------------------\n\nexport type ContainersAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setContainers>;\n\nconst fetching = () => createAction(\"containers/FETCHING\");\nconst success = () => createAction(\"containers/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"containers/ERROR\", error);\nconst reset = () => createAction(\"containers/RESET\");\nconst setContainers = (containers: Container[]) =>\n  createAction(\"containers/SET_CONTAINERS\", containers);\n\n// ------------------------------------------------------------------\n\nexport const loadContainer = (\n  containerType: ContainerType,\n  containerId: string,\n  enqueue: boolean,\n  preview: boolean\n): AsyncAction => async (dispatch, getState, { deezer }) => {\n  try {\n    const state = getState();\n    const containerTypeId = `${containerType}|${containerId}`;\n    let container = state.containers.containers[containerTypeId];\n    if (!container) {\n      console.debug(\"Loading container...\", { containerId, containerType });\n      switch (containerType) {\n        case \"album\":\n          container = await deezer.loadAlbum(containerId);\n          break;\n        case \"playlist\":\n          container = await deezer.loadPlaylist(containerId);\n          break;\n      }\n    }\n    if (container) {\n      dispatch(setContainers([container]));\n      if (container.tracks && container.tracks.data.length > 0) {\n        dispatch(setTracks(container.tracks.data));\n        if (enqueue) {\n          console.debug(\"Enqueuing container...\");\n          dispatch(\n            appendInQueue(\n              container.tracks.data.map(track => track.id.toString())\n            )\n          );\n        }\n        if (preview) {\n          console.debug(\"Previewing container...\");\n          dispatch(\n            loadTracks([container.tracks.data[0].id.toString()], false, true)\n          );\n        }\n      }\n    }\n  } catch (err) {\n    dispatch(displayError(\"Cannot load container\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const previewContainer = (\n  containerType: ContainerType,\n  containerId: string\n): AsyncAction => async dispatch => {\n  console.debug(\"Previewing container...\", { containerType, containerId });\n  dispatch(loadContainer(containerType, containerId, false, true));\n};\n","import { createHashHistory } from \"history\";\n\nexport default createHashHistory();\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { RoomInfo } from \"../utils/rooms\";\nimport { FirebaseRoom } from \"../utils/firebase\";\nimport { loadTracks } from \"./tracks\";\nimport { loadContainer } from \"./containers\";\nimport { ContainerType } from \"../utils/containers\";\nimport { CombinedColor } from \"../utils/colorpicker\";\nimport history from \"../utils/history\";\nimport { setQueue } from \"./queue\";\n\n// ------------------------------------------------------------------\n\nexport type RoomsAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setRoom>\n  | ReturnType<typeof setRoomAccess>\n  | ReturnType<typeof setRoomColor>;\n\nconst fetching = () => createAction(\"rooms/FETCHING\");\nconst success = () => createAction(\"rooms/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"rooms/ERROR\", error);\nconst reset = () => createAction(\"rooms/RESET\");\nconst setRoom = (\n  room: ReturnType<typeof FirebaseRoom> | null,\n  info: RoomInfo | null\n) => createAction(\"rooms/SET_ROOM\", { info, room });\nconst setRoomAccess = (id: string, secret: string) =>\n  createAction(\"rooms/SET_ROOM_ACCESS\", { id, secret });\nexport const setRoomColor = (color: CombinedColor) =>\n  createAction(\"rooms/SET_ROOM_COLOR\", color);\n\n// ------------------------------------------------------------------\n\nexport const createRoom = (\n  name: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  try {\n    const id = v4();\n    console.debug(\"Creating room...\", { id, secret });\n    await FirebaseRoom(id, secret).update({ name });\n    dispatch(enterRoom(id, secret));\n  } catch (err) {\n    dispatch(displayError(\"Cannot create room\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_CB: any = null;\n\nexport const enterRoom = (id: string, secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: { room }\n  } = getState();\n  if (!room || room.id !== id) {\n    dispatch(exitRoom());\n    try {\n      console.debug(\"Entering room...\", { id, secret });\n      const newRoom = FirebaseRoom(id, secret);\n      dispatch(setRoom(newRoom, await newRoom.wait()));\n      dispatch(setRoomAccess(id, secret));\n      FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n        const newInfo = snapshot.val() as RoomInfo;\n        let trackIds: string[] = [];\n        if (newInfo.queue) {\n          trackIds = Object.entries(newInfo.queue)\n            .sort((track1, track2) => Number(track1[0]) - Number(track2[0]))\n            .map(track => track[1].id);\n          dispatch(loadTracks(trackIds, false, false));\n        }\n        dispatch(setQueue(trackIds, newInfo.queue_position));\n        dispatch(setRoom(newRoom, newInfo));\n      };\n      newRoom.subscribeInfo(FIREBASE_CB);\n      history.push(`/room/${id}?key=${secret}`); // TODO: should push only if we're not already in it\n    } catch (err) {\n      dispatch(displayError(\"Cannot join room\", err));\n    }\n  }\n};\n\nexport const exitRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: { room }\n  } = getState();\n  if (room) {\n    console.debug(\"Exiting room...\");\n    room.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_CB = null;\n    dispatch(setRoom(null, null));\n    dispatch(setRoomAccess(\"\", \"\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const lockRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: {\n      room,\n      room_access: { id }\n    }\n  } = getState();\n  if (room && room.id === id) {\n    console.debug(\"Locking room...\", { id });\n    room.setSecret(\"\");\n    dispatch(setRoomAccess(id, \"\"));\n  }\n};\n\nexport const unlockRoom = (secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: {\n      room,\n      room_access: { id }\n    }\n  } = getState();\n  if (room && room.id === id) {\n    console.debug(\"Unlocking room...\", { id, secret });\n    room.setSecret(secret);\n    dispatch(setRoomAccess(id, secret));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const queueTracks = (\n  containerType: ContainerType,\n  containerId: string,\n  trackId: string\n): AsyncAction => async dispatch => {\n  if (containerId) {\n    dispatch(loadContainer(containerType, containerId, true, false));\n  }\n  if (trackId) {\n    dispatch(loadTracks([trackId], true, false));\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Head from \"../../components/Room/Head\";\nimport { extractRoom, isRoomLocked } from \"../../selectors/rooms\";\nimport { openModal } from \"../../actions/modals\";\nimport { lockRoom } from \"../../actions/rooms\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n  room: extractRoom(state)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onLock: () => dispatch(lockRoom()),\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message)),\n  onUnlock: () => dispatch(openModal({ type: \"UnlockRoom\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Head);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"../Common/Icon\";\nimport \"./Cover.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  image: string;\n  onPlay: () => void;\n  onStop: () => void;\n  playable: boolean;\n  playing: boolean;\n};\n\nclass Cover extends Component<Props & WithTranslation> {\n  public render = () => {\n    const { playable, playing, image, onPlay, onStop, t } = this.props;\n    if (playable) {\n      return (\n        <div\n          className={classNames(\"Cover\", { playing })}\n          style={{ backgroundImage: `url('${image}')` }}\n          onClick={!playing ? onPlay : onStop}\n        >\n          {!playing ? (\n            <Icon icon=\"play\" title={t(\"player.play\")} />\n          ) : (\n            <Icon icon=\"pause\" title={t(\"player.stop\")} />\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={classNames(\"Cover\", { playing })}\n          style={{ backgroundImage: `url('${image}')` }}\n        >\n          {playing ? <Icon icon=\"music\" title={t(\"player.playing\")} /> : null}\n        </div>\n      );\n    }\n  };\n}\n\nexport default withTranslation()(Cover);\n","import React, { ReactNode, Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { ApiAlbum, ApiPlaylist, ApiTrack } from \"../../utils/deezer\";\nimport Cover from \"./Cover\";\nimport \"./Medias.scss\";\n\n// ------------------------------------------------------------------\n\ntype AlbumProps = {\n  actions?: ReactNode;\n  album: ApiAlbum;\n  playable: boolean;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n};\n\nexport class _Album extends Component<AlbumProps & WithTranslation> {\n  public render = () => {\n    const { actions, album, playable, playing, onPlay, onStop, t } = this.props;\n    return (\n      <div className=\"Media Album\">\n        {actions}\n        <Cover\n          playable={playable}\n          playing={playing}\n          image={album.cover_small}\n          onPlay={onPlay}\n          onStop={onStop}\n        />\n        <div className=\"Metas\">\n          <div className=\"Meta AlbumTitle\">\n            <a href={album.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {album.title}\n            </a>\n          </div>\n          <div className=\"Meta AlbumArtistName\">\n            <a\n              href={album.artist.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {t(\"medias.by\", { artist: album.artist.name })}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport const Album = withTranslation()(_Album);\n\n// ------------------------------------------------------------------\n\ntype PlaylistProps = {\n  actions?: ReactNode;\n  playlist: ApiPlaylist;\n  playable: boolean;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n};\n\nexport class _Playlist extends Component<PlaylistProps & WithTranslation> {\n  public render = () => {\n    const { actions, playlist, playable, playing, onPlay, onStop } = this.props;\n    return (\n      <div className=\"Media Playlist\">\n        {actions}\n        <Cover\n          playable={playable}\n          playing={playing}\n          image={playlist.picture_small}\n          onPlay={onPlay}\n          onStop={onStop}\n        />\n        <div className=\"Metas\">\n          <div className=\"Meta PlaylistTitle\">\n            <a href={playlist.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {playlist.title}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport const Playlist = withTranslation()(_Playlist);\n\n// ------------------------------------------------------------------\n\ntype TrackProps = {\n  actions?: ReactNode;\n  track: ApiTrack;\n  playable: boolean;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n};\n\nexport class _Track extends Component<TrackProps & WithTranslation> {\n  public render = () => {\n    const { actions, track, playable, playing, onPlay, onStop, t } = this.props;\n    return (\n      <div className=\"Media Track\">\n        {actions}\n        <Cover\n          playable={playable}\n          playing={playing}\n          image={track.album.cover_small}\n          onPlay={onPlay}\n          onStop={onStop}\n        />\n        <div className=\"Metas\">\n          <div className=\"Meta TrackTitle\">\n            <a href={track.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {track.title}\n            </a>\n          </div>\n          <div className=\"Meta TrackArtistName\">\n            <a\n              href={track.artist.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {t(\"medias.by\", { artist: track.artist.name })}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport const Track = withTranslation()(_Track);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Room/Queue\";\nimport { Track } from \"./Medias\";\nimport IconButton from \"../Common/IconButton\";\nimport \"./Queue.scss\";\n\n// ------------------------------------------------------------------\n\nclass Queue extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      locked,\n      playing,\n      trackIndex,\n      tracks,\n      onPlay,\n      onRemove,\n      onSearch,\n      onStop,\n      t,\n    } = this.props;\n    return (\n      <div className=\"Queue\">\n        {tracks.length > 0 ? (\n          tracks.map((track, index) => (\n            <div className=\"QueueItem\" key={index}>\n              <Track\n                track={track}\n                playable={!locked}\n                playing={playing && trackIndex === index}\n                onPlay={() => onPlay(index)}\n                onStop={onStop}\n                actions={\n                  !locked ? (\n                    <IconButton\n                      title={t(\"medias.remove\")}\n                      icon=\"trash\"\n                      onClick={() => onRemove(index)}\n                    />\n                  ) : null\n                }\n              />\n            </div>\n          ))\n        ) : (\n          <div className=\"QueueEmpty\">\n            <IconButton title=\"...\" icon=\"shower\" onClick={onSearch} size=\"L\" />\n            <span onClick={onSearch}>{t(\"rooms.empty\")}</span>\n          </div>\n        )}\n      </div>\n    );\n  };\n}\n\nexport default withTranslation()(Queue);\n","import { RootState } from \"../reducers\";\nimport { ApiTrack } from \"../utils/deezer\";\n\nexport const extractTracks = (state: RootState, trackIds: string[]) => {\n  const res: Array<ApiTrack> = [];\n  const {\n    tracks: { tracks }\n  } = state;\n  for (const trackId of trackIds) {\n    const track = tracks[trackId];\n    if (!!track) {\n      res.push(track);\n    }\n  }\n  return res;\n};\n","import * as jimp from \"jimp\";\n\n// ------------------------------------------------------------------\n\nexport type Color = {\n  r: number;\n  g: number;\n  b: number;\n};\n\nexport type CombinedColor = {\n  bg: Color;\n  fg: Color;\n};\n\nconst CACHE: { [url: string]: CombinedColor } = {};\n\nconst DEFAULT_COLOR = {\n  bg: { r: 255, g: 255, b: 255 },\n  fg: { r: 0, g: 0, b: 0 }\n};\n\n// ------------------------------------------------------------------\n\n// https://stackoverflow.com/questions/3942878/how-to-decide-font-color-in-white-or-black-depending-on-background-color\nexport const pickColor = async (url: string) => {\n  let res = DEFAULT_COLOR;\n  if (url) {\n    res = CACHE[url];\n    if (!res) {\n      try {\n        const image = await jimp.read(url);\n        const pixel = await image.resize(1, 1).getPixelColor(0, 0);\n        const bg = jimp.intToRGBA(pixel);\n        CACHE[url] = res = {\n          bg,\n          fg:\n            bg.r * 0.299 + bg.g * 0.587 + bg.b * 0.114 > 186\n              ? { r: 0, g: 0, b: 0 }\n              : { r: 255, g: 255, b: 255 }\n        };\n      } catch (err) {\n        console.debug(\"An error prevented colorpicking\", err);\n      }\n    }\n  }\n  return res;\n};\n\n/*\nconst backgroundColor = color\n? `rgb(${color.r}, ${color.g}, ${color.b})`\n: void 0;\n<div\nstyle={{\n  backgroundColor\n}}\n>\nx\n</div>\n\ncolors: {\n  [id: string]: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n};,\ncolors: {}\nconst color = this.state.colors[album.id];\n\nimport { pickColor } from \"../../utils/colorpicker\";\n\nprivate XXX = async (id: number, url: string) => {\n  if (!this.state.colors[id]) {\n    const color = await pickColor(url);\n    this.setState({\n      colors: { ...this.state.colors, [id]: color }\n    });\n  }\n};\n*/\n","import { AsyncAction, createAction, Dispatch } from \".\";\nimport { setTracks } from \"./tracks\";\nimport { displayError } from \"./messages\";\nimport { setRoomColor } from \"./rooms\";\nimport { pickColor } from \"../utils/colorpicker\";\nimport { setQueuePosition } from \"./queue\";\nimport { Player } from \"../utils/player\";\nimport { RootState } from \"../reducers\";\n\n// ------------------------------------------------------------------\n\nexport type PlayerAction =\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setPlayerTrackPercent>\n  | ReturnType<typeof start>\n  | ReturnType<typeof stop>;\n\nconst reset = () => createAction(\"player/RESET\");\nconst setPlayerTrackPercent = (percent: number) =>\n  createAction(\"player/SET_TRACK_PERCENT\", percent);\nconst start = () => createAction(\"player/START\");\nconst stop = () => createAction(\"player/STOP\");\n\n// ------------------------------------------------------------------\n\nlet PLAYER_TIMER1: NodeJS.Timeout | null = null;\nlet PLAYER_TIMER2: NodeJS.Timeout | null = null;\n\nconst _computeNextPosition = (\n  queuePlayer: ReturnType<typeof Player>,\n  playingPosition: number,\n  queuePosition: number\n) => {\n  let nextPosition = -1;\n  if (playingPosition !== queuePosition) {\n    console.debug(\"Detected play change...\", {\n      playingPosition,\n      queuePosition,\n      isPlaying: queuePlayer.isPlaying(),\n    });\n    if (queuePlayer.isPlaying()) {\n      // User has clicked an other track or added/removed a track in queue\n      nextPosition = queuePosition;\n    } else {\n      // Not playing which means previous track has terminated\n      nextPosition = playingPosition >= 0 ? playingPosition : queuePosition;\n    }\n  }\n  return nextPosition;\n};\n\nconst _installTimer1 = (\n  dispatch: Dispatch,\n  getState: () => RootState,\n  queuePlayer: ReturnType<typeof Player>\n) => {\n  // Don't use setInterval because a step could be triggered before previous one terminated\n  PLAYER_TIMER1 = setTimeout(async () => {\n    const {\n      queue: { position: queuePosition, trackIds },\n      tracks: { tracks },\n    } = getState();\n    if (trackIds.length > 0) {\n      const playingPosition = queuePlayer.getPlayingPosition();\n\n      // Detect change\n      const nextPosition = _computeNextPosition(\n        queuePlayer,\n        playingPosition,\n        queuePosition\n      );\n\n      // Apply change to queue and player\n      if (nextPosition >= 0) {\n        const nextIndex = nextPosition % trackIds.length;\n        const nextTrack = tracks[trackIds[nextIndex]];\n        console.debug(\"Applying play change...\", {\n          nextPosition,\n          nextIndex,\n          nextTrack,\n        });\n        dispatch(setQueuePosition(nextPosition));\n        const [color] = await Promise.all([\n          pickColor(nextTrack.album.cover_small),\n          queuePlayer.play(nextPosition, nextTrack.preview, 0),\n        ]);\n        dispatch(setRoomColor(color));\n      }\n\n      // Reschedule time\n      _installTimer1(dispatch, getState, queuePlayer);\n    } else {\n      // Last track has been removed from queue by user\n      console.debug(\"No more tracks in queue...\");\n      dispatch(stopPlayer());\n    }\n  }, 250);\n};\n\nconst _installTimer2 = (\n  dispatch: Dispatch,\n  getState: () => RootState,\n  queuePlayer: ReturnType<typeof Player>\n) => {\n  // Don't use setInterval because a step could be triggered before previous one terminated\n  PLAYER_TIMER2 = setTimeout(async () => {\n    const {\n      queue: { trackIds },\n    } = getState();\n    if (trackIds.length > 0) {\n      // Refresh player track percent\n      dispatch(setPlayerTrackPercent(queuePlayer.getTrackPercent()));\n\n      // Reschedule time\n      _installTimer2(dispatch, getState, queuePlayer);\n    }\n  }, 200); // Must do very few operation because called very often (if we put less it creates blink on mobile when playing & scrolling)\n};\n\nexport const startPlayer = (): AsyncAction => async (\n  dispatch,\n  getState,\n  { queuePlayer }\n) => {\n  if (!PLAYER_TIMER1 && !PLAYER_TIMER2) {\n    _installTimer1(dispatch, getState, queuePlayer);\n    _installTimer2(dispatch, getState, queuePlayer);\n    dispatch(start());\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPlayer = (): AsyncAction => async (\n  dispatch,\n  _,\n  { queuePlayer }\n) => {\n  if (PLAYER_TIMER1 && PLAYER_TIMER2) {\n    clearTimeout(PLAYER_TIMER1);\n    PLAYER_TIMER1 = null;\n    clearTimeout(PLAYER_TIMER2);\n    PLAYER_TIMER2 = null;\n    await queuePlayer.stop();\n    dispatch(stop());\n    dispatch(setPlayerTrackPercent(0));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const startPreview = (trackId: string): AsyncAction => async (\n  dispatch,\n  getState,\n  { deezer, previewPlayer }\n) => {\n  try {\n    const state = getState();\n    let track = state.tracks.tracks[trackId];\n    if (!track) {\n      console.debug(\"Loading track...\", { trackId });\n      track = await deezer.loadTrack(trackId);\n      dispatch(setTracks([track]));\n    }\n    console.debug(\"Start previewing...\");\n    await previewPlayer.play(0, track.preview, 0);\n  } catch (err) {\n    dispatch(displayError(\"Cannot load track\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPreview = (): AsyncAction => async (\n  _1,\n  _2,\n  { previewPlayer }\n) => {\n  console.debug(\"Stop previewing...\");\n  await previewPlayer.stop();\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Queue from \"../../components/Room/Queue\";\nimport { extractTracks } from \"../../selectors/tracks\";\nimport { setQueuePosition, removeFromQueue } from \"../../actions/queue\";\nimport { stopPlayer, startPlayer } from \"../../actions/player\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\nimport { openModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n  playing: state.player.playing,\n  trackIndex: state.queue.position % state.queue.trackIds.length,\n  tracks: extractTracks(state, state.queue.trackIds),\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onPlay: (index: number) => {\n    dispatch(startPlayer());\n    dispatch(setQueuePosition(index));\n  },\n  onRemove: (index: number) => dispatch(removeFromQueue(index)),\n  onSearch: () => dispatch(openModal({ type: \"Search\", props: null })),\n  onStop: () => dispatch(stopPlayer()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Queue);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport { MappedProps } from \"../../containers/Room/Progress\";\nimport \"./Progress.scss\";\n\n// ------------------------------------------------------------------\n\nclass Progress extends Component<MappedProps> {\n  public render = () => {\n    const { playing, value } = this.props;\n    return (\n      <div className={classNames(\"Progress\", { playing })}>\n        <progress max={100} value={value * 100} />\n      </div>\n    );\n  };\n}\n\nexport default Progress;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Progress from \"../../components/Room/Progress\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  playing: state.player.playing,\n  value: state.player.track_percent\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Progress);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Room/Controls\";\nimport IconButton from \"../Common/IconButton\";\nimport history from \"../../utils/history\";\nimport Progress from \"../../containers/Room/Progress\";\nimport \"./Controls.scss\";\n\n// ------------------------------------------------------------------\n\nclass Controls extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      onMoveBackward,\n      onMoveForward,\n      onPlay,\n      onSearch,\n      onStop,\n      tracksCount,\n      locked,\n      playing,\n      t,\n    } = this.props;\n    return (\n      <div className=\"Controls\">\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              icon=\"step-backward\"\n              onClick={onMoveBackward}\n              size=\"M\"\n              title={t(\"player.backward\")}\n            />\n          </div>\n          <div className=\"Control\">\n            {!playing ? (\n              <IconButton\n                disabled={locked || tracksCount === 0}\n                onClick={onPlay}\n                icon=\"play\"\n                size=\"L\"\n                title={t(\"player.play\")}\n              />\n            ) : (\n              <IconButton\n                disabled={locked || tracksCount === 0}\n                onClick={onStop}\n                icon=\"pause\"\n                title={t(\"player.stop\")}\n                size=\"L\"\n              />\n            )}\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              icon=\"step-forward\"\n              onClick={onMoveForward}\n              size=\"M\"\n              title={t(\"player.forward\")}\n            />\n          </div>\n        </div>\n        <Progress />\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              onClick={this.onClear}\n              icon=\"trash\"\n              title={t(\"rooms.clear\")}\n            />\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              onClick={onSearch}\n              icon=\"search\"\n              title={t(\"medias.search\")}\n            />\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              onClick={this.onExit}\n              icon=\"sign-out\"\n              title={t(\"rooms.exit\")}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  onClear = () => {\n    const { t } = this.props;\n    if (window.confirm(t(\"rooms.confirm_clear\"))) {\n      this.props.onClear();\n    }\n  };\n\n  onExit = () => {\n    const { t } = this.props;\n    if (window.confirm(t(\"rooms.confirm_exit\"))) {\n      history.push(\"/\");\n    }\n  };\n}\n\nexport default withTranslation()(Controls);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Controls from \"../../components/Room/Controls\";\nimport { startPlayer, stopPlayer } from \"../../actions/player\";\nimport { openModal } from \"../../actions/modals\";\nimport { clearQueue, moveBackward, moveForward } from \"../../actions/queue\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  tracksCount: state.queue.trackIds.length,\n  locked: isRoomLocked(state),\n  playing: state.player.playing,\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClear: () => {\n    dispatch(clearQueue());\n    dispatch(stopPlayer());\n  },\n  onMoveBackward: () => dispatch(moveBackward()),\n  onMoveForward: () => dispatch(moveForward()),\n  onPlay: () => dispatch(startPlayer()),\n  onSearch: () => dispatch(openModal({ type: \"Search\", props: null })),\n  onStop: () => dispatch(stopPlayer()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Controls);\n","import React, { Component } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/Room\";\nimport Head from \"../../containers/Room/Head\";\nimport Queue from \"../../containers/Room/Queue\";\nimport Controls from \"../../containers/Room/Controls\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = RouteComponentProps<{\n  room_id: string;\n}>;\n\nclass Room extends Component<Props & MappedProps> {\n  public componentDidMount = () => {\n    this.props.onEnter();\n  };\n\n  public componentWillUnmount = () => {\n    this.props.onExit();\n  };\n\n  public render = () => {\n    const {\n      color: { fg, bg }\n    } = this.props;\n    return (\n      <div\n        className=\"Room\"\n        style={{\n          color: `rgb(${fg.r}, ${fg.g}, ${fg.b})`,\n          backgroundColor: `rgb(${bg.r}, ${bg.g}, ${bg.b})`\n        }}\n      >\n        <Head />\n        <Queue />\n        <Controls />\n      </div>\n    );\n  };\n}\n\nexport default withRouter(Room);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport * as qs from \"qs\";\n//\nimport { RootState } from \"../../reducers\";\nimport Room, { Props } from \"../../components/Room\";\nimport { enterRoom, exitRoom } from \"../../actions/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState, ownProps: Props) => ({\n  color: state.rooms.room_color\n});\n\nconst dispatchToProps = (\n  dispatch: ThunkDispatch<RootState, any, any>,\n  ownProps: Props\n) => {\n  const { key } = qs.parse(ownProps.location.search.substr(1)) as {\n    key?: string;\n  };\n  return {\n    onEnter: () =>\n      dispatch(enterRoom(ownProps.match.params.room_id, key || \"\")),\n    onExit: () => dispatch(exitRoom())\n  };\n};\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Room);\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Splash\";\nimport IconButton from \"../Common/IconButton\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass Splash extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const { loggedIn, onCreateRoom, onConnectUser, t } = this.props;\n    return (\n      <div className=\"Splash\">\n        <div className=\"Top\">\n          <div className=\"Logo\">\n            <Link to=\"/\">Party</Link>\n          </div>\n          <div className=\"PoweredWith\">\n            <span>{t(\"splash.powered_with\")}</span>\n            <a\n              href=\"https://www.deezer.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                src=\"/images/deezer.svg\"\n                height=\"20px\"\n                title=\"Deezer\"\n                alt=\"Deezer Logo\"\n              />\n            </a>\n          </div>\n        </div>\n        <div className=\"Middle\">\n          <div className=\"Menu\">\n            {loggedIn ? (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"plus\"\n                  onClick={onCreateRoom}\n                  size=\"L\"\n                  title={t(\"rooms.create\")}\n                />\n              </div>\n            ) : (\n              <Fragment>\n                <div className=\"MenuItem\">\n                  <IconButton\n                    displayTitle={true}\n                    onClick={onConnectUser}\n                    icon=\"sign-in\"\n                    size=\"L\"\n                    title={t(\"users.connect\")}\n                  />\n                </div>\n              </Fragment>\n            )}\n          </div>\n        </div>\n        <div className=\"Bottom\">\n          <div className=\"Menu\">\n            {loggedIn ? (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"sign-out\"\n                  onClick={this.onDisconnect}\n                  size=\"M\"\n                  title={t(\"users.disconnect\")}\n                />\n              </div>\n            ) : (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"info\"\n                  onClick={() => {}}\n                  size=\"M\"\n                  title={t(\"splash.CGU\")}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  onDisconnect = () => {\n    if (window.confirm(this.props.t(\"users.confirm_disconnect\"))) {\n      this.props.onDisconnectUser();\n    }\n  };\n}\n\nexport default withTranslation()(Splash);\n","import { RootState } from \"../reducers\";\n\nexport const extractUser = (state: RootState) => state.users.user_info;\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { UserInfo } from \"../utils/users\";\nimport { FirebaseUser } from \"../utils/firebase\";\nimport { displayError } from \"./messages\";\n\n// ------------------------------------------------------------------\n\nexport type UsersAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setUser>\n  | ReturnType<typeof setUserAccess>;\n\nconst fetching = () => createAction(\"users/FETCHING\");\nconst success = () => createAction(\"users/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"users/ERROR\", error);\nconst reset = () => createAction(\"users/RESET\");\nconst setUser = (\n  user: ReturnType<typeof FirebaseUser> | null,\n  info: UserInfo | null\n) => createAction(\"users/SET_USER\", { info, user });\nconst setUserAccess = (id: string, secret: string) =>\n  createAction(\"users/SET_USER_ACCESS\", { id, secret });\n\n// ------------------------------------------------------------------\n\nexport const createUser = (\n  name: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  try {\n    console.debug(\"Creating user...\");\n    const id = v4();\n    await FirebaseUser(id, secret).update({ name });\n    dispatch(connectUser(id, secret));\n  } catch (err) {\n    dispatch(displayError(\"Cannot create user\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_CB: any = null;\n\nexport const connectUser = (id: string, secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    users: { user }\n  } = getState();\n  if (!user || user.id !== id) {\n    dispatch(disconnectUser());\n    try {\n      console.debug(\"Connection user...\", { id, secret });\n      const newUser = FirebaseUser(id);\n      dispatch(setUser(newUser, await newUser.wait()));\n      dispatch(setUserAccess(id, secret));\n      FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n        const newInfo = snapshot.val() as UserInfo;\n        dispatch(setUser(newUser, newInfo));\n      };\n      newUser.subscribeInfo(FIREBASE_CB);\n    } catch (err) {\n      dispatch(displayError(\"Cannot connect user\", err));\n      dispatch(setUserAccess(\"\", \"\"));\n    }\n  }\n};\n\nexport const disconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    users: { user }\n  } = getState();\n  if (user) {\n    console.debug(\"Disconnecting user...\");\n    user.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_CB = null;\n    setUser(null, null);\n    dispatch(setUserAccess(\"\", \"\"));\n  }\n};\n\nexport const reconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    users: {\n      user_access: { id, secret }\n    }\n  } = getState();\n  if (id && secret) {\n    console.debug(\"Reconnecting user...\", { id, secret });\n    dispatch(connectUser(id, secret));\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Splash from \"../../components/Splash\";\nimport { extractUser } from \"../../selectors/users\";\nimport { openModal } from \"../../actions/modals\";\nimport { disconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  loggedIn: !!state.users.user_access.id,\n  user: extractUser(state)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onCreateRoom: () => dispatch(openModal({ type: \"CreateRoom\", props: null })),\n  onConnectUser: () => dispatch(openModal({ type: \"CreateUser\", props: null })),\n  onDisconnectUser: () => dispatch(disconnectUser())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Splash);\n","import React, { Component, FormEvent, ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Modals/Modal\";\nimport IconButton from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n  className?: string;\n  title: string;\n  renderFoot?: () => React.ReactNode;\n  onSubmit?: () => void;\n};\n\nclass Modal extends Component<Props & MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      children,\n      className,\n      title,\n      renderFoot,\n      onClose,\n      onPop,\n      has_prev_modal,\n      t,\n    } = this.props;\n    return (\n      <form className={classNames(\"Modal\", className)} onSubmit={this.onSubmit}>\n        <div className=\"ModalHead\">\n          <IconButton\n            kind=\"special\"\n            className={classNames(\"ModalHeadBack\", {\n              hidden: !has_prev_modal,\n            })}\n            icon=\"angle-left\"\n            title=\"Back\"\n            onClick={onPop}\n          />\n          <div className=\"ModalTitle\">{title}</div>\n          <IconButton\n            kind=\"special\"\n            className=\"ModalHeadClose\"\n            onClick={onClose}\n            title={t(\"cancel\")}\n            icon=\"times\"\n          />\n        </div>\n        <div className=\"ModalBody\">{children}</div>\n        <div className=\"ModalFoot\">{renderFoot && renderFoot()}</div>\n      </form>\n    );\n  };\n\n  private onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  };\n}\n\nexport default withTranslation()(Modal);\n","import { connect } from \"react-redux\";\n//\nimport Modal from \"../../components/Modals/Modal\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  has_prev_modal: state.modals.stack.length > 1\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onClose: () => dispatch(popModal()),\n  onPop: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport Modal from \"../../containers/Modals/Modal\";\nimport \"./FormModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  className?: string;\n  onSubmit: () => void;\n  renderButtons: () => React.ReactNode;\n  title: string;\n};\n\nclass FormModal extends Component<Props> {\n  public render = () => {\n    const { children, className, renderButtons, title, onSubmit } = this.props;\n    return (\n      <Modal\n        className={classNames(\"FormModal\", className)}\n        title={title}\n        renderFoot={renderButtons}\n        onSubmit={onSubmit}\n      >\n        {children}\n      </Modal>\n    );\n  };\n}\n\nexport default FormModal;\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/ConnectUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  id: string;\n  secret: string;\n};\n\nclass ConnectUserModal extends Component<MappedProps & WithTranslation, State> {\n  private idRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    id: \"\",\n    secret: \"\",\n  };\n\n  public componentDidMount() {\n    if (this.idRef.current) {\n      this.idRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { id, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"users.connection\")}\n        onSubmit={this.onConnect}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-id\">{t(\"users.user_id\")}</label>\n          <input\n            id=\"modal-id\"\n            type=\"text\"\n            placeholder={t(\"users.id_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={id}\n            ref={this.idRef}\n            onChange={(e) => {\n              this.setState({ id: e.target.value });\n            }}\n          />\n        </div>\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">{t(\"users.secret\")}</label>\n          <input\n            id=\"modal-secret\"\n            type=\"password\"\n            placeholder={t(\"users.secret_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            onChange={(e) => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <Fragment>\n        <IconButton\n          title={t(\"users.connect\")}\n          kind=\"primary\"\n          icon=\"sign-in\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n        <IconButton\n          title={t(\"users.create\")}\n          kind=\"default\"\n          icon=\"plus\"\n          onClick={this.props.onToggle}\n        />\n      </Fragment>\n    );\n  };\n\n  private onConnect = () => {\n    const { onClose, onConnect, onError, t } = this.props;\n    const { id, secret } = this.state;\n    if (id.trim().length === 0) {\n      onError(t(\"users.id_is_invalid\"));\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(t(\"users.secret_is_invalid\"));\n      return;\n    }\n    onConnect(id, secret);\n    onClose();\n  };\n}\n\nexport default withTranslation()(ConnectUserModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport ConnectUserModal from \"../../components/Users/ConnectUserModal\";\nimport { connectUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onConnect: (id: string, secret: string) => dispatch(connectUser(id, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"CreateUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(ConnectUserModal);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  id: string;\n  label: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  value: string;\n};\n\nclass SecretField extends Component<Props & MappedProps & WithTranslation> {\n  public render = () => {\n    const { id, label, onChange, placeholder, value } = this.props;\n    return (\n      <div className=\"ModalField\">\n        <label htmlFor={id}>{label}</label>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <input\n            style={{\n              flexGrow: 1,\n              marginRight: \"0.5rem\",\n            }}\n            id={id}\n            type=\"password\"\n            placeholder={placeholder}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n          />\n          <IconButton\n            icon=\"clipboard\"\n            onClick={this.onCopyToClipboard}\n            size=\"M\"\n            title={`Copy to Clipboard`}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyToClipboard = async () => {\n    const { onMessage, value, t } = this.props;\n    await copyToClipboard(value);\n    onMessage(t(\"secret_copied_to_clipboard\"));\n  };\n}\n\nexport default withTranslation()(SecretField);\n","import { connect } from \"react-redux\";\n//\nimport SecretField from \"../../components/Modals/SecretField\";\nimport { RootState } from \"../../reducers\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message))\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretField);\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/CreateRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\nlet ROOM_COUNTER = 1;\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateRoomModal extends Component<MappedProps & WithTranslation, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4(),\n  };\n\n  public componentDidMount() {\n    this.setState({\n      name: `${this.props.t(\"rooms.room\")} ${ROOM_COUNTER}`,\n    });\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"rooms.room_creation\")}\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">{t(\"rooms.name\")}</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder={t(\"rooms.name_placeholder\")}\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label={t(\"rooms.key\")}\n          placeholder={t(\"rooms.key_placeholder\")}\n          value={secret}\n          onChange={(newSecret) => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <Fragment>\n        <IconButton\n          title={t(\"rooms.create\")}\n          kind=\"primary\"\n          icon=\"plus\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </Fragment>\n    );\n  };\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError, t } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(t(\"rooms.name_is_invalid\"));\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(t(\"rooms.secret_is_invalid\"));\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n    ROOM_COUNTER++;\n  };\n}\n\nexport default withTranslation()(CreateRoomModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateRoomModal from \"../../components/Room/CreateRoomModal\";\nimport { createRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createRoom(name, secret)),\n  onError: (message: string) => dispatch(displayError(message))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateRoomModal);\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/CreateUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\nlet USER_COUNTER = 1;\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateUserModal extends Component<MappedProps & WithTranslation, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4(),\n  };\n\n  public componentDidMount() {\n    this.setState({\n      name: `${this.props.t(\"users.user\")} ${USER_COUNTER}`,\n    });\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"users.user_creation\")}\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">{t(\"users.name\")}</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder={t(\"users.name_placeholder\")}\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label={t(\"users.secret\")}\n          placeholder={t(\"users.secret_placeholder\")}\n          value={secret}\n          onChange={(newSecret) => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <Fragment>\n        <IconButton\n          title={t(\"users.create\")}\n          kind=\"primary\"\n          icon=\"plus\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n        <IconButton\n          title={t(\"users.connect\")}\n          kind=\"default\"\n          icon=\"sign-in\"\n          onClick={this.props.onToggle}\n        />\n      </Fragment>\n    );\n  };\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError, t } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(t(\"users.name_is_invalid\"));\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(t(\"users.secret_is_invalid\"));\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n    USER_COUNTER++;\n  };\n}\n\nexport default withTranslation()(CreateUserModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateUserModal from \"../../components/Users/CreateUserModal\";\nimport { createUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createUser(name, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"ConnectUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateUserModal);\n","// import Axios from \"axios\";\nimport jsonp from \"jsonp\";\n\n// ------------------------------------------------------------------\n\ntype SearchResult<T> = {\n  data: T[];\n  total: number;\n};\n\nexport type SearchAllResults = {\n  albums: SearchResult<ApiAlbum>;\n  playlists: SearchResult<ApiPlaylist>;\n  tracks: SearchResult<ApiTrack>;\n};\n\nexport type ApiAlbum = {\n  artist: {\n    id: number;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  available: boolean;\n  cover_big: string;\n  cover_small: string;\n  id: number;\n  link: string;\n  nb_tracks: number;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  type: \"album\";\n};\n\nexport type ApiPlaylist = {\n  description: string;\n  id: number;\n  link: string;\n  nb_tracks: number;\n  picture_big: string;\n  picture_small: string;\n  public: true;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  type: \"playlist\";\n};\n\nexport type ApiTrack = {\n  album: {\n    id: number;\n    title: string;\n    cover_big: string;\n    cover_small: string;\n  };\n  artist: {\n    id: number;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  duration: number;\n  id: number;\n  link: string;\n  preview: string;\n  readable: boolean;\n  title: string;\n  type: \"track\";\n};\n\n// ------------------------------------------------------------------\n\nexport const DeezerApi = () => {\n  const API_BASE = \"https://api.deezer.com\";\n\n  const asyncJsonp = <T>(url: string): Promise<T> =>\n    new Promise((resolve, reject) => {\n      jsonp(url, void 0, (err, data) => {\n        if (err) {\n          reject(new Error(err.message));\n        } else {\n          resolve(data);\n        }\n      });\n    });\n\n  const call = async <T>(path: string, qs?: string) => {\n    // We have to rely on jsonp because the Deezer api is CORS restricted\n    const fullpath = qs\n      ? `${API_BASE}/${path}?${qs}&output=jsonp&callback=`\n      : `${API_BASE}/${path}?output=jsonp&callback=`;\n    return await asyncJsonp<T>(fullpath);\n  };\n\n  const search = <T>(type: string, query: string) =>\n    call<SearchResult<T>>(`search/${type}`, `q=${encodeURIComponent(query)}`);\n\n  const load = <T>(type: string, id: string) => call<T>(`/${type}/${id}`);\n\n  const searchAlbums = (query: string) => search<ApiAlbum>(\"album\", query);\n\n  const searchPlaylists = (query: string) =>\n    search<ApiPlaylist>(\"playlist\", query);\n\n  const searchTracks = (query: string) => search<ApiTrack>(\"track\", query);\n\n  const searchAll = async (query: string): Promise<SearchAllResults> => {\n    const [albums, playlists, tracks] = await Promise.all([\n      searchAlbums(query),\n      searchPlaylists(query),\n      searchTracks(query)\n    ]);\n    return { albums, playlists, tracks };\n  };\n\n  const loadAlbum = async (id: string) => {\n    const album = await load<ApiAlbum>(\"album\", id);\n    album.tracks!.data.forEach(track => {\n      track.album = album;\n      track.artist.link = `https://www.deezer.com/artist/${track.artist.id}`;\n    });\n    return album;\n  };\n\n  const loadPlaylist = (id: string) => load<ApiPlaylist>(\"playlist\", id);\n\n  const loadTrack = (id: string) => load<ApiTrack>(\"track\", id);\n\n  return {\n    searchAll,\n    loadAlbum,\n    loadPlaylist,\n    loadTrack\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const DEFAULT_API = DeezerApi();\n","import React, { Fragment, ReactNode } from \"react\";\n//\nimport { MediaType } from \"../../utils/containers\";\n\n// ------------------------------------------------------------------\n\nconst MAX_RESULTS_COUNT = 5;\n\n// ------------------------------------------------------------------\n\nconst SearchResultCategory = <T extends { id: number }>({\n  items,\n  label,\n  cb\n}: {\n  items: T[];\n  label: string;\n  type: MediaType;\n  cb: (item: T) => ReactNode;\n}) =>\n  items.length > 0 ? (\n    <Fragment>\n      <div className=\"ModalField\">\n        <label>{label}</label>\n      </div>\n      {items.slice(0, MAX_RESULTS_COUNT).map(item => (\n        <div key={item.id} className=\"ModalField\">\n          <div className=\"SearchResultItem\">{cb(item)}</div>\n        </div>\n      ))}\n    </Fragment>\n  ) : null;\n\nexport default SearchResultCategory;\n","import React, { Component, Fragment, createRef, RefObject } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/SearchModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport { DEFAULT_API, SearchAllResults } from \"../../utils/deezer\";\nimport { Album, Playlist, Track } from \"./Medias\";\nimport { MediaType } from \"../../utils/containers\";\nimport SearchResultCategory from \"./SearchResultCategory\";\nimport \"./SearchModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  mediaId: number;\n  mediaType: MediaType;\n  query: string;\n  results: SearchAllResults;\n};\n\nclass SearchModal extends Component<MappedProps & WithTranslation, State> {\n  private queryRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    mediaId: 0,\n    mediaType: \"track\",\n    query: \"\",\n    results: {\n      albums: { data: [], total: 0 },\n      playlists: { data: [], total: 0 },\n      tracks: { data: [], total: 0 },\n    },\n  };\n\n  public componentDidMount() {\n    if (this.queryRef.current) {\n      this.queryRef.current.focus();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.props.onStopPreview();\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    return (\n      <FormModal\n        className=\"SearchModal\"\n        title={t(\"medias.medias_search\")}\n        onSubmit={this.onSearch}\n        renderButtons={this.renderButtons}\n      >\n        {this.renderInputs()}\n        {this.renderResults()}\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <Fragment>\n        <IconButton\n          title={t(\"medias.search\")}\n          kind=\"primary\"\n          icon=\"search\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </Fragment>\n    );\n  };\n\n  private renderInputs = () => {\n    const { t } = this.props;\n    const { query } = this.state;\n    return (\n      <div className=\"ModalField\">\n        <input\n          id=\"modal-query\"\n          type=\"text\"\n          placeholder={t(\"medias.search_placeholder\")}\n          maxLength={100}\n          minLength={2}\n          required={true}\n          value={query}\n          ref={this.queryRef}\n          onChange={(e) => {\n            this.setState({ query: e.target.value });\n          }}\n        />\n      </div>\n    );\n  };\n\n  private renderResults = () => {\n    const { locked, t } = this.props;\n    const {\n      mediaId,\n      mediaType,\n      results: { albums, playlists, tracks },\n    } = this.state;\n    return (\n      <Fragment>\n        <SearchResultCategory\n          label={t(\"medias.albums\")}\n          type=\"album\"\n          items={albums.data}\n          cb={(album) => (\n            <Album\n              actions={\n                !locked ? (\n                  <IconButton\n                    title={t(\"medias.add\")}\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"album\", album.id)}\n                  />\n                ) : null\n              }\n              album={album}\n              playable={true}\n              playing={mediaType === \"album\" && mediaId === album.id}\n              onPlay={() => this.onStartPreview(\"album\", album.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n        <SearchResultCategory\n          label={t(\"medias.playlists\")}\n          type=\"playlist\"\n          items={playlists.data}\n          cb={(playlist) => (\n            <Playlist\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Add\"\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"playlist\", playlist.id)}\n                  />\n                ) : null\n              }\n              playlist={playlist}\n              playable={true}\n              playing={mediaType === \"playlist\" && mediaId === playlist.id}\n              onPlay={() => this.onStartPreview(\"playlist\", playlist.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n        <SearchResultCategory\n          label={t(\"medias.tracks\")}\n          type=\"track\"\n          items={tracks.data}\n          cb={(track) => (\n            <Track\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Add\"\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"track\", track.id)}\n                  />\n                ) : null\n              }\n              track={track}\n              playable={true}\n              playing={mediaType === \"track\" && mediaId === track.id}\n              onPlay={() => this.onStartPreview(\"track\", track.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n      </Fragment>\n    );\n  };\n\n  private onSearch = async () => {\n    const { query } = this.state;\n    if (query.trim().length > 0) {\n      this.setState({ results: await DEFAULT_API.searchAll(query) });\n    }\n  };\n\n  private onSelect = (mediaType: MediaType, mediaId: number) =>\n    this.props.onSelect(mediaType, mediaId.toString());\n\n  private onStartPreview = (mediaType: MediaType, mediaId: number) => {\n    this.props.onStartPreview(mediaType, mediaId.toString());\n    this.setState({\n      mediaId,\n      mediaType,\n    });\n  };\n\n  private onStopPreview = () => {\n    this.props.onStopPreview();\n    this.setState({\n      mediaId: 0,\n      mediaType: \"track\",\n    });\n  };\n}\n\nexport default withTranslation()(SearchModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport SearchModal from \"../../components/Room/SearchModal\";\nimport { popModal } from \"../../actions/modals\";\nimport { previewContainer } from \"../../actions/containers\";\nimport { queueTracks } from \"../../actions/rooms\";\nimport { startPreview, stopPreview } from \"../../actions/player\";\nimport { MediaType } from \"../../utils/containers\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onSelect: (mediaType: MediaType, mediaId: string) =>\n    dispatch(\n      \"track\" === mediaType\n        ? queueTracks(\"album\", \"\", mediaId)\n        : queueTracks(mediaType, mediaId, \"\")\n    ),\n  onStartPreview: (mediaType: MediaType, mediaId: string) => {\n    dispatch(\n      \"track\" === mediaType\n        ? startPreview(mediaId)\n        : previewContainer(mediaType, mediaId)\n    );\n  },\n  onStopPreview: () => dispatch(stopPreview())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(SearchModal);\n","import React, { Component, Fragment, createRef, RefObject } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/UnlockRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  secret: string;\n};\n\nclass UnlockRoomModal extends Component<MappedProps & WithTranslation, State> {\n  private secretRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    secret: \"\",\n  };\n\n  public componentDidMount() {\n    if (this.secretRef.current) {\n      this.secretRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"rooms.room_unlocking\")}\n        onSubmit={this.onUnlock}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">{t(\"rooms.key\")}</label>\n          <input\n            id=\"modal-secret\"\n            type=\"password\"\n            placeholder={t(\"rooms.key_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            ref={this.secretRef}\n            onChange={(e) => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <Fragment>\n        <IconButton\n          title={t(\"rooms.unlock\")}\n          kind=\"primary\"\n          icon=\"unlock\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </Fragment>\n    );\n  };\n\n  private onUnlock = () => {\n    const { onClose, onUnlock } = this.props;\n    onUnlock(this.state.secret);\n    onClose();\n  };\n}\n\nexport default withTranslation()(UnlockRoomModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport UnlockRoomModal from \"../../components/Room/UnlockRoomModal\";\nimport { unlockRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onUnlock: (secret: string) => dispatch(unlockRoom(secret))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(UnlockRoomModal);\n","import React, { Component, MouseEvent } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/Modals\";\nimport { ModalPrereq } from \"../../actions/modals\";\nimport ConnectUserModal from \"../../containers/Users/ConnectUserModal\";\nimport CreateRoomModal from \"../../containers/Room/CreateRoomModal\";\nimport CreateUserModal from \"../../containers/Users/CreateUserModal\";\nimport SearchModal from \"../../containers/Room/SearchModal\";\nimport UnlockRoomModal from \"../../containers/Room/UnlockRoomModal\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst TransitionTimeout = 300;\n\n// ------------------------------------------------------------------\n\nexport const getModal = (prereq: ModalPrereq) => {\n  switch (prereq.type) {\n    case \"ConnectUser\":\n      return <ConnectUserModal />;\n    case \"CreateRoom\":\n      return <CreateRoomModal />;\n    case \"CreateUser\":\n      return <CreateUserModal />;\n    case \"Search\":\n      return <SearchModal />;\n    case \"UnlockRoom\":\n      return <UnlockRoomModal />;\n  }\n};\n\n// ------------------------------------------------------------------\n\ntype State = {\n  curr_prereq?: ModalPrereq;\n  prev_prereq?: ModalPrereq; // Keeping prev modal prereq for modal fadeout\n};\n\nclass Modals extends Component<MappedProps, State> {\n  public readonly state: State = {\n    curr_prereq: void 0,\n    prev_prereq: void 0\n  };\n\n  public componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentDidUpdate = (prevProps: MappedProps) => {\n    const oldPrereq = prevProps.prereq;\n    const newPrereq = this.props.prereq;\n    if (oldPrereq !== newPrereq) {\n      // Hide current modal before showing new one (if there is a new one)\n      this.setState(\n        {\n          curr_prereq: void 0,\n          prev_prereq: oldPrereq\n        },\n        () => {\n          if (newPrereq) {\n            setTimeout(() => {\n              this.setState({\n                curr_prereq: newPrereq\n              });\n            }, TransitionTimeout);\n          }\n        }\n      );\n    }\n  };\n\n  public render = () => {\n    const { curr_prereq, prev_prereq } = this.state;\n    const prereq = curr_prereq || prev_prereq;\n    let modal = null;\n    if (prereq) {\n      modal = getModal(prereq);\n    }\n    return (\n      <CSSTransition\n        in={!!curr_prereq}\n        timeout={TransitionTimeout}\n        unmountOnExit={true}\n      >\n        <div className=\"ModalOverlay\" onClick={this.onClickOverlay}>\n          {modal && (\n            <div\n              className=\"ModalWrapper\"\n              role=\"dialog\"\n              onClick={this.onClickWrapper}\n            >\n              {modal}\n            </div>\n          )}\n        </div>\n      </CSSTransition>\n    );\n  };\n\n  private onClickOverlay = (event: MouseEvent) => {\n    // Clicking overlay will close current modal\n    event.stopPropagation();\n    this.props.onCloseModal();\n  };\n\n  private onClickWrapper = (event: MouseEvent) => {\n    // Clicking wrapper modal will not progagate to overlay which would close current modal\n    event.stopPropagation();\n  };\n\n  private onKeyDown = (e: KeyboardEvent) => {\n    if (e.keyCode === 27) {\n      this.props.onCloseModal();\n    }\n  };\n}\n\nexport default Modals;\n","import { connect } from \"react-redux\";\n//\nimport Modals from \"../../components/Modals\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  prereq:\n    state.modals.stack.length > 0\n      ? state.modals.stack[state.modals.stack.length - 1]\n      : void 0\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onCloseModal: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modals);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/App/Messages\";\nimport { Message } from \"../../utils/messages\";\nimport \"./Messages.scss\";\n\n// ------------------------------------------------------------------\n\nclass Messages extends React.Component<MappedProps> {\n  public render = () => (\n    <div className=\"Messages\">\n      <TransitionGroup>\n        {this.props.messages.map((message) => this.renderMessage(message))}\n      </TransitionGroup>\n    </div>\n  );\n\n  public renderMessage(message: Message) {\n    return (\n      <CSSTransition\n        key={message.id}\n        classNames=\"Message\"\n        timeout={{ enter: 200, exit: 200 }}\n      >\n        <div className={classNames(\"Message\", \"Message-\" + message.type)}>\n          {message.text}\n        </div>\n      </CSSTransition>\n    );\n  }\n}\n\nexport default Messages;\n","import { RootState } from \"../reducers\";\n\n// ------------------------------------------------------------------\n\nexport const extractMessages = (state: RootState) =>\n  state.messages.sort((m1, m2) => m1.stamp - m2.stamp);\n","import { connect } from \"react-redux\";\n//\nimport { RootState } from \"../../reducers\";\nimport Messages from \"../../components/App/Messages\";\nimport { extractMessages } from \"../../selectors/messages\";\n\n// ------------------------------------------------------------------\n\nexport type MappedProps = ReturnType<typeof mapStateToProps>;\n\nconst mapStateToProps = (state: RootState) => ({\n  messages: extractMessages(state),\n});\n\nexport default connect(mapStateToProps)(Messages);\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/App\";\nimport Room from \"../../containers/Room\";\nimport Splash from \"../../containers/Splash\";\nimport Modals from \"../../containers/Modals\";\nimport Messages from \"../../containers/App/Messages\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass App extends Component<MappedProps> {\n  public componentDidMount = async () => {\n    this.props.onReconnect();\n  };\n\n  public render = () => {\n    return (\n      <div className=\"App\">\n        <Modals />\n        <Switch>\n          <Route exact={true} path=\"/room/:room_id\" component={Room} />\n          <Route exact={true} path=\"/\" component={Splash} />\n          <Redirect to=\"/\" />\n        </Switch>\n        <Messages />\n      </div>\n    );\n  };\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport App from \"../../components/App\";\nimport { reconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onReconnect: () => dispatch(reconnectUser())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(App);\n","// ------------------------------------------------------------------\n\nlet AUDIO_CONTEXT: AudioContext | null = null;\n\nconst getContext = () => {\n  if (!AUDIO_CONTEXT) {\n    AUDIO_CONTEXT = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n  }\n  return AUDIO_CONTEXT;\n};\n\nconst decodeAudioData = (encodedBuffer: ArrayBuffer): Promise<AudioBuffer> =>\n  new Promise((resolve, reject) =>\n    getContext().decodeAudioData(encodedBuffer, resolve, reject)\n  );\n\nconst loadAudioBuffer = (url: string): Promise<AudioBuffer> =>\n  new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest();\n    req.open(\"GET\", url, true);\n    req.responseType = \"arraybuffer\";\n    req.addEventListener(\n      \"error\",\n      () => reject(new Error(\"Audio buffer loading failed\")),\n      false\n    );\n    req.addEventListener(\n      \"load\",\n      async () => {\n        try {\n          resolve(await decodeAudioData(req.response as ArrayBuffer));\n        } catch (error) {\n          console.debug(\"An error occurred while decoding audio data\");\n          reject(error);\n        }\n      },\n      false\n    );\n    req.send();\n  });\n\n// ------------------------------------------------------------------\n\n// Fix Safari and iOS Audio Context\n(() => {\n  const fixAudioContext = () => {\n    document.removeEventListener(\"click\", fixAudioContext);\n    document.removeEventListener(\"touchstart\", fixAudioContext);\n    console.debug(\"Fixing audio context...\");\n    const context = getContext();\n    // Create empty buffer, connect to output, play sound\n    var buffer = context.createBuffer(1, 1, 22050);\n    var source = context.createBufferSource();\n    source.buffer = buffer;\n    source.connect(context.destination);\n    source.start(0);\n  };\n  document.addEventListener(\"click\", fixAudioContext);\n  document.addEventListener(\"touchstart\", fixAudioContext);\n})();\n\n// ------------------------------------------------------------------\n\nexport type PlayerCallbacks = {\n  onStart: () => void;\n  onStop: () => void;\n};\n\nexport const Player = (chainPlay: boolean) => {\n  let analyserNode: AnalyserNode | null = null;\n  let gainNode: GainNode | null = null;\n  let _node: AudioNode | null = null;\n  let _buffer: AudioBuffer | null = null;\n  let _bufferUrl: string = \"\";\n  let _sourceNode: AudioBufferSourceNode | null = null;\n  let _sourceNodeStartTime = 0;\n  let _position = -1;\n\n  const getOrCreateNode = () => {\n    if (!_node) {\n      const context = getContext();\n      _node = context.destination;\n\n      gainNode = context.createGain();\n      gainNode.gain.value = 1.0;\n      gainNode.connect(_node);\n      _node = gainNode;\n\n      analyserNode = context.createAnalyser();\n      analyserNode.fftSize = 128;\n      // analyserNode.minDecibels = -90;\n      // analyserNode.maxDecibels = -10;\n      analyserNode.connect(_node);\n      _node = analyserNode;\n    }\n    return _node;\n  };\n\n  const isPlaying = () => !!_sourceNode;\n\n  const getPlayingPosition = () => _position;\n\n  // Percentage [0, 1]\n  const getTrackPercent = () => {\n    if (_buffer && _sourceNode) {\n      return (\n        (getContext().currentTime - _sourceNodeStartTime) / _buffer?.duration\n      );\n    }\n    return 0;\n  };\n\n  const _loadBuffer = async (url: string) => {\n    // TODO: cache N last audio buffers\n    if (_bufferUrl !== url) {\n      console.debug(\"Loading audio...\", { url });\n      _buffer = await loadAudioBuffer(url);\n      _bufferUrl = url;\n    }\n  };\n\n  const play = async (position: number, url: string, offset: number) => {\n    await stop();\n    await _loadBuffer(url); // TODO: warning if loadBuffer takes long for some reason and user clicks stop before end, next part of this function will continue after stop have been requested\n    console.debug(\"Starting audio...\", { position, url });\n    _position = position;\n    _sourceNode = getContext().createBufferSource();\n    _sourceNode.buffer = _buffer;\n    _sourceNode.loop = false;\n    _sourceNode.loopStart = 0;\n    _sourceNode.loopEnd = 0;\n    _sourceNode.onended = () => {\n      console.debug(\"Audio terminated...\");\n      _sourceNode = null;\n      if (chainPlay) {\n        _position++;\n      }\n    };\n    _sourceNode.playbackRate.value = 1.0;\n    _sourceNode.connect(getOrCreateNode());\n    _sourceNode.start(0, offset); // A new BufferSource must be created for each start\n    _sourceNodeStartTime = getContext().currentTime;\n  };\n\n  const stop = async (): Promise<void> =>\n    new Promise((resolve) => {\n      if (null !== _sourceNode) {\n        console.debug(\"Stopping audio...\");\n        _sourceNode.onended = () => {\n          console.debug(\"Forced audio termination...\");\n          resolve();\n        };\n        _sourceNode.stop();\n        _sourceNode = null;\n        _sourceNodeStartTime = 0;\n        _position = -1;\n      } else {\n        resolve();\n      }\n    });\n\n  return {\n    analyserNode,\n    gainNode,\n    getPlayingPosition,\n    getTrackPercent,\n    isPlaying,\n    play,\n    stop,\n  };\n};\n","export default {\n  splash: {\n    CGU: \"CGU\",\n    powered_with: \"Powered with\",\n  },\n  users: {\n    user: \"User\",\n    confirm_disconnect: \"Are you sure you want to disconnect?\",\n    connect: \"Connect\",\n    connection: \"Connection\",\n    create: \"Create a user\",\n    disconnect: \"Disconnect\",\n    user_creation: \"User Registration\",\n    id_is_invalid: \"ID is invalid\",\n    id_placeholder: \"User ID...\",\n    user_id: \"User ID\",\n    name_is_invalid: \"Name is invalid\",\n    name_placeholder: \"User Name...\",\n    name: \"User Name\",\n    secret_is_invalid: \"Secret is invalid\",\n    secret_placeholder: \"User Secret...\",\n    secret: \"User Secret\",\n  },\n  rooms: {\n    clear: \"Clear all tracks\",\n    confirm_clear: \"Are you sure you want to remove all tracks?\",\n    confirm_exit: \"Are you sure you want to leave the room?\",\n    confirm_lock: \"Are you sure you want to lock the room?\",\n    copy_link: \"Copy Room Link to Clipboard\",\n    create: \"Create a room\",\n    empty: \"It's empty here, you should add some tracks...\",\n    exit: \"Exit Room\",\n    key_placeholder: \"Room Key...\",\n    key: \"Room Key\",\n    link_copied_to_clipboard: \"Room link has been copied to clipboard\",\n    locked: \"Locked (click to unlock)\",\n    name_is_invalid: \"Name is invalid\",\n    name_placeholderl: \"Room Name...\",\n    name: \"Room Name\",\n    room_creation: \"Room Creation\",\n    room_unlocking: \"Room Unlocking\",\n    room: \"Room\",\n    secret_is_invalid: \"Secret is invalid\",\n    unlock: \"Unlock\",\n    unlocked: \"Unlocked (click to lock)\",\n  },\n  medias: {\n    by: \"by {{artist}}\",\n    add: \"Add\",\n    remove: \"Remove\",\n    search: \"Search Media\",\n    search_placeholder: \"Search...\",\n    medias_search: \"Media Search\",\n    albums: \"Albums\",\n    playlists: \"Playlists\",\n    tracks: \"Tracks\",\n  },\n  player: {\n    backward: \"Backward\",\n    forward: \"Forward\",\n    play: \"Play\",\n    playing: \"Playing\",\n    stop: \"Stop\",\n  },\n  cancel: \"Cancel\",\n  secret_copied_to_clipboard: \"Secret has been copied to clipboard\",\n};\n","export default {\n  splash: {\n    CGU: \"CGU\",\n    powered_with: \"boosté avec\",\n  },\n  users: {\n    user: \"Utilisateur\",\n    confirm_disconnect: \"Êtes-vous sûr(e) de vouloir vous déconnecter ?\",\n    connect: \"Se connecter\",\n    connection: \"Connexion\",\n    create: \"Créer un utilisateur\",\n    disconnect: \"Se déconnecter\",\n    user_creation: \"Création d'un utilisateur\",\n    id_is_invalid: \"L'identifiant est invalide\",\n    id_placeholder: \"Identifiant...\",\n    user_id: \"Identifiant\",\n    name_is_invalid: \"Le nom est invalide\",\n    name_placeholder: \"Nom...\",\n    name: \"Nom\",\n    secret_is_invalid: \"Le secret est invalide\",\n    secret_placeholder: \"Secret...\",\n    secret: \"Secret\",\n  },\n  rooms: {\n    clear: \"Supprimer toutes les pistes\",\n    confirm_clear: \"Êtes-vous sûr(e) de vouloir supprimer toutes les pistes ?\",\n    confirm_exit: \"Êtes-vous sûr(e) de vouloir quitter la pièce ?\",\n    confirm_lock: \"Êtes-vous sûr(e) de vouloir verrouiller la pièce ?\",\n    copy_link: \"Copier le lien de la pièce dans le presse-papier\",\n    create: \"Créer une pièce\",\n    empty: \"Cette pièce est vide, vous devriez ajouter quelques pistes...\",\n    exit: \"Quitter la pièce\",\n    key_placeholder: \"Clef...\",\n    key: \"Clef\",\n    link_copied_to_clipboard:\n      \"Le lien de la pièce a été copié dans le presse-papier\",\n    locked: \"Verrouillée (cliquer pour déverrouiller)\",\n    name_is_invalid: \"Le nom est invalide\",\n    name_placeholderl: \"Nom...\",\n    name: \"Nom\",\n    room_creation: \"Création d'une pièce\",\n    room_unlocking: \"Déverrouillage de la pièce\",\n    room: \"Pièce\",\n    secret_is_invalid: \"Le secret is invalide\",\n    unlock: \"Déverrouiller\",\n    unlocked: \"Déverrouillée (cliquer pour verrouiller)\",\n  },\n  medias: {\n    by: \"par {{artist}}\",\n    add: \"Ajouter\",\n    remove: \"Supprimer\",\n    search: \"Chercher des médias\",\n    search_placeholder: \"Recherche...\",\n    medias_search: \"Recherche de médias\",\n    albums: \"Albums\",\n    playlists: \"Playlists\",\n    tracks: \"Pistes\",\n  },\n  player: {\n    backward: \"Piste précédente\",\n    forward: \"Piste suivante\",\n    play: \"Lire\",\n    playing: \"En cours de lecture\",\n    stop: \"Arrêter\",\n  },\n  cancel: \"Annuler\",\n  secret_copied_to_clipboard: \"Le secret a été copié dans le presse-papier\",\n};\n","import i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n//\nimport en from \"../locales/en\";\nimport fr from \"../locales/fr\";\n\n// --------------------------------------------------------------\n\nexport const changeLanguage = (language: string) =>\n  i18next.changeLanguage(language);\n\n// --------------------------------------------------------------\n\nexport const initLocales = async (): Promise<void> =>\n  new Promise((resolve, reject) => {\n    console.log(\"Initializing language...\");\n    i18next.use(initReactI18next).init(\n      {\n        fallbackLng: \"en\",\n        lng: navigator.language || (navigator as any).userLanguage,\n        resources: {\n          \"en-US\": { translation: en },\n          \"fr-FR\": { translation: fr },\n        },\n        interpolation: {\n          escapeValue: false, // react is already safe from xss\n          format: (value, format, lng) => {\n            // if (format === \"uppercase\") return value.toUpperCase();\n            // if (value instanceof Date) return moment(value).format(format);\n            return value;\n          },\n        },\n      },\n      (error) => {\n        if (error) reject(error);\n        resolve();\n      }\n    );\n  });\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n//\nimport { rootReducer } from \"./reducers\";\nimport App from \"./containers/App\";\nimport { DEFAULT_API } from \"./utils/deezer\";\nimport { Player } from \"./utils/player\";\nimport { initLocales } from \"./utils/i18n\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst init = async () => {\n  const composeEnhancers =\n    process.env.NODE_ENV === \"development\" ? composeWithDevTools({}) : compose;\n\n  const deezer = DEFAULT_API;\n  const queuePlayer = Player(true);\n  const previewPlayer = Player(false);\n  initLocales();\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(\n        thunk.withExtraArgument({ deezer, queuePlayer, previewPlayer })\n      )\n    )\n  );\n\n  // const dispatch: Dispatch = store.dispatch.bind(store);\n\n  return store;\n};\n\n// ------------------------------------------------------------------\n\ninit().then((store) => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <Route path=\"/\" component={App} />\n      </HashRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n"],"sourceRoot":""}