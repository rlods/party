{"version":3,"sources":["reducers/medias.ts","reducers/messages.ts","reducers/modals.ts","reducers/player.ts","reducers/room.ts","reducers/user.ts","utils/users.ts","reducers/index.ts","components/Common/Icon.tsx","components/Common/IconButton.tsx","utils/history.ts","utils/clipboard.ts","components/Room/Head.tsx","selectors/room.ts","actions/index.ts","actions/modals.ts","actions/messages.ts","containers/Room/Head.ts","components/Room/Cover.tsx","components/Room/Medias.tsx","components/Room/QueueItem.tsx","components/Room/Queue.tsx","selectors/medias.ts","config/firebase.ts","utils/index.ts","utils/firebase.ts","utils/messages.ts","actions/medias.ts","actions/room.ts","actions/queue.ts","utils/colorpicker.ts","actions/player.ts","containers/Room/Queue.ts","components/Room/Progress.tsx","containers/Room/Progress.ts","components/Room/Controls.tsx","containers/Room/Controls.ts","components/Room/index.tsx","containers/Room/index.ts","components/Splash/index.tsx","selectors/user.ts","actions/user.ts","containers/Splash/index.ts","components/Modals/Modal.tsx","containers/Modals/Modal.ts","components/Modals/FormModal.tsx","components/Modals/ConfirmModal.tsx","containers/Modals/ConfirmModal.ts","components/Users/ConnectUserModal.tsx","containers/Users/ConnectUserModal.ts","components/Modals/SecretField.tsx","containers/Modals/SecretField.ts","components/Room/CreateRoomModal.tsx","containers/Room/CreateRoomModal.ts","components/Users/CreateUserModal.tsx","containers/Users/CreateUserModal.ts","utils/deezer.ts","utils/medias.ts","components/Room/SearchResultCategory.tsx","components/Room/SearchModal.tsx","containers/Room/SearchModal.ts","components/Room/UnlockRoomModal.tsx","containers/Room/UnlockRoomModal.ts","components/Modals/index.tsx","containers/Modals/index.ts","components/App/Messages.tsx","selectors/messages.ts","containers/App/Messages.ts","components/App/index.tsx","containers/App/index.ts","utils/player.ts","locales/en.ts","locales/fr.ts","utils/i18n.ts","index.tsx"],"names":["INITIAL_STATE","fetching","error","medias","album","playlist","track","initialState","stack","playing","track_percent","room","access","id","secret","color","fg","r","g","b","bg","info","position","user","res","s","localStorage","getItem","d","JSON","parse","atob","i","console","debug","err","loadUserAccess","rootReducer","combineReducers","state","action","type","payload","copy","media","messages","filter","other","modals","pop","player","setItem","btoa","stringify","saveUserAccess","removeItem","Icon","Component","render","this","props","className","icon","size","title","classNames","name","style","LoadingIcon","IconButton","disabled","displayTitle","kind","onClick","aria-label","clickable","_CancelButton","t","CancelButton","withTranslation","createHashHistory","copyToClipboard","value","a","Promise","resolve","elem","document","createElement","setAttribute","left","body","appendChild","selection","getSelection","selected","rangeCount","getRangeAt","select","execCommand","removeAllRanges","addRange","removeChild","Head","onCopyLink","onExit","onMessage","location","href","split","onConfirm","history","push","extractRoom","isRoomLoaded","isRoomLocked","createAction","openModal","prereq","popModal","confirmModal","question","onConfirmed","onCanceled","window","confirm","MESSAGE_ID_GENERATOR","displayMessage","text","duration","dispatch","stamp","Date","getTime","setTimeout","removeMessage","displayError","connect","message","Cover","playable","image","onPlay","onStop","backgroundImage","_Media","actions","mediaType","cover_small","link","target","rel","artist","picture_small","preview","QueueItem","locked","onRemove","Queue","loaded","playingIndex","onSearch","length","map","index","key","extractMedias","mediaAccesses","mediaAccess","config","databaseURL","process","sleep","delay","onlyUnique","self","indexOf","getFromDictOrList","dict","list","getFromDict","find","item","getFromList","firebaseApp","firebase","firebaseConfig","firebaseDatabase","MEMBERS","ref","ROOMS","USERS","FirebaseRoom","_room","child","_info","_members","_secret","_values","queue","queue_position","timestamp","getInfo","isLocked","setSecret","newSecret","oldSecret","wait","reject","once","snapshot","newValues","val","Error","subscribeInfo","cb","on","subscribeMembers","cbAdded","cbRemoved","unsubscribeInfo","off","unsubscribeMembers","update","set","ServerValue","TIMESTAMP","FirebaseUser","_user","_membership","online","room_id","status","installDisconnect","onDisconnect","cancel","enter","remove","exit","extractErrorMessage","response","data","loadMedias","provider","mediaIds","enqueue","getState","deezer","previewPlayer","oldTracks","newTrackIds","trackId","newTracks","loadTracks","appendInQueue","play","oldContainers","newContainerIds","containerId","newContainers","loadContainers","newContainersAndTracks","container","tracks","setRoom","values","createRoom","v4","enterRoom","FIREBASE_CB","exitRoom","newRoom","newInfo","Object","entries","sort","media1","media2","Number","lockRoom","unlockRoom","clearQueue","trackIds","queueMedias","forEach","removeFromQueue","oldIndex","splice","setQueuePosition","newPosition","oldPosition","moveBackward","moveForward","CACHE","DEFAULT_COLOR","pickColor","url","jimp","resize","getPixelColor","pixel","setPlayer","startPlayer","queuePlayer","PLAYER_TIMER1","PLAYER_TIMER2","_installTimer1","_installTimer2","stopPlayer","_","clearTimeout","stop","stopPreview","_1","_2","_computeNextPosition","queueTrackPosition","nextPosition","playingTrackID","getPlayingTrackID","playingTrackPosition","getPlayingTrackPosition","isPlaying","nextTrackPosition","nextIndex","nextTrack","all","getPlayingTrackPercent","Progress","max","Controls","onMoveBackward","onMoveForward","onUnlock","tracksCount","onClear","onLock","Room","componentDidMount","onEnter","componentWillUnmount","backgroundColor","withRouter","ownProps","qs","search","substr","match","params","Splash","loggedIn","onCreateRoom","onConnectUser","to","src","height","alt","onDisconnectUser","extractUser","setUser","createUser","connectUser","disconnectUser","newUser","reconnectUser","Modal","children","renderFoot","onClose","onPop","has_prev_modal","onSubmit","hidden","event","preventDefault","FormModal","renderButtons","ConfirmModal","onCancel","ConnectUserModal","idRef","createRef","onConnect","htmlFor","placeholder","maxLength","minLength","required","onChange","e","setState","onToggle","onError","trim","current","focus","SecretField","label","display","flexDirection","justifyContent","flexGrow","marginRight","onCopyToClipboard","ROOM_COUNTER","CreateRoomModal","nameRef","onCreate","USER_COUNTER","CreateUserModal","ConvertAlbum","toString","picture_big","cover_big","readable","ConvertTrack","ConvertPlaylist","DEFAULT_API","_asyncJsonp","jsonp","_call","path","fullpath","_search","query","encodeURIComponent","_load","ids","_loadWithRetry","first","includes","subIds","subIndexes","subMedias","subIndex","_searchAlbums","_searchPlaylists","_searchTracks","public","loadAlbums","albums","loadPlaylists","playlists","creator","DeezerApi","MEDIA_TYPE_DEFINITIONS","SearchResultCategory","items","slice","SearchModal","queryRef","playingMediaId","playingMediaType","results","renderInputs","renderResults","onSelect","onStartPreview","onStopPreview","mediaId","UnlockRoomModal","secretRef","Modals","curr_prereq","prev_prereq","addEventListener","onKeyDown","removeEventListener","componentDidUpdate","prevProps","oldPrereq","newPrereq","modal","getModal","in","timeout","unmountOnExit","onClickOverlay","role","onClickWrapper","stopPropagation","onCloseModal","keyCode","Messages","renderMessage","extractMessages","m1","m2","App","onReconnect","exact","component","AUDIO_CONTEXT","getContext","AudioContext","webkitAudioContext","decodeAudioData","encodedBuffer","loadAudioBuffer","req","XMLHttpRequest","open","responseType","send","AUDIO_BUFFER_CACHES","loadAudioBufferWithCache","buffer","findIndex","fixAudioContext","context","createBuffer","source","createBufferSource","destination","start","Player","chainPlay","analyserNode","gainNode","_node","_buffer","_sourceNode","_sourceNodeStartTime","_trackId","_trackPosition","getOrCreateNode","createGain","gain","createAnalyser","fftSize","trackPosition","trackUrl","offset","loop","loopStart","loopEnd","onended","playbackRate","currentTime","splash","CGU","powered_with","users","errors","invalid","confirm_disconnect","connection","create","disconnect","user_creation","id_is_invalid","id_placeholder","user_id","name_is_invalid","name_placeholder","secret_is_invalid","secret_placeholder","rooms","clear","confirm_clear","confirm_exit","confirm_lock","copy_link","empty","key_placeholder","link_copied_to_clipboard","loading","name_placeholderl","room_creation","room_unlocking","unlock","unlocked","by","add","search_placeholder","medias_search","cannot_decode_audio_data","cannot_load_audio_buffer","backward","forward","secret_copied_to_clipboard","initLocales","navigator","language","userLanguage","i18next","use","initReactI18next","init","fallbackLng","lng","resources","en","translation","fr","interpolation","escapeValue","format","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","withExtraArgument","then","ReactDOM","getElementById"],"mappings":"wSAkBA,MAAMA,EAAuB,CAC3BC,UAAU,EACVC,MAAO,KACPC,OAAQ,CAENC,MAAO,GACPC,SAAU,GACVC,MAAO,KCjBEN,EAAuB,GCGvBO,EAA4B,CACvCC,MAAO,ICFIR,EAAuB,CAClCS,SAAS,EACTC,cAAe,GCaXV,EAAuB,CAC3BC,UAAU,EACVC,MAAO,KACPS,KAAM,KACNC,OAAQ,CAAEC,GAAI,GAAIC,OAAQ,IAC1BC,MAAO,CAAEC,GAAI,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAKC,GAAI,CAAEH,EAAG,IAAKC,EAAG,IAAKC,EAAG,MAC5DE,KAAM,KACNlB,OAAQ,GACRM,SAAS,EACTa,SAAU,GCTNtB,EAAuB,CAC3BC,UAAU,EACVC,MAAO,KACPqB,KAAM,KACNX,OCd4B,MAC5B,MAAMY,EAAkB,CACtBX,GAAI,GACJC,OAAQ,IAEJW,EAAIC,aAAaC,QAAQ,KAC/B,GAAIF,EACF,IACE,MAAMG,EAAIC,KAAKC,MAAMC,KAAKN,IACP,kBAARG,EAAEI,GAAiC,kBAARJ,EAAEH,IACtCD,EAAIX,GAAKe,EAAEI,EACXR,EAAIV,OAASc,EAAEH,EACfQ,QAAQC,MAAM,uBAAwBV,IAExC,MAAOW,IAEX,OAAOX,GDFCY,GACRf,KAAM,MEpBKgB,EAAcC,0BAAgB,CACzCnC,OPoByD,CACzDoC,EAAQvC,EACRwC,KAEA,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAO,eACFF,EADL,CAEEtC,UAAU,EACVC,MAAO,OAEX,IAAK,iBACH,OAAO,eACFqC,EADL,CAEEtC,UAAU,EACVC,MAAO,OAGX,IAAK,eACH,OAAO,eACFqC,EADL,CAEEtC,UAAU,EACVC,MAAOsC,EAAOE,UAElB,IAAK,aAAc,CACjB,MAAMC,EAAI,eACLJ,EADK,CAERpC,OAAQ,CACNC,MAAM,eAAMmC,EAAMpC,OAAOC,OACzBC,SAAS,eAAMkC,EAAMpC,OAAOE,UAC5BC,MAAM,eAAMiC,EAAMpC,OAAOG,UANZ,oBASGkC,EAAOE,SATV,IASjB,2BAAoC,CAAC,MAA1BE,EAAyB,QAClCD,EAAKxC,OAAOyC,EAAMH,MAAMG,EAAM/B,IAAM+B,GAVrB,8BAYjB,OAAOD,EAET,IAAK,eACH,OAAO3C,EACT,QACE,OAAOuC,IO5DXM,SNA6D,CAC7DN,EAAQvC,EACRwC,KAEA,OAAQA,EAAOC,MACb,IAAK,cACH,MAAO,CAACD,EAAOE,WAAYH,GAC7B,IAAK,iBACH,OAAOA,EAAMO,OAAOC,GAASA,EAAMlC,KAAO2B,EAAOE,SACnD,IAAK,gBACH,OAAO1C,EACT,QACE,OAAOuC,IMXXS,OLI+D,CAC/DT,EAAQhC,EACRiC,KAEA,OAAQA,EAAOC,MACb,IAAK,cACH,OAAO,eACFF,EADL,CAEE/B,MAAO,CAACgC,EAAOE,WAEnB,IAAK,eACH,OAAO,eACFH,EADL,CAEE/B,MAAO,KAEX,IAAK,cACH,OAAO,eACF+B,EADL,CAEE/B,MAAO,IAAI+B,EAAM/B,MAAOgC,EAAOE,WAEnC,IAAK,aACH,MAAMC,EAAO,IAAIJ,EAAM/B,OAEvB,OADAmC,EAAKM,MACE,eACFV,EADL,CAEE/B,MAAOmC,IAEX,QACE,OAAOJ,IK/BXW,OJGyD,CACzDX,EAAQvC,EACRwC,KAEA,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,eAAKF,EAAZ,GAAsBC,EAAOE,SAC/B,IAAK,eACH,OAAO1C,EACT,QACE,OAAOuC,IIZX5B,KHwBqD,CACrD4B,EAAQvC,EACRwC,KAEA,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,eACFF,EADL,CAEEtC,UAAU,EACVC,MAAO,OAEX,IAAK,eACH,OAAO,eACFqC,EADL,CAEEtC,UAAU,EACVC,MAAO,OAGX,IAAK,aACH,OAAO,eACFqC,EADL,CAEEtC,UAAU,EACVC,MAAOsC,EAAOE,UAElB,IAAK,WACH,OAAO,eACFH,EADL,GAEKC,EAAOE,SAGd,IAAK,aACH,OAAO1C,EACT,QACE,OAAOuC,IGxDXhB,KFmBqD,CACrDgB,EAAQvC,EACRwC,KAEA,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,eACFF,EADL,CAEEtC,UAAU,EACVC,MAAO,OAEX,IAAK,eACH,OAAO,eACFqC,EADL,CAEEtC,UAAU,EACVC,MAAO,OAGX,IAAK,aACH,OAAO,eACFqC,EADL,CAEEtC,UAAU,EACVC,MAAOsC,EAAOE,UAElB,IAAK,WAAY,CACf,MAAMC,EAAI,eACLJ,EADK,GAELC,EAAOE,SAGZ,MC3BwB,GAAG7B,KAAIC,aACnCY,aAAayB,QACX,IACAC,KACEvB,KAAKwB,UAAU,CACbrB,EAAGnB,EACHY,EAAGX,ODoBLwC,CAAeX,EAAK/B,QACb+B,EAET,IAAK,aAEH,OClCJjB,aAAa6B,WAAW,KDkCbvD,EACT,QACE,OAAOuC,M,0DGvDb,MAAMiB,UAAaC,YAAkB,eAAD,oBAC3BC,OAAS,KAAO,MAAD,EACkCC,KAAKC,MAAnDC,EADY,EACZA,UAAW9C,EADC,EACDA,MAAO+C,EADN,EACMA,KADN,IACYC,YADZ,MACmB,IADnB,EACwBC,EADxB,EACwBA,MAC5C,OACE,kBAAC,IAAD,CACEH,UAAWI,IAAW,OAAQJ,EAAWE,GACzCG,KAAMJ,EACNK,MAAO,CAAEpD,SACTiD,MAAOA,MAMAR,QAIR,MAAMY,EAAc,EAAGL,UAC5B,kBAAC,EAAD,CACEF,UAAU,WACVC,KAAK,iBACLC,KAAMA,EACNC,MAAM,Y,MCfV,MAAMK,UAAmBZ,YAAkB,eAAD,oBACjCC,OAAS,KAAO,MAAD,EAYhBC,KAAKC,MAVPC,EAFkB,EAElBA,UACA9C,EAHkB,EAGlBA,MAHkB,IAIlBuD,gBAJkB,aAKlBC,oBALkB,SAMlBT,EANkB,EAMlBA,KANkB,IAOlBU,YAPkB,MAOX,UAPW,EAQlBC,EARkB,EAQlBA,QACAV,EATkB,EASlBA,KACAC,EAVkB,EAUlBA,MAVkB,IAWlBvB,YAXkB,MAWX,SAXW,EAapB,OACE,4BACEA,KAAMA,EACNiC,aAAYV,EACZH,UAAWI,IAAW,aAAcJ,EAAWW,EAAMT,EAAM,CACzDY,WAAYL,MAAeG,GAAoB,WAAThC,KAExCgC,QAASH,OAAW,EAASG,EAC7BT,MAAOA,GAEP,kBAAC,EAAD,CAAMjD,MAAOA,EAAO+C,KAAMA,EAAMC,KAAMA,IACrCQ,GACC,yBAAKV,UAAWI,IAAW,kBAAmBF,IAAQC,MAOjDK,QAQf,MAAMO,UAAsBnB,YAAgD,eAAD,oBAClEC,OAAS,KAAO,MAAD,EACGC,KAAKC,MAApBa,EADY,EACZA,QAASI,EADG,EACHA,EACjB,OACE,kBAAC,EAAD,CACEJ,QAASA,EACTT,MAAOa,EAAE,UACTL,KAAK,UACLV,KAAK,UAMN,MAAMgB,EAAeC,cAAkBH,G,WC7E/BI,gBCDR,MAAMC,EAAe,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACvB,IAAIC,QAAQC,IAChB,MAAMC,EAAOC,SAASC,cAAc,YACpCF,EAAKJ,MAAQA,EACbI,EAAKG,aAAa,WAAY,IAC9BH,EAAKnB,MAAM7C,SAAW,WACtBgE,EAAKnB,MAAMuB,KAAO,UAElBH,SAASI,KAAKC,YAAYN,GAC1B,MAAMO,EAAYN,SAASO,eAC3B,GAAkB,OAAdD,EAAoB,CACtB,MAAME,EACJF,EAAUG,WAAa,GAAIH,EAAUI,WAAW,GAClDX,EAAKY,SACLX,SAASY,YAAY,SACJ,IAAbJ,IACFF,EAAUO,kBACVP,EAAUQ,SAASN,IAGvBR,SAASI,KAAKW,YAAYhB,GAC1BD,MArB2B,mFAAH,sD,MCU5B,MAAMkB,UAAa9C,YAA0C,eAAD,iCACnDC,OAAS,KAAO,MAAD,EACAC,KAAKC,MAAjBjD,EADY,EACZA,KAAMkE,EADM,EACNA,EACd,OACE,yBAAKhB,UAAU,QACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACEC,KAAK,OACLW,QAASd,KAAK6C,WACdzC,KAAK,IACLC,MAAOa,EAAE,sBAGb,yBAAKhB,UAAU,YAAYlD,EAAOA,EAAKuD,KAAO,IAC9C,yBAAKL,UAAU,YACb,kBAAC,EAAD,CACEY,QAASd,KAAK8C,OACd3C,KAAK,WACLC,KAAK,IACLC,MAAOa,EAAE,mBAnBuC,KA0BlD2B,WA1BkD,sBA0BrC,gCAAArB,EAAA,+DACM,EAAKvB,MAAtB8C,EADW,EACXA,UAAW7B,EADA,EACAA,EADA,SAEbI,EAAgBM,SAASoB,SAASC,KAAKC,MAAM,KAAK,IAFrC,OAGnBH,EAAU7B,EAAE,mCAHO,2CA1BqC,KAgClD4B,OAAS,KAAO,MAAD,EACI9C,KAAKC,OAC9BkD,EAFqB,EACbA,YACEjC,EAFW,EACFA,GACP,sBAAuB,KACjCkC,EAAQC,KAAK,SAKJjC,oBAAkBwB,GCjD1B,MAAMU,EAAe1E,GAAqBA,EAAM5B,KAAKU,KAE/C6F,EAAgB3E,KAAuBA,EAAM5B,KAAKA,KAElDwG,EAAgB5E,IAAsBA,EAAM5B,KAAKC,OAAOE,OC6B9D,SAASsG,EAAkC3E,EAASC,GACzD,YAAmB,IAAZA,EAAqB,CAAED,QAAS,CAAEA,OAAMC,WCR1C,MAAM2E,EAAaC,GACxBF,EAAa,cAAeE,GASjBC,EAAW,IAAMH,EAAa,cAI9BI,EAAe,CAC1BC,EACAC,EACAC,IAH0B,sBAIV,sBAAAxC,EAAA,sDAEZyC,OAAOC,QAAQJ,GACjBC,IACSC,GACTA,IALc,2CC5BlB,IAAIG,EAA+B,EAE5B,MAAMC,EAAiB,CAC5BtF,EACAuF,EACAC,EAAmB,MACFC,IACjB,MAAMrH,EAAKiH,IACXI,EAhBuCd,EAAa,cAgBhC,CAAEvG,KAAIsH,OAAO,IAAIC,MAAOC,UAAWL,OAAMvF,UAC7D6F,WAAW,IAAMJ,EAfIrH,IAAeuG,EAAa,iBAAkBvG,GAezC0H,CAAc1H,IAAMoH,IAGnCO,EAAgBR,GAA+BE,IAC1DA,EAASH,EAAe,QAASC,EAAM,OCN1BS,kBAdOlG,IAAD,CACnB5B,KAAMsG,EAAY1E,KAGK2F,IAAD,CACtBpB,UAAW,CAACW,EAAkBC,KAC5BQ,EAASV,EAAaC,EAAUC,KAElChB,UAAYgC,GAAoBR,EAASH,EAAe,OAAQW,MAMnDD,CAAuClC,G,MCRtD,MAAMoC,UAAclF,YAAoC,eAAD,oBAC9CC,OAAS,KAAO,MAAD,EACoCC,KAAKC,MAArDgF,EADY,EACZA,SAAUnI,EADE,EACFA,QAASoI,EADP,EACOA,MAAOC,EADd,EACcA,OAAQC,EADtB,EACsBA,OAAQlE,EAD9B,EAC8BA,EAClD,OAAI+D,EAEA,yBACE/E,UAAWI,IAAW,QAAS,CAAE2E,WAAUnI,YAC3C0D,MAAO0E,EAAQ,CAAEG,gBAAgB,QAAD,OAAUH,EAAV,OAAwB,GACxDpE,QAAUhE,EAAmBsI,EAATD,GAElBrI,EAGA,kBAAC,EAAD,CAAMqD,KAAK,QAAQE,MAAOa,EAAE,iBAF5B,kBAAC,EAAD,CAAMf,KAAK,OAAOE,MAAOa,EAAE,kBAQ/B,yBACEhB,UAAWI,IAAW,QAAS,CAAExD,YACjC0D,MAAO0E,EAAQ,CAAEG,gBAAgB,QAAD,OAAUH,EAAV,OAAwB,IAEvDpI,EAAU,kBAAC,EAAD,CAAMqD,KAAK,QAAQE,MAAOa,EAAE,oBAAwB,QAO1DE,oBAAkB4D,G,MCnBjC,MAAMM,WAAexF,YAAyC,eAAD,oBACpDC,OAAS,KAAO,MAAD,EAUhBC,KAAKC,MARPsF,EAFkB,EAElBA,QACAtG,EAHkB,EAGlBA,MACAuG,EAJkB,EAIlBA,UACAP,EALkB,EAKlBA,SACAnI,EANkB,EAMlBA,QACAqI,EAPkB,EAOlBA,OACAC,EARkB,EAQlBA,OACAlE,EATkB,EASlBA,EAEF,IAAKjC,EACH,OACE,yBAAKiB,UAAU,SACZqF,EACD,kBAAC,EAAD,CACEN,SAAUA,EACVnI,QAASA,EACToI,MAAO,GACPC,OAAQA,EACRC,OAAQA,IAEV,yBAAKlF,UAAU,SACb,kBAACO,EAAD,CAAaL,KAAK,QAInB,GAAkB,UAAdoF,EAAuB,CAChC,MAAM/I,EAAQwC,EACd,OACE,yBAAKiB,UAAU,eACZqF,EACD,kBAAC,EAAD,CACEN,SAAUA,EACVnI,QAASA,EACToI,MAAOzI,EAAMgJ,YACbN,OAAQA,EACRC,OAAQA,IAEV,yBAAKlF,UAAU,SACb,yBAAKA,UAAU,mBACb,uBAAG+C,KAAMxG,EAAMiJ,KAAMC,OAAO,SAASC,IAAI,uBACtCnJ,EAAM4D,QAGX,yBAAKH,UAAU,oBACb,uBACE+C,KAAMxG,EAAMoJ,OAAOH,KACnBC,OAAO,SACPC,IAAI,uBAEH1E,EAAE,YAAa,CAAE2E,OAAQpJ,EAAMoJ,OAAOtF,WAM5C,GAAkB,aAAdiF,EAA0B,CACnC,MAAM9I,EAAWuC,EACjB,OACE,yBAAKiB,UAAU,kBACZqF,EACD,kBAAC,EAAD,CACEN,SAAUA,EACVnI,QAASA,EACToI,MAAOxI,EAASoJ,cAChBX,OAAQA,EACRC,OAAQA,IAEV,yBAAKlF,UAAU,SACb,yBAAKA,UAAU,sBACb,uBAAG+C,KAAMhE,EAAMyG,KAAMC,OAAO,SAASC,IAAI,uBACtC3G,EAAMoB,QAGX,yBAAKH,UAAU,wBACb,uBACE+C,KAAMvG,EAASkB,KAAK8H,KACpBC,OAAO,SACPC,IAAI,uBAEH1E,EAAE,YAAa,CAAE2E,OAAQnJ,EAASkB,KAAK2C,WAM7C,GAAkB,UAAdiF,EAAuB,CAChC,MAAM7I,EAAQsC,EACd,OACE,yBAAKiB,UAAU,eACZqF,EACD,kBAAC,EAAD,CACEN,SAAUA,KAActI,EAAMoJ,QAC9BjJ,QAASA,EACToI,MAAOvI,EAAMF,MAAMgJ,YACnBN,OAAQA,EACRC,OAAQA,IAEV,yBAAKlF,UAAU,SACb,yBAAKA,UAAU,mBACb,uBAAG+C,KAAMtG,EAAM+I,KAAMC,OAAO,SAASC,IAAI,uBACtCjJ,EAAM0D,QAGX,yBAAKH,UAAU,oBACb,uBACE+C,KAAMtG,EAAMkJ,OAAOH,KACnBC,OAAO,SACPC,IAAI,uBAEH1E,EAAE,YAAa,CAAE2E,OAAQlJ,EAAMkJ,OAAOtF,cAUxCa,qBAAkBkE,ICnIjC,MAAMU,WAAkBlG,YAAoC,eAAD,oBAClDC,OAAS,KAAO,MAAD,EAUhBC,KAAKC,MARPgG,EAFkB,EAElBA,OACAhH,EAHkB,EAGlBA,MACAuG,EAJkB,EAIlBA,UACA1I,EALkB,EAKlBA,QACAqI,EANkB,EAMlBA,OACAe,EAPkB,EAOlBA,SACAd,EARkB,EAQlBA,OACAlE,EATkB,EASlBA,EAEF,OACE,yBAAKhB,UAAU,aACb,kBAAC,GAAD,CACEjB,MAAOA,EACPuG,UAAWA,EACXP,WAAYhG,IAAUgH,EACtBnJ,QAASA,EACTqI,OAAQA,EACRC,OAAQA,EACRG,QACGU,EAMG,KALF,kBAAC,EAAD,CACE5F,MAAOa,EAAE,iBACTf,KAAK,QACLW,QAASoF,SAUV9E,qBAAkB4E,I,MC5CjC,MAAMG,WAAcrG,YAA0C,eAAD,oBACpDC,OAAS,KAAO,MAAD,EAYhBC,KAAKC,MAVPmG,EAFkB,EAElBA,OACAH,EAHkB,EAGlBA,OACAzJ,EAJkB,EAIlBA,OACAM,EALkB,EAKlBA,QACAuJ,EANkB,EAMlBA,aACAlB,EAPkB,EAOlBA,OACAe,EARkB,EAQlBA,SACAI,EATkB,EASlBA,SACAlB,EAVkB,EAUlBA,OACAlE,EAXkB,EAWlBA,EAEF,OACE,yBAAKhB,UAAU,SACZ1D,EAAO+J,OAAS,EACf/J,EAAOgK,IAAI,CAACvH,EAAOwH,IACjB,kBAAC,GAAD,CACEC,IAAKD,EACLR,OAAQA,EACRnJ,QAASA,GAAWuJ,IAAiBI,EACrCxH,MAAOA,EACPuG,UAAU,QACVL,OAAQ,IAAMA,EAAOsB,GACrBP,SAAU,IAAMA,EAASO,GACzBrB,OAAQA,KAIZ,yBAAKlF,UAAU,cACZkG,EACC,oCACE,kBAAC,EAAD,CACE/F,MAAM,MACNF,KAAK,SACLW,QAASwF,EACTlG,KAAK,MAEP,0BAAMU,QAASwF,GAAWpF,EAAE,iBAG9B,oCACE,kBAACT,EAAD,CAAaL,KAAK,MAClB,8BAAOc,EAAE,uBAUVE,qBAAkB+E,IC5D1B,MAAMQ,GAAgB,CAC3B/H,EACAgI,KAEA,MAAM/I,EAA2B,GAErBrB,EACRoC,EADFpC,OAAUA,OAHT,oBAKuBoK,GALvB,IAKH,2BAAyC,CAAC,MAA/BC,EAA8B,QACjC5H,EAAQzC,EAAOqK,EAAY/H,MAAM+H,EAAY3J,IAC7C+B,EACJpB,EAAIwF,KAAKpE,GAETpB,EAAIwF,KAAK,OAVV,8BAaH,OAAOxF,G,6BCrBT,MAAMiJ,GAAS,CACbC,YAAaC,wCAGf1I,QAAQC,MAAMuI,IAECA,UCNR,MAAMG,GAASC,GACpB,IAAIzF,QAASC,GAAYiD,WAAWjD,EAASwF,IAElCC,GAAa,CAAI5F,EAAUkF,EAAeW,IACrDA,EAAKC,QAAQ9F,KAAWkF,EAcba,GAAoB,CAC/BC,EACAC,EACAtK,IAfyB,EAAIqK,EAA2BrK,KACxD,MAAMqE,EAAQgG,EAAKrK,GACnB,OAAQqE,QAAQ,GAcbkG,CAAYF,EAAMrK,IAXI,EACzBsK,EACAtK,IAEOsK,EAAKE,KAAMC,GAASA,EAAKzK,KAAOA,GAOX0K,CAAYJ,EAAMtK,GCR1C2K,GAAcC,iBAAuBC,IACrCC,GAAmBF,YAAkBD,IAIrCI,GAAUD,GAAiBE,IAAI,WAC/BC,GAAQH,GAAiBE,IAAI,SAC7BE,GAAQJ,GAAiBE,IAAI,SAItBG,GAAe,CAACnL,EAAYC,KACvC,MAAMmL,EAAQH,GAAMI,MAAMrL,GACpBsL,EAAQF,EAAMC,MAAM,QACpBE,EAAWR,GAAQM,MAAMrL,GAC/B,IAAIwL,EAAUvL,GAAU,GACxBmB,QAAQC,MAAM,cAAemK,GAC7B,IAAIC,EAAoB,CACtBpI,KAAM,QACNzD,SAAS,EACT8L,MAAO,GACPC,eAAgB,EAChBC,UAAW,EACXhK,KAAM,MAsFR,MAAO,CACLiK,QApFc,IAAMJ,EAqFpBzL,KACA8L,SApFe,KAAON,EAqFtBO,UAnFiBC,IACjB5K,QAAQC,MAAM,iCAAkC,CAC9C4K,UAAWT,EACXQ,cAEFR,EAAUQ,GA+EVE,KA5EQ,uCAAG,sBAAA5H,EAAA,+EACX,IAAIC,QAAQ,CAACC,EAAS2H,KACpB/K,QAAQC,MAAM,8BACdiK,EAAMc,KAAK,QAAUC,IACnB,MAAMC,EAAYD,EAASE,MACvBD,GACFb,EAAUa,EACV9H,EAAQiH,IAERU,EAAO,IAAIK,MAAM,8BATZ,2CAAH,qDA6ERC,cA/DqBC,IACrBtL,QAAQC,MAAM,kCACdiK,EAAMqB,GAAG,QAASD,IA8DlBE,iBAtDuB,CAACC,EAAqBC,KAC7C1L,QAAQC,MAAM,qCACdkK,EAASoB,GAAG,cAAeE,GAC3BtB,EAASoB,GAAG,gBAAiBG,IAoD7BC,gBA5DuBL,IACvBtL,QAAQC,MAAM,oCACdiK,EAAM0B,IAAI,QAASN,IA2DnBO,mBAlDyB,CAACJ,EAAqBC,KAC/C1L,QAAQC,MAAM,uCACdkK,EAASyB,IAAI,cAAeH,GAC5BtB,EAASyB,IAAI,gBAAiBF,IAgD9BI,OA7CU,uCAAG,YAAO,KACpB7J,EADoB,QAEpBzD,EAFoB,MAGpB8L,EAHoB,eAIpBC,IAJa,SAAArH,EAAA,6DAQblD,QAAQC,MAAM,8BAA+B,CAC3CgC,OACAzD,UACA8L,QACAC,wBAEW,IAATtI,IACFoI,EAAQpI,KAAOA,QAED,IAAZzD,IACF6L,EAAQ7L,QAAUA,QAEN,IAAV8L,IACFD,EAAQC,MAAQA,QAEK,IAAnBC,IACFF,EAAQE,eAAiBA,GAxBd,SA0BPP,EAAM+B,IAAI,CACd3M,KAAK,eACAiL,EADD,CAEFG,UAAWhB,YAAkBwC,YAAYC,YAE3CpN,OAAQuL,IA/BG,2CAAH,wDAmDD8B,GAAe,CAACtN,EAAYC,KACvC,MAAMsN,EAAQrC,GAAMG,MAAMrL,GACpBsL,EAAQiC,EAAMlC,MAAM,QAC1B,IAAImC,EAAkD,KAClDhC,EAAUvL,GAAU,GACpBwL,EAAoB,CACtBpI,KAAM,QACNoK,QAAQ,EACRC,QAAS,GACTC,OAAQ,GACR/B,UAAW,GAGb,MAYMM,EAAI,uCAAG,sBAAA5H,EAAA,+EACX,IAAIC,QAAQ,CAACC,EAAS2H,KACpB/K,QAAQC,MAAM,8BACdiK,EAAMc,KAAK,QAAUC,IACnB,MAAMC,EAAYD,EAASE,MACvBD,GACFb,EAAUa,EACV9H,EAAQiH,IAERU,EAAO,IAAIK,MAAM,8BATZ,2CAAH,qDAwBJU,EAAM,uCAAG,YAAO,KACpB7J,EADoB,QAEpBqK,IAFa,SAAApJ,EAAA,6DAIblD,QAAQC,MAAM,8BAA+B,CAAEgC,OAAMqK,iBACxC,IAATrK,IACFoI,EAAQpI,KAAOA,QAED,IAAZqK,IACFjC,EAAQiC,QAAUA,GATP,SAWPH,EAAMJ,IAAI,CACd3M,KAAK,eACAiL,EADD,CAEFgC,QAAQ,EACRE,OAAQ,SACR/B,UAAWhB,YAAkBwC,YAAYC,YAE3CpN,OAAQuL,IAlBG,OAoBboC,IApBa,2CAAH,sDAuBNA,EAAoB,KACxBxM,QAAQC,MAAM,4CACdkM,EAAMM,eAAeC,SACrBP,EAAMM,eAAeV,IAAI,CACvB3M,KAAK,eACAiL,EADD,CAEFgC,QAAQ,EACRC,QAAS,GACTC,OAAQ,eACR/B,UAAWhB,YAAkBwC,YAAYC,YAE3CpN,OAAQuL,KA6BZ,MAAO,CACLxL,KACA+N,MA3BS,uCAAG,WAAOjO,GAAP,SAAAwE,EAAA,0DACRkJ,EADQ,gCAEJA,EAAYQ,SAFR,OAGVR,EAAc,KAHJ,uBAKNN,EAAO,CACXQ,QAAS5N,EAAKE,KANJ,cAQZwN,EAAczC,GAAQM,MAAMvL,EAAKE,IAAIqL,MAAMrL,GAC3CwN,EAAYK,eAAeG,SATf,UAUNR,EAAYL,IAAI,CACpBvB,UAAWhB,YAAkBwC,YAAYC,YAX/B,4CAAH,sDA4BTY,KAbQ,uCAAG,sBAAA3J,EAAA,0DACPkJ,EADO,gCAEHA,EAAYQ,SAFT,OAGTR,EAAc,KAHL,uBAKLN,EAAO,CACXQ,QAAS,KANA,2CAAH,qDAcR5B,SArGe,KAAON,EAsGtBO,UApGiBC,IACjB5K,QAAQC,MAAM,oCAAqC,CACjD4K,UAAWT,EACXQ,cAEFR,EAAUQ,GAgGVE,OACAO,cAhFqBC,IACrBtL,QAAQC,MAAM,kCACdiK,EAAMqB,GAAG,QAASD,IA+ElBK,gBA5EuBL,IACvBtL,QAAQC,MAAM,oCACdiK,EAAM0B,IAAI,QAASN,IA2EnBQ,SACArB,QA7Gc,IAAMJ,IC/IXyC,GAAuB5M,GAClCA,EAAI6M,UAAY7M,EAAI6M,SAASC,MAAQ9M,EAAI6M,SAASC,KAAKvG,QACnDvG,EAAI6M,SAASC,KAAKvG,QAClBvG,EAAIuG,QCgBJsF,GAAO7N,GAAoBiH,EAAa,aAAcjH,GAI/C+O,GAAa,CACxBC,EACAhG,EACAiG,EACAC,EACA3F,IALwB,uCAMR,WAAOxB,EAAUoH,GAAU,OAAEC,EAAF,cAAUC,IAArC,mDAAArK,EAAA,2DACZiK,EAASlF,OAAS,GADN,sBAIVoF,IADQnP,EAHE,EAGZA,OAAUA,OAHE,SAMM,UAAdgJ,EANQ,oBAQKsG,EAActP,EAArBG,MACFoP,EAAwBN,EAC3BtM,OAAQ6M,IAAaF,EAAUE,IAC/B7M,OAAOgI,IACN8E,EAAqB,KACrBF,EAAYxF,OAAS,GAbf,wBAcRjI,QAAQC,MAAM,oBAAqB,CAAEkN,SAAUM,IAdvC,UAeUH,EAAOM,WAAWH,GAf5B,QAeRE,EAfQ,OAgBR1H,EAAS8F,GAAI4B,IAhBL,WAkBNP,IACFpN,QAAQC,MAAM,sBAAuB,CAAEkN,aACvClH,EAAS4H,GAAcX,EAAUC,MAE/B1F,EAtBM,oBAuBFiG,EAAUP,EAAS,KACnB9O,EAAQ2K,GAAkBwE,EAAWG,EAAWD,IAxB9C,wBA0BN1N,QAAQC,MAAM,sBAAuB,CAAE5B,QAAOqP,YA1BxC,UA2BAH,EAAcO,KAAK,EAAGzP,EAAMO,GAAIP,EAAMoJ,QAAS,GA3B/C,gCA6BNzH,QAAQC,MAAM,mCA7BR,mCAkCW8N,EAAkB7P,EAA9BgJ,GACH8G,EAA4Bb,EAC/BtM,OAAQoN,IAAiBF,EAAcE,IACvCpN,OAAOgI,IACNqF,EAAkC,KAClCF,EAAgB/F,OAAS,GAvCnB,wBAwCRjI,QAAQC,MAAM,wBAAyB,CAAEkN,SAAUa,IAxC3C,UAyCcV,EAAOa,eAC3BjH,EACA8G,GA3CM,QAyCRE,EAzCQ,OA8CFE,EAAkC,IAAIF,GA9CpC,cA+CgBA,GA/ChB,IA+CR,2BAAWG,EAA4B,QACrCD,EAAuBrJ,QAAQsJ,EAAUC,QAhDnC,8BAmDRrI,EAAS8F,GAAIqC,IAnDL,QAsDV,GAAIhB,EAAS,CACXpN,QAAQC,MAAM,iCAAkC,CAAEkN,aADvC,cAEeA,GAFf,IAEX,2BAAWc,EAAyB,SAC5BI,EAAYrF,GAChB+E,EACAG,EACAD,KAGAhI,EACE4H,GACEX,EACAmB,EAAUC,OAAQpG,IAAK7J,GAAUA,EAAMO,MAZpC,+BAtDH,IAwEN6I,EAxEM,iBAyEJpJ,EAAsB,KAzElB,cA0EkB8O,GA1ElB,8DA0EGc,EA1EH,WA2EAI,EAAYrF,GAChB+E,EACAG,EACAD,KAEeI,EAAUC,QAAUD,EAAUC,OAAOrG,OAAS,GAhFzD,wBAiFJ5J,EAAQgQ,EAAUC,OAAO,GAjFrB,0KAqFJjQ,EArFI,wBAsFN2B,QAAQC,MAAM,uCAtFR,UAuFAsN,EAAcO,KAAK,EAAGzP,EAAMO,GAAIP,EAAMoJ,QAAS,GAvF/C,gCAyFNzH,QAAQC,MAAM,mCAzFR,0DA8FZgG,EAASM,EAAauG,GAAoB,EAAD,MA9F7B,wEANQ,0DCNbyB,GAAWC,GACtBrJ,EAAa,WAAYqJ,GAIdC,GAAa,CAACxM,EAAcpD,IAAf,uCAA+C,WACvEoH,GADuE,eAAA/C,EAAA,sEAI/DtE,EAAK8P,eACX1O,QAAQC,MAAM,mBAAoB,CAAErB,KAAIC,WAL6B,SAM/DkL,GAAanL,EAAIC,GAAQiN,OAAO,CAAE7J,SAN6B,OAOrEgE,EAAS0I,GAAU/P,EAAIC,IAP8C,gDASrEoH,EAASM,EAAauG,GAAoB,EAAD,MAT4B,yDAA/C,sDAe1B,IAAI8B,GAAmB,KAEhB,MAAMD,GAAY,CAAC/P,EAAYC,IAAb,uCAA6C,WACpEoH,EACAoH,GAFoE,mBAAAnK,EAAA,2DAMhEmK,KADM3O,EAL0D,EAKlEA,KAAQA,OAEGA,EAAKE,KAAOA,EAP2C,wBAQlEqH,EAAS4I,MARyD,SAUhE7O,QAAQC,MAAM,mBAAoB,CAAErB,KAAIC,WAClCiQ,EAAU/E,GAAanL,EAAIC,GAX+B,KAYhEoH,EAZgE,KAa9DsI,GAb8D,KAcpD,CAAE3P,KAAIC,UAd8C,KAetDiQ,EAfsD,UAgBhDA,EAAQhE,OAhBwC,0BAc5DnM,OAd4D,KAe5DD,KAf4D,KAgB5DU,KAhB4D,yCAmBhEwP,GAAcE,EAAQzD,cACnBJ,IACC,MAAM8D,EAAU9D,EAASE,MACzBnL,QAAQC,MAAM,qCAAsC8O,GACpD,IAAI7Q,EAAwB,GACxB6Q,EAAQzE,QACVpM,EAAS8Q,OAAOC,QAAQF,EAAQzE,OAC7B4E,KAAK,CAACC,EAAQC,IAAWC,OAAOF,EAAO,IAAME,OAAOD,EAAO,KAC3DlH,IAAKvH,GAAUA,EAAM,IACxBsF,EACEgH,GACE,SACA,QACA/O,EAAOgK,IAAKvH,GAAUA,EAAM/B,KAC5B,GACA,KAINqH,EACEsI,GAAQ,CACNrQ,SACAM,QAASuQ,EAAQvQ,QACjBa,SAAU0P,EAAQxE,eAClB7L,KAAMoQ,EACN1P,KAAM2P,OAKdjK,EAAQC,KAAR,gBAAsBnG,EAAtB,gBAAgCC,IAjDgC,kDAmDhEoH,EAASM,EAAauG,GAAoB,EAAD,MAnDuB,0DAA7C,wDAwDZ+B,GAAW,2CAAmB,WAAO5I,EAAUoH,GAAjB,iBAAAnK,EAAA,wDAGrCmK,KADM3O,EAF+B,EAEvCA,KAAQA,QAGRsB,QAAQC,MAAM,mBACdvB,EAAKiN,gBAAgBiD,IACrBA,GAAc,KACd3I,EAvFoBd,EAAa,gBA+EM,2CAAnB,wDAcXmK,GAAW,2CAAmB,WAAOrJ,EAAUoH,GAAjB,qBAAAnK,EAAA,wDAMrCmK,IANqC,IAEvC3O,KACEA,EAHqC,EAGrCA,KACUE,EAJ2B,EAIrCD,OAAUC,GAGVF,GAAQA,EAAKE,KAAOA,IACtBoB,QAAQC,MAAM,kBAAmB,CAAErB,OACnCF,EAAKiM,UAAU,IACf1E,EAASsI,GAAQ,CAAE5P,OAAQ,CAAEC,KAAIC,OAAQ,QAVF,2CAAnB,wDAcX0Q,GAAc1Q,GAAD,uCAAiC,WACzDoH,EACAoH,GAFyD,qBAAAnK,EAAA,wDASrDmK,IATqD,IAKvD3O,KACEA,EANqD,EAMrDA,KACUE,EAP2C,EAOrDD,OAAUC,GAGVF,GAAQA,EAAKE,KAAOA,IACtBoB,QAAQC,MAAM,oBAAqB,CAAErB,KAAIC,WACzCH,EAAKiM,UAAU9L,GACfoH,EAASsI,GAAQ,CAAE5P,OAAQ,CAAEC,KAAIC,cAbsB,2CAAjC,wDC3Hb2Q,GAAa,2CAAmB,WAAOvJ,EAAUoH,GAAjB,iBAAAnK,EAAA,2DAGvCmK,MADM3O,EAFiC,EAEzCA,KAAQA,OAEGA,EAAKgM,WAJyB,iCAMvC1K,QAAQC,MAAM,qBANyB,SAOjCvB,EAAKoN,OAAO,CAAExB,MAAO,GAAIC,eAAgB,IAPR,uDASvCtE,EAASM,EAAauG,GAAoB,EAAD,MACzC7G,EAASqJ,MAV8B,gCAazCrJ,EAASM,EAAa,uBAbmB,yDAAnB,wDAiBbsH,GAAgB,CAC3BX,EACAuC,IAF2B,uCAGX,WAAOxJ,EAAUoH,GAAjB,uBAAAnK,EAAA,2DAGZmK,MADM3O,EAFM,EAEdA,KAAQA,OAEGA,EAAKgM,WAJF,sBAKV+E,EAASxH,OAAS,GALR,0BAQRoF,IADcqC,EAPN,EAOVhR,KAAQR,OAPE,SAUV8B,QAAQC,MAAM,qBAAsB,CAAEwP,aAChCnF,EAAmB,GACzB,IAAIoF,EAAYxH,IAAKvH,GAAUA,EAAM/B,OAAQ6Q,GAAUE,QACrD,CAAC/Q,EAAIuJ,KACHmC,EAAMnC,GAAS,CACbvJ,KACAsO,WACA1M,KAAM,WAjBF,UAqBJ9B,EAAKoN,OAAO,CAAExB,UArBV,0DAuBVrE,EAASM,EAAauG,GAAoB,EAAD,MACzC7G,EAASqJ,MAxBC,gCA4BdrJ,EAASM,EAAa,uBA5BR,0DAHW,wDAmChBqJ,GAAmBzH,GAAD,uCAAgC,WAC7DlC,EACAoH,GAF6D,6BAAAnK,EAAA,2DAMzDmK,IANyD,IAK3D3O,KAAgBgR,EAL2C,EAKnDxR,OAAqBmB,EAL8B,EAK9BA,WAAUX,EALoB,EAKpBA,OAE5BA,EAAKgM,WAP2C,sBAQvDvC,EAAQuH,EAAYzH,QARmC,iCAUvDjI,QAAQC,MAAM,yBAA0B,CAAEkI,UACpC0H,EAAWxQ,EAAWqQ,EAAYzH,OAClCqC,EAAmB,IACnB5J,EAAO,IAAIgP,IACZI,OAAO3H,EAAO,GACnBzH,EAAKiP,QAAQ,CAACpH,EAAaJ,KACzBmC,EAAMnC,GAASI,IAhBsC,UAkBjD7J,EAAKoN,OAAO,CAChBxB,QACAC,eAAgBpC,EAAQ0H,EAAWxQ,EAAW,EAAIA,IApBG,0DAuBvD4G,EAASM,EAAauG,GAAoB,EAAD,MACzC7G,EAASqJ,MAxB8C,gCA4B3DrJ,EAASM,EAAa,uBA5BqC,0DAAhC,wDAgClBwJ,GAAoBC,GAAD,uCAAsC,WACpE/J,EACAoH,GAFoE,qBAAAnK,EAAA,2DAMhEmK,IANgE,IAKlE3O,KAAkBuR,EALgD,EAK1D5Q,WAAuBX,EALmC,EAKnCA,OAEpBA,EAAKgM,WAPkD,oBAQ9DuF,IAAgBD,EAR8C,iCAU9DhQ,QAAQC,MAAM,wBAAyB,CACrCgQ,cACAD,gBAZ4D,SAcxDtR,EAAKoN,OAAO,CAAEvB,eAAgByF,IAd0B,uDAgB9D/J,EAASM,EAAauG,GAAoB,EAAD,MACzC7G,EAASqJ,MAjBqD,gCAqBlErJ,EAASM,EAAa,uBArB4C,yDAAtC,wDA2BnB2J,GAAe,2CAAmB,WAAOjK,EAAUoH,GAAjB,qBAAAnK,EAAA,wDAGzCmK,IAHyC,IAE3C3O,KAAgBgR,EAF2B,EAEnCxR,OAAqBmB,EAFc,EAEdA,SAE3BqQ,EAAYzH,OAAS,IACvBjI,QAAQC,MAAM,sBACdgG,EACE8J,GAAiB1Q,EAAW,EAAIA,EAAW,EAAIqQ,EAAYzH,OAAS,KAP3B,2CAAnB,wDAYfkI,GAAc,2CAAmB,WAAOlK,EAAUoH,GAAjB,qBAAAnK,EAAA,wDAGxCmK,IAHwC,IAE1C3O,KAAgBgR,EAF0B,EAElCxR,OAAqBmB,EAFa,EAEbA,SAE3BqQ,EAAYzH,OAAS,IACvBjI,QAAQC,MAAM,qBACdgG,EAAS8J,GAAiB1Q,EAAW,KANK,2CAAnB,wD,sBCrH3B,MAAM+Q,GAA0C,GAE1CC,GAAgB,CACpBlR,GAAI,CAAEH,EAAG,IAAKC,EAAG,IAAKC,EAAG,KACzBH,GAAI,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAMVoR,GAAS,uCAAG,WAAOC,GAAP,qBAAArN,EAAA,yDACnB3D,EAAM8Q,IACNE,EAFmB,oBAGrBhR,EAAM6Q,GAAMG,GAHS,0CAMGC,QAAUD,GANb,cAMX3J,EANW,iBAOGA,EAAM6J,OAAO,EAAG,GAAGC,cAAc,EAAG,GAPvC,QAOXC,EAPW,OAQXxR,EAAKqR,aAAeG,GAC1BP,GAAMG,GAAOhR,EAAM,CACjBJ,KACAJ,GACS,KAAPI,EAAGH,EAAmB,KAAPG,EAAGF,EAAmB,KAAPE,EAAGD,EAAY,IACzC,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACjB,CAAEF,EAAG,IAAKC,EAAG,IAAKC,EAAG,MAdZ,kDAiBjBc,QAAQC,MAAM,kCAAd,MAjBiB,iCAqBhBV,GArBgB,0DAAH,sDCRhBqR,GACJpC,GACGrJ,EAAa,aAAcqJ,GAInBqC,GAAc,2CAAmB,WAC5C5K,EACAoH,GACA,YAAEyD,IAH0C,SAAA5N,EAAA,sDAKvC6N,IAAkBC,KACrBC,GAAehL,EAAUoH,EAAUyD,GACnCI,GAAejL,EAAUoH,EAAUyD,GACnC7K,EAAS2K,GAAU,CAAEpS,SAAS,MARY,2CAAnB,0DAcd2S,GAAa,2CAAmB,WAC3ClL,EACAmL,GACA,YAAEN,IAHyC,SAAA5N,EAAA,0DAKvC6N,KAAiBC,GALsB,uBAMzCK,aAAaN,IACbA,GAAgB,KAChBM,aAAaL,IACbA,GAAgB,KATyB,SAUnCF,EAAYQ,OAVuB,OAWzCrL,EAhCsBd,EAAa,iBAqBM,2CAAnB,0DAiBboM,GAAc,2CAAmB,WAC5CC,EACAC,GACA,cAAElE,IAH0C,SAAArK,EAAA,6DAK5ClD,QAAQC,MAAM,sBAL8B,SAMtCsN,EAAc+D,OANwB,2CAAnB,0DAW3B,IAAIP,GAAuC,KACvCC,GAAuC,KAE3C,MAAMU,GAAuB,CAC3BZ,EACAa,EACAzT,KAEA,IAAI0T,GAAgB,EACpB,MAAMC,EAAiBf,EAAYgB,oBAC7BC,EAAuBjB,EAAYkB,0BAczC,OAbID,IAAyBJ,EAGzBC,EAFEd,EAAYmB,YAECN,EAIbI,GAAwB,EAAIA,EAAuBJ,EAE9CE,IAAmB3T,EAAOyT,EAAqBzT,EAAO+J,QAAQrJ,KAEvEgT,EAAeD,GAEVC,GAGHX,GAAiB,CACrBhL,EACAoH,EACAyD,KAGAC,GAAgB1K,WAAU,sBAAC,gDAAAnD,EAAA,2DAMrBmK,IANqB,IAEvB3O,KAAgBgR,EAFO,EAEfxR,OAAqBmB,EAFN,EAEMA,SAEViP,EAJI,EAGvBpQ,OACEA,OAAUG,QAGVqR,EAAYzH,OAAS,GAPA,uBASjBiK,EAAoBR,GACxBZ,EACAzR,EACAqQ,KAEuB,GAdF,wBAefyC,EAAYD,EAAoBxC,EAAYzH,OAC5CmK,EAAY9D,EAAOoB,EAAYyC,GAAWvT,IAChDoB,QAAQC,MAAM,0BAA2B,CACvCkS,YACAC,YACAF,sBApBmB,SAwBnBjM,EAAS8J,GAAiBmC,IAxBP,UAyBG/O,QAAQkP,IAAI,CAChC/B,GAAU8B,EAAUjU,MAAMgJ,aAC1B2J,EAAYhD,KACVoE,EACAE,EAAUxT,GACVwT,EAAU3K,QACV,KA/Be,qCAyBZ3I,EAzBY,KAkCnBmH,EAASsI,GAAQ,CAAEzP,WAlCA,kDAoCnBmH,EAASM,EAAauG,GAAoB,EAAD,MApCtB,QAyCvBmE,GAAehL,EAAUoH,EAAUyD,GAzCZ,wBA4CvB9Q,QAAQC,MAAM,8BACdgG,EAASkL,MA7Cc,0DA+CxB,MAGCD,GAAiB,CACrBjL,EACAoH,EACAyD,KAGAE,GAAgB3K,WAAW,KAGrBgH,IADF3O,KAAQR,OAEC+J,OAAS,IAElBhC,EACE2K,GAAU,CAAEnS,cAAeqS,EAAYwB,4BAIzCpB,GAAejL,EAAUoH,EAAUyD,KAEpC,MCrIUtK,mBArBOlG,IAAD,CACnBwH,OAAQ7C,EAAa3E,GACrBqH,OAAQzC,EAAa5E,GACrBpC,OAAQmK,GAAc/H,EAAOA,EAAM5B,KAAKR,QACxCM,QAAS8B,EAAMW,OAAOzC,QACtBuJ,aAAczH,EAAM5B,KAAKW,SAAWiB,EAAM5B,KAAKR,OAAO+J,SAG/BhC,IAAD,CACtBY,OAASsB,IACPlC,EAAS4K,MACT5K,EAAS8J,GAAiB5H,KAE5BP,SAAWO,GAAkBlC,EAAS2J,GAAgBzH,IACtDH,SAAU,IAAM/B,EAASb,EAAU,CAAE5E,KAAM,SAAUmB,MAAO,QAC5DmF,OAAQ,IAAMb,EAASkL,QAMV3K,CAAuCqB,I,MC1BtD,MAAM0K,WAAiB/Q,YAAwB,eAAD,oBACrCC,OAAS,KAAO,MAAD,EACOC,KAAKC,MAAxBnD,EADY,EACZA,QAASyE,EADG,EACHA,MACjB,OACE,yBAAKrB,UAAWI,IAAW,WAAY,CAAExD,aACvC,8BAAUgU,IAAK,IAAKvP,MAAe,IAARA,OAMpBsP,UCDA/L,mBAVOlG,IAAD,CACnB9B,QAAS8B,EAAMW,OAAOzC,QACtByE,MAAO3C,EAAMW,OAAOxC,gBAGGwH,IAAD,IAKTO,CAAuC+L,I,MCRtD,MAAME,WAAiBjR,YAA0C,eAAD,oBACvDC,OAAS,KAAO,MAAD,EAYhBC,KAAKC,MAVP+Q,EAFkB,EAElBA,eACAC,EAHkB,EAGlBA,cACA9L,EAJkB,EAIlBA,OACAmB,EALkB,EAKlBA,SACAlB,EANkB,EAMlBA,OACA8L,EAPkB,EAOlBA,SACAC,EARkB,EAQlBA,YACAlL,EATkB,EASlBA,OACAnJ,EAVkB,EAUlBA,QACAoE,EAXkB,EAWlBA,EAEF,OACE,yBAAKhB,UAAU,YACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CACES,SAAUsF,GAA0B,IAAhBkL,EACpBhR,KAAK,gBACLW,QAASkQ,EACT5Q,KAAK,IACLC,MAAOa,EAAE,sBAGb,yBAAKhB,UAAU,WACXpD,EASA,kBAAC,EAAD,CACE6D,SAAUsF,GAA0B,IAAhBkL,EACpBrQ,QAASsE,EACTjF,KAAK,QACLE,MAAOa,EAAE,eACTd,KAAK,MAbP,kBAAC,EAAD,CACEO,SAAUsF,GAA0B,IAAhBkL,EACpBrQ,QAASqE,EACThF,KAAK,OACLC,KAAK,IACLC,MAAOa,EAAE,kBAYf,yBAAKhB,UAAU,WACb,kBAAC,EAAD,CACES,SAAUsF,GAA0B,IAAhBkL,EACpBhR,KAAK,eACLW,QAASmQ,EACT7Q,KAAK,IACLC,MAAOa,EAAE,sBAIf,kBAAC,GAAD,MACA,yBAAKhB,UAAU,eACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CACES,SAAUsF,GAA0B,IAAhBkL,EACpBrQ,QAASd,KAAKoR,QACdjR,KAAK,QACLE,MAAOa,EAAE,kBAGb,yBAAKhB,UAAU,WACb,kBAAC,EAAD,CACEY,QAASwF,EACTnG,KAAK,SACLE,MAAOa,EAAE,oBAGb,yBAAKhB,UAAU,WACZ+F,EACC,kBAAC,EAAD,CACE9F,KAAK,OACLW,QAASoQ,EACT9Q,KAAK,IACLC,MAAOa,EAAE,kBAGX,kBAAC,EAAD,CACEf,KAAK,SACLW,QAASd,KAAKqR,OACdjR,KAAK,IACLC,MAAOa,EAAE,wBArFuC,KA8FtDkQ,QAAU,KAAO,MAAD,EACYpR,KAAKC,MAA/BmR,EADc,EACdA,SACRjO,EAFsB,EACLA,YACPjC,EAFY,EACMA,GAChB,uBAAwBkQ,IAhGwB,KAmGtDC,OAAS,KAAO,MAAD,EACIrR,KAAKC,OAC9BkD,EAFqB,EACbA,YACEjC,EAFW,EACFA,GACP,sBAAuBlB,KAAKC,MAAMoR,UAInCjQ,qBAAkB2P,IC1ElBjM,mBA3BOlG,IAAD,CACnBuS,YAAavS,EAAM5B,KAAKR,OAAO+J,OAC/BN,OAAQzC,EAAa5E,GACrB9B,QAAS8B,EAAMW,OAAOzC,UAGCyH,IAAD,CACtB6M,QAAS,KACP7M,EAASuJ,MACTvJ,EAASkL,OAEXtM,UAAW,CAACW,EAAkBC,KAC5BQ,EAASV,EAAaC,EAAUC,KAElCsN,OAAQ,IAAM9M,EAASqJ,MACvBsD,SAAU,IAAM3M,EAASb,EAAU,CAAE5E,KAAM,aAAcmB,MAAO,QAChE8C,UAAYgC,GAAoBR,EAASH,EAAe,OAAQW,IAChEiM,eAAgB,IAAMzM,EAASiK,MAC/ByC,cAAe,IAAM1M,EAASkK,MAC9BtJ,OAAQ,IAAMZ,EAAS4K,MACvB7I,SAAU,IAAM/B,EAASb,EAAU,CAAE5E,KAAM,SAAUmB,MAAO,QAC5DmF,OAAQ,IAAMb,EAASkL,QAMV3K,CAAuCiM,I,MC1BtD,MAAMO,WAAaxR,YAAgC,eAAD,oBACzCyR,kBAAoB,KACzBvR,KAAKC,MAAMuR,WAFmC,KAKzCC,qBAAuB,KAC5BzR,KAAKC,MAAM6C,UANmC,KASzC/C,OAAS,KAAO,MAAD,EAGhBC,KAAKC,MADP7C,MAASC,EAFS,EAETA,GAAII,EAFK,EAELA,GAEf,OACE,yBACEyC,UAAU,OACVM,MAAO,CACLpD,MAAM,OAAD,OAASC,EAAGC,EAAZ,aAAkBD,EAAGE,EAArB,aAA2BF,EAAGG,EAA9B,KACLkU,gBAAgB,OAAD,OAASjU,EAAGH,EAAZ,aAAkBG,EAAGF,EAArB,aAA2BE,EAAGD,EAA9B,OAGjB,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,SAMOmU,mBAAWL,ICbXxM,mBArBM,CAAClG,EAAkBgT,KAAnB,CACnBxU,MAAOwB,EAAM5B,KAAKI,QAGI,CACtBmH,EACAqN,KACI,MACIlL,EAAQmL,QAASD,EAAS5O,SAAS8O,OAAOC,OAAO,IAAjDrL,IAGR,MAAO,CACL8K,QAAS,IACPjN,EAAS0I,GAAU2E,EAASI,MAAMC,OAAOrH,QAASlE,GAAO,KAC3D5D,OAAQ,IAAMyB,EAAS4I,QAOZrI,CAAuCwM,I,MCrBtD,MAAMY,WAAepS,YAA0C,eAAD,oBACrDC,OAAS,KAAO,MAAD,EACiCC,KAAKC,MAAlDkS,EADY,EACZA,SAAUC,EADE,EACFA,aAAcC,EADZ,EACYA,cAAenR,EAD3B,EAC2BA,EAC/C,OACE,yBAAKhB,UAAU,UACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAMoS,GAAG,KAAT,UAEF,yBAAKpS,UAAU,eACb,8BAAOgB,EAAE,wBACT,uBACE+B,KAAK,yBACL0C,OAAO,SACPC,IAAI,uBAEJ,yBACE2M,IAAI,qBACJC,OAAO,OACPnS,MAAM,SACNoS,IAAI,mBAKZ,yBAAKvS,UAAU,UACb,yBAAKA,UAAU,QACZiS,EACC,yBAAKjS,UAAU,YACb,kBAAC,EAAD,CACEU,cAAc,EACdT,KAAK,OACLW,QAASsR,EACThS,KAAK,IACLC,MAAOa,EAAE,mBAIb,oCACE,yBAAKhB,UAAU,YACb,kBAAC,EAAD,CACEU,cAAc,EACdE,QAASuR,EACTlS,KAAK,UACLC,KAAK,IACLC,MAAOa,EAAE,uBAOrB,yBAAKhB,UAAU,UACb,yBAAKA,UAAU,QACZiS,EACC,yBAAKjS,UAAU,YACb,kBAAC,EAAD,CACEU,cAAc,EACdT,KAAK,WACLW,QAASd,KAAK+K,aACd3K,KAAK,IACLC,MAAOa,EAAE,uBAIb,yBAAKhB,UAAU,YACb,kBAAC,EAAD,CACEU,cAAc,EACdT,KAAK,OACLW,QAAS,OACTV,KAAK,IACLC,MAAOa,EAAE,qBAvEmC,KAiF5D6J,aAAe,KAAO,MAAD,EACwB/K,KAAKC,MAAxCkD,EADW,EACXA,UAAWuP,EADA,EACAA,iBACnBvP,GAAUjC,EAFS,EACkBA,GACzB,4BAA6BwR,KAI9BtR,qBAAkB8Q,IC/F1B,MAAMS,GAAe/T,GAAqBA,EAAMhB,KAAKF,KCqBtDkV,GAAW9F,GAA8BrJ,EAAa,WAAYqJ,GAI3D+F,GAAa,CAACtS,EAAcpD,IAAf,uCAA+C,WACvEoH,GADuE,eAAA/C,EAAA,sEAIrElD,QAAQC,MAAM,oBACRrB,EAAK8P,eAL0D,SAM/DxC,GAAatN,EAAIC,GAAQiN,OAAO,CAAE7J,SAN6B,OAOrEgE,EAASuO,GAAY5V,EAAIC,IAP4C,gDASrEoH,EAASM,EAAauG,GAAoB,EAAD,MAT4B,yDAA/C,sDAe1B,IAAI8B,GAAmB,KAEhB,MAAM4F,GAAc,CAAC5V,EAAYC,IAAb,uCAA6C,WACtEoH,EACAoH,GAFsE,mBAAAnK,EAAA,2DAMlEmK,KADM/N,EAL4D,EAKpEA,KAAQA,OAEGA,EAAKV,KAAOA,EAP6C,wBAQpEqH,EAASwO,MAR2D,SAUlEzU,QAAQC,MAAM,qBAAsB,CAAErB,KAAIC,WACpC6V,EAAUxI,GAAatN,GAXqC,KAYlEqH,EAZkE,KAahEqO,GAbgE,KActD,CAAE1V,KAAIC,UAdgD,KAexD6V,EAfwD,UAgBlDA,EAAQ5J,OAhB0C,0BAc9DnM,OAd8D,KAe9DW,KAf8D,KAgB9DF,KAhB8D,yCAmBlEwP,GAAc8F,EAAQrJ,cACnBJ,IACC,MAAM8D,EAAU9D,EAASE,MACzBnL,QAAQC,MAAM,qCAAsC8O,GACpD9I,EAASqO,GAAQ,CAAEhV,KAAMoV,EAAStV,KAAM2P,OAvBsB,kDA2BlE9I,EAASM,EAAauG,GAAoB,EAAD,MACzC7G,EAASqO,GAAQ,CAAE3V,OAAQ,CAAEC,KAAIC,OAAQ,OA5ByB,0DAA7C,wDAiCd4V,GAAiB,2CAAmB,WAAOxO,EAAUoH,GAAjB,iBAAAnK,EAAA,wDAG3CmK,KADM/N,EAFqC,EAE7CA,KAAQA,QAGRU,QAAQC,MAAM,yBACdX,EAAKqM,gBAAgBiD,IACrBA,GAAc,KACd3I,EA/DoBd,EAAa,gBAuDY,2CAAnB,wDAYjBwP,GAAgB,2CAAmB,WAAO1O,EAAUoH,GAAjB,qBAAAnK,EAAA,wDAK1CmK,IAL0C,IAE5C/N,KACEX,OAAUC,EAHgC,EAGhCA,GAAIC,EAH4B,EAG5BA,OAGdD,GAAMC,IACRmB,QAAQC,MAAM,uBAAwB,CAAErB,KAAIC,WAC5CoH,EAASuO,GAAY5V,EAAIC,KARmB,2CAAnB,wDC7Dd2H,mBAjBOlG,IAAD,CACnBuT,WAAYvT,EAAMhB,KAAKX,OAAOC,GAC9BU,KAAM+U,GAAY/T,KAGK2F,IAAD,CACtBpB,UAAW,CAACW,EAAkBC,KAC5BQ,EAASV,EAAaC,EAAUC,KAElCqO,aAAc,IAAM7N,EAASb,EAAU,CAAE5E,KAAM,aAAcmB,MAAO,QACpEoS,cAAe,IAAM9N,EAASb,EAAU,CAAE5E,KAAM,aAAcmB,MAAO,QACrEyS,iBAAkB,IAAMnO,EAASwO,QAMpBjO,CAAuCoN,I,SCXtD,MAAMgB,WAAcpT,YAAkD,eAAD,oBAC5DC,OAAS,KAAO,MAAD,EAUhBC,KAAKC,MARPkT,EAFkB,EAElBA,SACAjT,EAHkB,EAGlBA,UACAG,EAJkB,EAIlBA,MACA+S,EALkB,EAKlBA,WACAC,EANkB,EAMlBA,QACAC,EAPkB,EAOlBA,MACAC,EARkB,EAQlBA,eACArS,EATkB,EASlBA,EAEF,OACE,0BAAMhB,UAAWI,IAAW,QAASJ,GAAYsT,SAAUxT,KAAKwT,UAC9D,yBAAKtT,UAAU,aACb,kBAAC,EAAD,CACEW,KAAK,UACLX,UAAWI,IAAW,gBAAiB,CACrCmT,QAASF,IAEXpT,KAAK,aACLE,MAAM,OACNS,QAASwS,IAEX,yBAAKpT,UAAU,cAAcG,GAC7B,kBAAC,EAAD,CACEQ,KAAK,UACLX,UAAU,iBACVY,QAASuS,EACThT,MAAOa,EAAE,UACTf,KAAK,WAGT,yBAAKD,UAAU,aAAaiT,GAC5B,yBAAKjT,UAAU,aAAakT,GAAcA,OAlCmB,KAuC3DI,SAAYE,IAClBA,EAAMC,iBACF3T,KAAKC,MAAMuT,UACbxT,KAAKC,MAAMuT,aAKFpS,qBAAkB8R,IC5ClBpO,mBAZUlG,IAAD,CACtB2U,eAAgB3U,EAAMS,OAAOxC,MAAM0J,OAAS,IAGlBhC,IAAD,CACzB8O,QAAS,IAAM9O,EAASX,KACxB0P,MAAO,IAAM/O,EAASX,OAMTkB,CAA6CoO,I,MCL5D,MAAMU,WAAkB9T,YAAkB,eAAD,oBAChCC,OAAS,KAAO,MAAD,EAC4CC,KAAKC,MAA7DkT,EADY,EACZA,SAAUjT,EADE,EACFA,UAAW2T,EADT,EACSA,cAAexT,EADxB,EACwBA,MAAOmT,EAD/B,EAC+BA,SACnD,OACE,kBAAC,GAAD,CACEtT,UAAWI,IAAW,YAAaJ,GACnCG,MAAOA,EACP+S,WAAYS,EACZL,SAAUA,GAETL,KAMMS,UChBf,MAAME,WAAqBhU,YAExB,eAAD,oBACOC,OAAS,KAAO,MAAD,EACIC,KAAKC,MAArB6D,EADY,EACZA,SAAU5C,EADE,EACFA,EAClB,OACE,kBAAC,GAAD,CACEb,MAAOa,EAAE,WACTsS,SAAUxT,KAAKC,MAAM8D,YACrB8P,cAAe7T,KAAK6T,eAEnB/P,IATP,KAcQ+P,cAAgB,KAAO,MACrB3S,EAAMlB,KAAKC,MAAXiB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,UACTL,KAAK,UACLV,KAAK,OACLrB,KAAK,WAEP,kBAACqC,EAAD,CAAcL,QAASd,KAAKC,MAAM8T,cAM3B3S,qBAAkB0S,ICjBlBhP,mBAnBOlG,IACb,IAGe,CACtB2F,EACAqN,KAFsB,CAItBmC,SAAU,KACRxP,EAASX,KACLgO,EAAS5N,YACX4N,EAAS5N,gBAQAc,CAAuCgP,IChBtD,MAAME,WAAyBlU,YAAiD,eAAD,oBACrEmU,MAAqCC,sBADgC,KAG7DtV,MAAe,CAC7B1B,GAAI,GACJC,OAAQ,IALmE,KActE4C,OAAS,KAAO,MACbmB,EAAMlB,KAAKC,MAAXiB,EADY,EAEGlB,KAAKpB,MAApB1B,EAFY,EAEZA,GAAIC,EAFQ,EAERA,OACZ,OACE,kBAAC,GAAD,CACEkD,MAAOa,EAAE,oBACTsS,SAAUxT,KAAKmU,UACfN,cAAe7T,KAAK6T,eAEpB,yBAAK3T,UAAU,cACb,2BAAOkU,QAAQ,YAAYlT,EAAE,kBAC7B,2BACEhE,GAAG,WACH4B,KAAK,OACLuV,YAAanT,EAAE,wBACfoT,UAAW,GACXC,UAAW,GACXC,UAAU,EACVjT,MAAOrE,EACPgL,IAAKlI,KAAKiU,MACVQ,SAAWC,IACT1U,KAAK2U,SAAS,CAAEzX,GAAIwX,EAAE/O,OAAOpE,YAInC,yBAAKrB,UAAU,cACb,2BAAOkU,QAAQ,gBAAgBlT,EAAE,iBACjC,2BACEhE,GAAG,eACH4B,KAAK,WACLuV,YAAanT,EAAE,4BACfoT,UAAW,GACXC,UAAW,GACXC,UAAU,EACVjT,MAAOpE,EACPsX,SAAWC,IACT1U,KAAK2U,SAAS,CAAExX,OAAQuX,EAAE/O,OAAOpE,cAlDgC,KA0DrEsS,cAAgB,KAAO,MACrB3S,EAAMlB,KAAKC,MAAXiB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,iBACTL,KAAK,UACLV,KAAK,UACLrB,KAAK,WAEP,kBAACqC,EAAD,CAAcL,QAASd,KAAKC,MAAMoT,UAClC,kBAAC,EAAD,CACEhT,MAAOa,EAAE,gBACTL,KAAK,UACLV,KAAK,OACLW,QAASd,KAAKC,MAAM2U,aAzEiD,KA+ErET,UAAY,KAAO,MAAD,EACgBnU,KAAKC,MAArCoT,EADgB,EAChBA,QAASc,EADO,EACPA,UAAWU,EADJ,EACIA,QADJ,EAED7U,KAAKpB,MAApB1B,EAFgB,EAEhBA,GAAIC,EAFY,EAEZA,OACa,IAArBD,EAAG4X,OAAOvO,OAIe,IAAzBpJ,EAAO2X,OAAOvO,QAIlB4N,EAAUjX,EAAIC,GACdkW,KAJEwB,EAAQ,2BAJRA,EAAQ,wBA3ELtD,oBACDvR,KAAKiU,MAAMc,SACb/U,KAAKiU,MAAMc,QAAQC,SAqFV5T,qBAAkB4S,ICpFlBlP,mBAdOlG,IACb,IAGgB2F,IAAD,CACtB8O,QAAS,IAAM9O,EAASX,KACxBuQ,UAAW,CAACjX,EAAYC,IAAmBoH,EAASuO,GAAY5V,EAAIC,IACpE0X,QAAU9P,GAAoBR,EAASM,EAAaE,IACpD6P,SAAU,IAAMrQ,EAASb,EAAU,CAAE5E,KAAM,aAAcmB,MAAO,UAMnD6E,CAAuCkP,ICRtD,MAAMiB,WAAoBnV,YAAkD,eAAD,iCAClEC,OAAS,KAAO,MAAD,EACgCC,KAAKC,MAAjD/C,EADY,EACZA,GAAIgY,EADQ,EACRA,MAAOT,EADC,EACDA,SAAUJ,EADT,EACSA,YAAa9S,EADtB,EACsBA,MAC1C,OACE,yBAAKrB,UAAU,cACb,2BAAOkU,QAASlX,GAAKgY,GACrB,yBACE1U,MAAO,CACL2U,QAAS,OACTC,cAAe,MACfC,eAAgB,kBAGlB,2BACE7U,MAAO,CACL8U,SAAU,EACVC,YAAa,UAEfrY,GAAIA,EACJ4B,KAAK,WACLuV,YAAaA,EACbC,UAAW,GACXC,UAAW,GACXC,UAAU,EACVjT,MAAOA,EACPkT,SAAWC,GAAMD,EAASC,EAAE/O,OAAOpE,SAErC,kBAAC,EAAD,CACEpB,KAAK,YACLW,QAASd,KAAKwV,kBACdpV,KAAK,IACLC,MAAK,yBA/B0D,KAsCjEmV,kBAtCiE,sBAsC7C,kCAAAhU,EAAA,+DACM,EAAKvB,MAA7B8C,EADkB,EAClBA,UAAWxB,EADO,EACPA,MAAOL,EADA,EACAA,EADA,SAEpBI,EAAgBC,GAFI,OAG1BwB,EAAU7B,EAAE,+BAHc,4CAOfE,qBAAkB6T,IC7ClBnQ,mBATUlG,IAAD,IAEI2F,IAAD,CACzBxB,UAAYgC,GAAoBR,EAASH,EAAe,OAAQW,MAMnDD,CAA6CmQ,ICN5D,IAAIQ,GAAe,EASnB,MAAMC,WAAwB5V,YAAiD,eAAD,oBACpE6V,QAAuCzB,sBAD6B,KAG5DtV,MAAe,CAC7B2B,KAAM,GACNpD,OAAQ6P,gBALkE,KAiBrEjN,OAAS,KAAO,MACbmB,EAAMlB,KAAKC,MAAXiB,EADY,EAEKlB,KAAKpB,MAAtB2B,EAFY,EAEZA,KAAMpD,EAFM,EAENA,OACd,OACE,kBAAC,GAAD,CACEkD,MAAOa,EAAE,uBACTsS,SAAUxT,KAAK4V,SACf/B,cAAe7T,KAAK6T,eAEpB,yBAAK3T,UAAU,cACb,2BAAOkU,QAAQ,cAAclT,EAAE,eAC/B,2BACEhE,GAAG,aACH4B,KAAK,OACLuV,YAAanT,EAAE,0BACfoT,UAAW,IACXC,UAAW,EACXC,UAAU,EACVjT,MAAOhB,EACP2H,IAAKlI,KAAK2V,QACVlB,SAAWC,GAAM1U,KAAK2U,SAAS,CAAEpU,KAAMmU,EAAE/O,OAAOpE,WAGpD,kBAAC,GAAD,CACErE,GAAG,eACHgY,MAAOhU,EAAE,aACTmT,YAAanT,EAAE,yBACfK,MAAOpE,EACPsX,SAAWvL,GAAclJ,KAAK2U,SAAS,CAAExX,OAAQ+L,QA7CmB,KAmDpE2K,cAAgB,KAAO,MACrB3S,EAAMlB,KAAKC,MAAXiB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,gBACTL,KAAK,UACLV,KAAK,OACLrB,KAAK,WAEP,kBAACqC,EAAD,CAAcL,QAASd,KAAKC,MAAMoT,YA7DoC,KAkEpEuC,SAAW,KAAO,MAAD,EACgB5V,KAAKC,MAApCoT,EADe,EACfA,QAASuC,EADM,EACNA,SAAUf,EADJ,EACIA,QADJ,EAEE7U,KAAKpB,MAAtB2B,EAFe,EAEfA,KAAMpD,EAFS,EAETA,OACa,IAAvBoD,EAAKuU,OAAOvO,OAIa,IAAzBpJ,EAAO2X,OAAOvO,QAIlBqP,EAASrV,EAAMpD,GACfkW,IACAoC,MALEZ,EAAQ,2BAJRA,EAAQ,0BA9DLtD,oBACLvR,KAAK2U,SAAS,CACZpU,KAAK,GAAD,OAAKP,KAAKC,MAAMiB,EAAE,cAAlB,YAAmCuU,MAErCzV,KAAK2V,QAAQZ,SACf/U,KAAK2V,QAAQZ,QAAQC,SAsEZ5T,qBAAkBsU,IC9ElB5Q,mBAdOlG,IACb,IAGgB2F,IAAD,CACtB8O,QAAS,IAAM9O,EAASX,KACxBgS,SAAU,CAACrV,EAAcpD,IACvBoH,EAASwI,GAAWxM,EAAMpD,IAC5B0X,QAAU9P,GAAoBR,EAASM,EAAaE,MAMvCD,CAAuC4Q,ICdtD,IAAIG,GAAe,EASnB,MAAMC,WAAwBhW,YAAiD,eAAD,oBACpE6V,QAAuCzB,sBAD6B,KAG5DtV,MAAe,CAC7B2B,KAAM,GACNpD,OAAQ6P,gBALkE,KAiBrEjN,OAAS,KAAO,MACbmB,EAAMlB,KAAKC,MAAXiB,EADY,EAEKlB,KAAKpB,MAAtB2B,EAFY,EAEZA,KAAMpD,EAFM,EAENA,OACd,OACE,kBAAC,GAAD,CACEkD,MAAOa,EAAE,uBACTsS,SAAUxT,KAAK4V,SACf/B,cAAe7T,KAAK6T,eAEpB,yBAAK3T,UAAU,cACb,2BAAOkU,QAAQ,cAAclT,EAAE,eAC/B,2BACEhE,GAAG,aACH4B,KAAK,OACLuV,YAAanT,EAAE,0BACfoT,UAAW,IACXC,UAAW,EACXC,UAAU,EACVjT,MAAOhB,EACP2H,IAAKlI,KAAK2V,QACVlB,SAAWC,GAAM1U,KAAK2U,SAAS,CAAEpU,KAAMmU,EAAE/O,OAAOpE,WAGpD,kBAAC,GAAD,CACErE,GAAG,eACHgY,MAAOhU,EAAE,gBACTmT,YAAanT,EAAE,4BACfK,MAAOpE,EACPsX,SAAWvL,GAAclJ,KAAK2U,SAAS,CAAExX,OAAQ+L,QA7CmB,KAmDpE2K,cAAgB,KAAO,MACrB3S,EAAMlB,KAAKC,MAAXiB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,gBACTL,KAAK,UACLV,KAAK,OACLrB,KAAK,WAEP,kBAACqC,EAAD,CAAcL,QAASd,KAAKC,MAAMoT,UAClC,kBAAC,EAAD,CACEhT,MAAOa,EAAE,iBACTL,KAAK,UACLV,KAAK,UACLW,QAASd,KAAKC,MAAM2U,aAlEgD,KAwEpEgB,SAAW,KAAO,MAAD,EACgB5V,KAAKC,MAApCoT,EADe,EACfA,QAASuC,EADM,EACNA,SAAUf,EADJ,EACIA,QADJ,EAEE7U,KAAKpB,MAAtB2B,EAFe,EAEfA,KAAMpD,EAFS,EAETA,OACa,IAAvBoD,EAAKuU,OAAOvO,OAIa,IAAzBpJ,EAAO2X,OAAOvO,QAIlBqP,EAASrV,EAAMpD,GACfkW,IACAwC,MALEhB,EAAQ,2BAJRA,EAAQ,0BApELtD,oBACLvR,KAAK2U,SAAS,CACZpU,KAAK,GAAD,OAAKP,KAAKC,MAAMiB,EAAE,cAAlB,YAAmC2U,MAErC7V,KAAK2V,QAAQZ,SACf/U,KAAK2V,QAAQZ,QAAQC,SA4EZ5T,qBAAkB0U,ICnFlBhR,mBAfOlG,IACb,IAGgB2F,IAAD,CACtB8O,QAAS,IAAM9O,EAASX,KACxBgS,SAAU,CAACrV,EAAcpD,IACvBoH,EAASsO,GAAWtS,EAAMpD,IAC5B0X,QAAU9P,GAAoBR,EAASM,EAAaE,IACpD6P,SAAU,IAAMrQ,EAASb,EAAU,CAAE5E,KAAM,cAAemB,MAAO,UAMpD6E,CAAuCgR,I,oBCVtD,MAuEMC,GAAgBtZ,IAAD,CACnBoJ,OAAQ,CACN3I,GAAIT,EAAMoJ,OAAO3I,GAAG8Y,WACpBzV,KAAM9D,EAAMoJ,OAAOtF,KACnBmF,KAAK,iCAAD,OAAmCjJ,EAAMoJ,OAAO3I,IACpD+Y,YAAaxZ,EAAMoJ,OAAOoQ,YAC1BnQ,cAAerJ,EAAMoJ,OAAOC,eAE9BoQ,UAAWzZ,EAAMyZ,UACjBzQ,YAAahJ,EAAMgJ,YACnBvI,GAAIT,EAAMS,GAAG8Y,WACbtQ,KAAK,gCAAD,OAAkCjJ,EAAMS,IAC5CmD,MAAO5D,EAAM4D,MACbuM,YACmB,IAAjBnQ,EAAMmQ,OACFnQ,EAAMmQ,OAAOtB,KACVnM,OAAQxC,GAAUA,EAAMwZ,UAAYxZ,EAAMoJ,SAC1CS,IAAK7J,GAAUyZ,GAAazZ,EAAOF,SACtC,EACNqC,KAAM,UAGFuX,GAAkB,CACtB3Z,EACAkB,KAFsB,CAItBV,GAAIR,EAASQ,GAAG8Y,WAChBtQ,KAAK,mCAAD,OAAqChJ,EAASQ,IAClD+Y,YAAavZ,EAASuZ,YACtBnQ,cAAepJ,EAASoJ,cACxBzF,MAAO3D,EAAS2D,MAChBuM,YACsB,IAApBlQ,EAASkQ,OACLlQ,EAASkQ,OAAOtB,KACbnM,OAAQxC,GAAUA,EAAMwZ,UAAYxZ,EAAMoJ,SAC1CS,IAAK7J,GAAUyZ,GAAazZ,EAAOA,EAAMF,aAC5C,EACNqC,KAAM,WACNlB,KAAM,CACJV,GAAIU,EAAKV,GAAG8Y,WACZzV,KAAM3C,EAAK2C,KACXmF,KAAK,kCAAD,OAAoC9H,EAAKV,OAI3CkZ,GAAe,CACnBzZ,EACAF,KAFmB,CAInBA,MAAO,CACLS,GAAIT,EAAMS,GAAG8Y,WACbtQ,KAAK,gCAAD,OAAkCjJ,EAAMS,IAC5CmD,MAAO5D,EAAM4D,MACb6V,UAAWzZ,EAAMyZ,UACjBzQ,YAAahJ,EAAMgJ,aAErBI,OAAQ,CACN3I,GAAIP,EAAMkJ,OAAO3I,GAAG8Y,WACpBzV,KAAM5D,EAAMkJ,OAAOtF,KACnBmF,KAAK,iCAAD,OAAmC/I,EAAMkJ,OAAO3I,IACpD+Y,YAAatZ,EAAMkJ,OAAOoQ,YAC1BnQ,cAAenJ,EAAMkJ,OAAOC,eAE9BxB,SAAU3H,EAAM2H,SAChBpH,GAAIP,EAAMO,GAAG8Y,WACbtQ,KAAK,gCAAD,OAAkC/I,EAAMO,IAC5C6I,QAASpJ,EAAMoJ,QACf1F,MAAO1D,EAAM0D,MACbvB,KAAM,UAuIKwX,GAlIY,MACvB,MAEMC,EAAkB1H,GACtB,IAAIpN,QAAQ,CAACC,EAAS2H,KACpBmN,KAAM3H,OAAK,EAAQ,CAACrQ,EAAK8M,KACnB9M,EACF6K,EAAO,IAAIK,MAAMlL,EAAIuG,UAErBrD,EAAQ4J,OAKVmL,EAAK,uCAAG,WAAUC,EAAc7E,GAAxB,eAAArQ,EAAA,6DAENmV,EAAW9E,EAAE,UAfJ,yBAeI,YACA6E,EADA,YACQ7E,EADR,qCAfJ,yBAeI,YAEA6E,EAFA,2BAFP,SAKCH,EAAeI,GALhB,mFAAH,wDAQLC,EAAU,CAAI9X,EAAiB+X,IACnCJ,EAAK,iBACO3X,GADP,YAEEgY,mBAAmBD,KAGtBE,EAAQ,CACZjY,EACAkY,IAEAvV,QAAQkP,IACNqG,EAAIxQ,IAAJ,uCAAQ,WAAOtJ,GAAP,eAAAsE,EAAA,sEACciV,EAAK,UAAO3X,EAAP,YAAe5B,IADlC,cACA+B,EADA,yBAECA,EAAM1C,MAAQ,KAAO0C,GAFtB,2CAAR,wDAMEgY,EAAc,uCAAG,WACrBnY,EACAkY,GAFqB,uBAAAxV,EAAA,sDAIjB0V,GAAQ,EACN1a,EAA0Bwa,EAAIxQ,IAAI,IAAM,MALzB,WAMdhK,EAAO2a,SAAS,MANF,oBAObC,EAAmB,GACnBC,EAAuB,GAC7B7a,EAAOyR,QAAQ,CAAChP,EAAOwH,KAChBxH,IACHmY,EAAO/T,KAAK2T,EAAIvQ,IAChB4Q,EAAWhU,KAAKoD,MAGfyQ,EAfc,wBAgBjB5Y,QAAQC,MAAR,uCAAsD,CAAE6Y,WAhBvC,UAiBXnQ,GAxMW,KAuLA,yBAmBK8P,EAASjY,EAAMsY,GAnBpB,QAmBbE,EAnBa,OAoBnBD,EAAWpJ,QAAQ,CAACxH,EAAO8Q,KACzB/a,EAAOiK,GAAS6Q,EAAUC,KAE5BL,GAAQ,EAvBW,gDAyBd1a,GAzBc,4CAAH,wDA4Bdgb,EAAiBX,GAAkBD,EAAkB,QAASC,GAE9DY,EAAoBZ,GACxBD,EAAqB,WAAYC,GAE7Ba,EAAiBb,GAAkBD,EAAkB,QAASC,GAE9D/E,EAAM,uCAAG,WAAO+E,GAAP,uBAAArV,EAAA,sEAC0BC,QAAQkP,IAAI,CACjD6G,EAAcX,GACdY,EAAiBZ,GACjBa,EAAcb,KAJH,2CACNpa,EADM,KACCC,EADD,KACWC,EADX,uBAMN,CAELF,MAAOA,EAAM6O,KAAK9E,IAAIuP,IACtBrZ,SAAUA,EAAS4O,KAChBnM,OAAQzC,GAAaA,EAASib,QAC9BnR,IAAK9J,GAAa2Z,GAAgB3Z,EAAUA,EAASkB,OACxDjB,MAAOA,EAAM2O,KACVnM,OAAQxC,GAAUA,EAAMwZ,UAAYxZ,EAAMoJ,SAC1CS,IAAK7J,GAAUyZ,GAAazZ,EAAOA,EAAMF,UAdjC,2CAAH,sDAkBNmb,EAAU,uCAAG,WAAOZ,GAAP,eAAAxV,EAAA,sEACIyV,EAAyB,QAASD,GADtC,cACXa,EADW,yBAEVA,EAAOrR,IAAK/J,GAAUsZ,GAAatZ,KAFzB,2CAAH,sDAKVqb,EAAa,uCAAG,WAAOd,GAAP,eAAAxV,EAAA,sEACIyV,EAA4B,WAAYD,GAD5C,cACde,EADc,yBAEbA,EAAUvR,IAAK9J,GACpB2Z,GAAgB3Z,EAAUA,EAASsb,WAHjB,2CAAH,sDAwBnB,MAAO,CACLlG,SACArF,eAnBkB,uCAAG,WACrB3N,EACAkY,GAFqB,SAAAxV,EAAA,2DAIb1C,EAJa,OAKd,UALc,OAOd,aAPc,+CAMV8Y,EAAWZ,IAND,gCAQVc,EAAcd,IARJ,2CAAH,wDAoBlB9K,WARc,uCAAG,WAAO8K,GAAP,eAAAxV,EAAA,sEACIyV,EAAyB,QAASD,GADtC,cACXpK,EADW,yBAEVA,EAAOpG,IAAK7J,GAAUyZ,GAAazZ,EAAOA,EAAMF,SAFtC,2CAAH,wDAcSwb,GCtMdC,GAAgD,CAC3D,CACEhD,MAAO,gBACP1J,SAAU,SACV1M,KAAM,SAER,CACEoW,MAAO,mBACP1J,SAAU,SACV1M,KAAM,YAER,CACEoW,MAAO,gBACP1J,SAAU,SACV1M,KAAM,UC1EKqZ,OAtBc,EAC3BC,QACAlD,QACAtL,QAMAwO,EAAM7R,OAAS,EACb,oCACE,yBAAKrG,UAAU,cACb,+BAAQgV,IAETkD,EAAMC,MAAM,EAlBO,GAkBe7R,IAAKmB,GACtC,yBAAKjB,IAAKiB,EAAKzK,GAAIgD,UAAU,cAC3B,yBAAKA,UAAU,oBAAoB0J,EAAGjC,OAI1C,K,MCHN,MAAM2Q,WAAoBxY,YAAiD,eAAD,iCAChEyY,SAAwCrE,sBADwB,KAGxDtV,MAAe,CAC7B4Z,eAAgB,GAChBC,iBAAkB,QAClBjN,SAAU,SACVqL,MAAO,GACP6B,QAAS,CAEPjc,MAAO,GACPC,SAAU,GACVC,MAAO,KAZ6D,KA0BjEoD,OAAS,KAAO,MACbmB,EAAMlB,KAAKC,MAAXiB,EACR,OACE,kBAAC,GAAD,CACEhB,UAAU,cACVG,MAAOa,EAAE,wBACTsS,SAAUxT,KAAKsG,SACfuN,cAAe7T,KAAK6T,eAEnB7T,KAAK2Y,eACL3Y,KAAK4Y,kBApC4D,KAyChE/E,cAAgB,KAAO,MACrB3S,EAAMlB,KAAKC,MAAXiB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,iBACTL,KAAK,UACLV,KAAK,SACLrB,KAAK,WAEP,kBAACqC,EAAD,CAAcL,QAASd,KAAKC,MAAMoT,YAnDgC,KAwDhEsF,aAAe,KAAO,MACpBzX,EAAMlB,KAAKC,MAAXiB,EACA2V,EAAU7W,KAAKpB,MAAfiY,MACR,OACE,yBAAK3W,UAAU,cACb,2BACEhD,GAAG,cACH4B,KAAK,OACLuV,YAAanT,EAAE,6BACfoT,UAAW,IACXC,UAAW,EACXC,UAAU,EACVjT,MAAOsV,EACP3O,IAAKlI,KAAKuY,SACV9D,SAAWC,IACT1U,KAAK2U,SAAS,CAAEkC,MAAOnC,EAAE/O,OAAOpE,aAvE8B,KA8EhEqX,cAAgB,KAAO,MAAD,EACI5Y,KAAKC,MAA7B4Y,EADoB,EACpBA,SAAU5S,EADU,EACVA,OAAQ/E,EADE,EACFA,EADE,EAEoClB,KAAKpB,MAA7D4Z,EAFoB,EAEpBA,eAAgBC,EAFI,EAEJA,iBAAkBjN,EAFd,EAEcA,SAAUkN,EAFxB,EAEwBA,QACpD,OAAOR,GAAuB1R,IAAI,EAAG0O,QAAOpW,UAC1C,kBAAC,GAAD,CACE4H,IAAK5H,EACLoW,MAAOhU,EAAEgU,GACTkD,MAAOM,EAAQ5Z,GACf8K,GAAK3K,GACH,kBAAC,GAAD,CACEsG,QACGU,EAMG,KALF,kBAAC,EAAD,CACE5F,MAAOa,EAAE,cACTf,KAAK,OACLW,QAAS,IAAM+X,EAASrN,EAAU1M,EAAMG,EAAM/B,MAIpD+B,MAAOA,EACPuG,UAAW1G,EACXmG,UAAU,EACVnI,QAAS2b,IAAqB3Z,GAAQ0Z,IAAmBvZ,EAAM/B,GAC/DiI,OAAQ,IAAMnF,KAAK8Y,eAAeha,EAAMG,EAAM/B,IAC9CkI,OAAQpF,KAAK+Y,oBAtGiD,KA6GhEzS,SA7GgE,sBA6GrD,4BAAA9E,EAAA,4DACTqV,EAAU,EAAKjY,MAAfiY,OACE/B,OAAOvO,OAAS,GAFT,4BAGf,EAHe,SAGgB+P,GAAYxE,OAAO+E,GAHnC,yBAGC6B,QAHD,WAGV/D,SAHU,2DA7GqD,KAoHhEmE,eAAiB,CACvBL,EACAD,KAEAxY,KAAKC,MAAMkF,OAAOnF,KAAKpB,MAAM4M,SAAUiN,EAAkBD,GACzDxY,KAAK2U,SAAS,CACZ6D,iBACAC,sBA3HoE,KA+HhEM,cAAgB,KACtB/Y,KAAKC,MAAMmF,SACXpF,KAAK2U,SAAS,CACZ6D,eAAgB,GAChBC,iBAAkB,WAnHflH,oBACDvR,KAAKuY,SAASxD,SAChB/U,KAAKuY,SAASxD,QAAQC,QAInBvD,uBACLzR,KAAKC,MAAMmF,UAiHAhE,qBAAkBkX,ICtIlBxT,mBAhBOlG,IAAD,CACnBqH,OAAQzC,EAAa5E,KAGE2F,IAAD,CACtB8O,QAAS,IAAM9O,EAASX,KACxBiV,SAAU,CAACrN,EAAwBhG,EAAsBwT,IACvDzU,EAASgH,GAAWC,EAAUhG,EAAW,CAACwT,IAAU,GAAM,IAC5D7T,OAAQ,CAACqG,EAAwBhG,EAAsBwT,IACrDzU,EAASgH,GAAWC,EAAUhG,EAAW,CAACwT,IAAU,GAAO,IAC7D5T,OAAQ,IAAMb,EAASsL,QAMV/K,CAAuCwT,IChBtD,MAAMW,WAAwBnZ,YAAiD,eAAD,oBACpEoZ,UAAyChF,sBAD2B,KAG5DtV,MAAe,CAC7BzB,OAAQ,IAJkE,KAarE4C,OAAS,KAAO,MACbmB,EAAMlB,KAAKC,MAAXiB,EACA/D,EAAW6C,KAAKpB,MAAhBzB,OACR,OACE,kBAAC,GAAD,CACEkD,MAAOa,EAAE,wBACTsS,SAAUxT,KAAKkR,SACf2C,cAAe7T,KAAK6T,eAEpB,yBAAK3T,UAAU,cACb,2BAAOkU,QAAQ,gBAAgBlT,EAAE,cACjC,2BACEhE,GAAG,eACH4B,KAAK,WACLuV,YAAanT,EAAE,yBACfoT,UAAW,GACXC,UAAW,GACXC,UAAU,EACVjT,MAAOpE,EACP+K,IAAKlI,KAAKkZ,UACVzE,SAAWC,IACT1U,KAAK2U,SAAS,CAAExX,OAAQuX,EAAE/O,OAAOpE,cAlC+B,KA0CpEsS,cAAgB,KAAO,MACrB3S,EAAMlB,KAAKC,MAAXiB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,gBACTL,KAAK,UACLV,KAAK,SACLrB,KAAK,WAEP,kBAACqC,EAAD,CAAcL,QAASd,KAAKC,MAAMoT,YApDoC,KAyDpEnC,SAAW,KAAO,MAAD,EACOlR,KAAKC,MAA3BoT,EADe,EACfA,SACRnC,EAFuB,EACNA,UACRlR,KAAKpB,MAAMzB,QACpBkW,KArDK9B,oBACDvR,KAAKkZ,UAAUnE,SACjB/U,KAAKkZ,UAAUnE,QAAQC,SAuDd5T,qBAAkB6X,ICvDlBnU,mBAZOlG,IACb,IAGgB2F,IAAD,CACtB8O,QAAS,IAAM9O,EAASX,KACxBsN,SAAW/T,GAAmBoH,EAASsJ,GAAW1Q,MAMrC2H,CAAuCmU,I,MCqBtD,MAAME,WAAerZ,YAA+B,eAAD,oBACjClB,MAAe,CAC7Bwa,iBAAa,EACbC,iBAAa,GAHkC,KAM1C9H,kBAAoB,KACzB3P,SAAS0X,iBAAiB,UAAWtZ,KAAKuZ,YAPK,KAU1C9H,qBAAuB,KAC5B7P,SAAS4X,oBAAoB,UAAWxZ,KAAKuZ,YAXE,KAc1CE,mBAAsBC,IAC3B,MAAMC,EAAYD,EAAU/V,OACtBiW,EAAY5Z,KAAKC,MAAM0D,OACzBgW,IAAcC,GAEhB5Z,KAAK2U,SACH,CACEyE,iBAAa,EACbC,YAAaM,GAEf,KACMC,GACFjV,WAAW,KACT3E,KAAK2U,SAAS,CACZyE,YAAaQ,KAxDH,QA4ByB,KAqC1C7Z,OAAS,KAAO,MAAD,EACiBC,KAAKpB,MAAlCwa,EADY,EACZA,YAAaC,EADD,EACCA,YACf1V,EAASyV,GAAeC,EAC9B,IAAIQ,EAAQ,KAIZ,OAHIlW,IACFkW,EAlEmBlW,KACvB,OAAQA,EAAO7E,MACb,IAAK,UACH,OAAO,kBAAC,GAAiB6E,EAAO1D,OAClC,IAAK,cACH,OAAO,kBAAC,GAAD,MACT,IAAK,aACH,OAAO,kBAAC,GAAD,MACT,IAAK,aACH,OAAO,kBAAC,GAAD,MACT,IAAK,SACH,OAAO,kBAAC,GAAD,MACT,IAAK,aACH,OAAO,kBAAC,GAAD,QAqDC6Z,CAASnW,IAGjB,kBAAC,iBAAD,CACEoW,KAAMX,EACNY,QA3EkB,IA4ElBC,eAAe,GAEf,yBAAK/Z,UAAU,eAAeY,QAASd,KAAKka,gBACzCL,GACC,yBACE3Z,UAAU,eACVia,KAAK,SACLrZ,QAASd,KAAKoa,gBAEbP,MAzDoC,KAiEzCK,eAAkBxG,IAExBA,EAAM2G,kBACNra,KAAKC,MAAMqa,gBApEoC,KAuEzCF,eAAkB1G,IAExBA,EAAM2G,mBAzEyC,KA4EzCd,UAAa7E,IACD,KAAdA,EAAE6F,SACJva,KAAKC,MAAMqa,iBAKFnB,UCxGArU,mBAdUlG,IAAD,CACtB+E,OACE/E,EAAMS,OAAOxC,MAAM0J,OAAS,EACxB3H,EAAMS,OAAOxC,MAAM+B,EAAMS,OAAOxC,MAAM0J,OAAS,QAC/C,IAGoBhC,IAAD,CACzB+V,aAAc,IAAM/V,EAASX,OAMhBkB,CAA6CqU,I,OCX5D,MAAMqB,WAAiB1a,YAA0C,eAAD,oBACvDC,OAAS,IACd,yBAAKG,UAAU,YACb,kBAAC,mBAAD,KACGF,KAAKC,MAAMf,SAASsH,IAAIxG,KAAKya,iBAJ0B,KAStDA,cAAiB1V,GACvB,kBAAC,iBAAD,CACE2B,IAAK3B,EAAQ7H,GACboD,WAAW,UACX0Z,QAAS,CAAE/O,MAAO,IAAKE,KAAM,MAE7B,yBAAKjL,UAAWI,IAAW,UAAW,WAAayE,EAAQjG,OACxDkB,KAAKC,MAAMiB,EAAE6D,EAAQV,SAMfjD,qBAAkBoZ,IC7B1B,MAAME,GAAmB9b,GAC9BA,EAAMM,SAASsO,KAAK,CAACmN,EAAIC,IAAOD,EAAGnW,MAAQoW,EAAGpW,OCYjCM,mBATUlG,IAAD,CACtBM,SAAUwb,GAAgB9b,KAGA2F,IAAD,IAKZO,CAA6C0V,I,OCL5D,MAAMK,WAAY/a,YAAwB,eAAD,iCAChCyR,kBADgC,sBACZ,sBAAA/P,EAAA,sDACzB,EAAKvB,MAAM6a,cADc,2CADY,KAKhC/a,OAAS,IAEZ,yBAAKG,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6a,OAAO,EAAMrE,KAAK,iBAAiBsE,UAAW1J,KACrD,kBAAC,IAAD,CAAOyJ,OAAO,EAAMrE,KAAK,IAAIsE,UAAW9I,KACxC,kBAAC,IAAD,CAAUI,GAAG,OAEf,kBAAC,GAAD,QAMOuI,UCdA/V,mBATOlG,IAAD,IAEI2F,IAAD,CACtBuW,YAAa,IAAMvW,EAAS0O,QAMfnO,CAAuC+V,IChBtD,IAAII,GAAqC,KAEzC,MAAMC,GAAa,KACZD,KACHA,GAAgB,IAAKhX,OAAOkX,cACzBlX,OAAemX,qBAEbH,IAGHI,GAAmBC,GACvB,IAAI7Z,QAAQ,CAACC,EAAS2H,IACpB6R,KAAaG,gBAAgBC,EAAe5Z,EAAS2H,IAGnDkS,GAAkB,CAACvP,EAAiB6C,IACxC,IAAIpN,QAAQ,CAACC,EAAS2H,KACpB,MAAMmS,EAAM,IAAIC,eAChBD,EAAIE,KAAK,MAAO7M,GAAK,GACrB2M,EAAIG,aAAe,cACnBH,EAAIlC,iBACF,QACA,IAAMjQ,EAAO,IAAIK,MAAM,4CACvB,GAEF8R,EAAIlC,iBACF,OADF,sBAEE,sBAAA9X,EAAA,2EAEIE,EAFJ,SAEkB2Z,GAAgBG,EAAInQ,UAFtC,kFAII/M,QAAQC,MAAM,8CAA+C,CAC3DyN,UACA6C,QAEFxF,EAAO,IAAIK,MAAM,2CARrB,0DAWA,GAEF8R,EAAII,SAGFC,GAAmE,GAGnEC,GAAwB,uCAAG,WAC/B9P,EACA6C,GAF+B,iBAAArN,EAAA,yDAI1BqN,EAJ0B,sBAK7BvQ,QAAQ/B,MAAM,wBAAyB,CAAEyP,YACnC,IAAItC,MAAM,eANa,UAQ3BqS,EAA6B,QAC3BtV,EAAQoV,GAAoBG,UAAWrU,GAASA,EAAKkH,MAAQA,KACtD,GAVkB,iBAY7BvQ,QAAQC,MAAM,iCAAkC,CAAEyN,UAAS6C,QAC3DkN,EAASF,GAAoBzN,OAAO3H,EAAO,GAAG,GAAGsV,OAbpB,+BAgB7Bzd,QAAQC,MAAM,0BAA2B,CAAEyN,UAAS6C,QAhBvB,UAiBd0M,GAAgBvP,EAAS6C,GAjBX,QAiB7BkN,EAjB6B,sBAmB/BF,GAAoBxY,KAAK,CAAE0Y,SAAQlN,QACnCgN,GAAoBzN,OAtBe,IAEJ,kBAqBxB2N,GArBwB,4CAAH,wDA2B9B,MACE,MAAME,EAAkB,KACtBra,SAAS4X,oBAAoB,QAASyC,GACtCra,SAAS4X,oBAAoB,aAAcyC,GAC3C3d,QAAQC,MAAM,2BACd,MAAM2d,EAAUhB,KAEhB,IAAIa,EAASG,EAAQC,aAAa,EAAG,EAAG,OACpCC,EAASF,EAAQG,qBACrBD,EAAOL,OAASA,EAChBK,EAAOtX,QAAQoX,EAAQI,aACvBF,EAAOG,MAAM,IAEf3a,SAAS0X,iBAAiB,QAAS2C,GACnCra,SAAS0X,iBAAiB,aAAc2C,IAd1C,GAwBO,MAAMO,GAAUC,IACrB,IAAIC,EAAoC,KACpCC,EAA4B,KAC5BC,EAA0B,KAC1BC,EAA8B,KAC9BC,EAA4C,KAC5CC,EAAuB,EACvBC,EAAW,GACXC,GAAkB,EAEtB,MAAMC,EAAkB,KACtB,IAAKN,EAAO,CACV,MAAMV,EAAUhB,KAChB0B,EAAQV,EAAQI,YAEhBK,EAAWT,EAAQiB,aACnBR,EAASS,KAAK7b,MAAQ,EACtBob,EAAS7X,QAAQ8X,GACjBA,EAAQD,EAERD,EAAeR,EAAQmB,iBACvBX,EAAaY,QAAU,IAGvBZ,EAAa5X,QAAQ8X,GACrBA,EAAQF,EAEV,OAAOE,GAmBHxQ,EAAI,uCAAG,WACXmR,EACAvR,EACAwR,EACAC,GAJW,SAAAjc,EAAA,sEAMLoO,IANK,uBAOKkM,GAAyB9P,EAASwR,GAPvC,OAOXX,EAPW,OAQXve,QAAQC,MAAM,oBAAqB,CAAEgf,gBAAevR,UAASwR,aAC7DR,EAAWhR,EACXiR,EAAiBM,EACjBT,EAAc5B,KAAamB,qBAC3BS,EAAYf,OAASc,EACrBC,EAAYY,MAAO,EACnBZ,EAAYa,UAAY,EACxBb,EAAYc,QAAU,EACtBd,EAAYe,QAAU,KACpBvf,QAAQC,MAAM,uBACdse,EAAU,KACVC,EAAc,KACVL,GACFQ,KAGJH,EAAYgB,aAAavc,MAAQ,EACjCub,EAAYhY,QAAQoY,KACpBJ,EAAYP,MAAM,EAAGkB,GACrBV,EAAuB7B,KAAa6C,YA3BzB,4CAAH,4DA8BJnO,EAAI,uCAAG,sBAAApO,EAAA,+EACX,IAAIC,QAASC,IACP,OAASob,GACXxe,QAAQC,MAAM,qBACdue,EAAYe,QAAU,KACpBvf,QAAQC,MAAM,+BACdmD,KAEFob,EAAYlN,OACZkN,EAAc,KACdC,EAAuB,EACvBE,GAAkB,GAElBvb,OAbO,2CAAH,qDAiBV,MAAO,CACLgb,eACAC,WACAvM,kBAhEwB,IAAM4M,EAiE9BpM,uBA5D6B,IACzBiM,GAAWC,GAEV5B,KAAa6C,YAAchB,GAAwBF,EAAQvY,SAGzD,EAuDPgM,wBAhE8B,IAAM2M,EAiEpC1M,UArEgB,MAAQuM,EAsExB1Q,OACAwD,S,aCxMW,IACboO,OAAQ,CACNC,IAAK,MACLC,aAAc,gBAEhBC,MAAO,CACLC,OAAQ,CACNC,QAAS,mBAEXzgB,KAAM,OACN0gB,mBAAoB,uCACpBxZ,QAAS,UACTyZ,WAAY,aACZC,OAAQ,gBACRC,WAAY,aACZC,cAAe,oBACfC,cAAe,gBACfC,eAAgB,aAChBC,QAAS,UACTC,gBAAiB,kBACjBC,iBAAkB,eAClBxe,KAAM,YACNye,kBAAmB,oBACnBC,mBAAoB,iBACpB9hB,OAAQ,eAEV+hB,MAAO,CACLd,OAAQ,CACNC,QAAS,kBACTpY,OAAQ,kBAEVkZ,MAAO,mBACPC,cAAe,8CACfC,aAAc,2CACdC,aAAc,0CACdC,UAAW,8BACXf,OAAQ,gBACRgB,MAAO,iDACPrU,KAAM,YACNsU,gBAAiB,cACjB/Y,IAAK,WACLgZ,yBAA0B,yCAC1BC,QAAS,aACT1Z,OAAQ,2BACR6Y,gBAAiB,kBACjBc,kBAAmB,eACnBrf,KAAM,YACNsf,cAAe,gBACfC,eAAgB,iBAChB9iB,KAAM,OACNgiB,kBAAmB,oBACnBe,OAAQ,SACRC,SAAU,4BAEZxjB,OAAQ,CACNyjB,GAAI,gBACJC,IAAK,MACLhV,OAAQ,SACR4G,OAAQ,eACRqO,mBAAoB,YACpBC,cAAe,eACfvI,OAAQ,SACRE,UAAW,YACXnL,OAAQ,UAEVrN,OAAQ,CACN6e,OAAQ,CACNiC,yBAA0B,iCAC1BC,yBAA0B,+BAE5BC,SAAU,WACVC,QAAS,UACTpU,KAAM,OACNtP,QAAS,UACT8S,KAAM,QAER5E,OAAQ,SACRyV,2BAA4B,uCC7Ef,IACbzC,OAAQ,CACNC,IAAK,MACLC,aAAc,kBAEhBC,MAAO,CACLC,OAAQ,CACNC,QAAS,8BAEXzgB,KAAM,cACN0gB,mBAAoB,0DACpBxZ,QAAS,eACTyZ,WAAY,YACZC,OAAQ,0BACRC,WAAY,oBACZC,cAAe,+BACfC,cAAe,6BACfC,eAAgB,iBAChBC,QAAS,cACTC,gBAAiB,sBACjBC,iBAAkB,SAClBxe,KAAM,MACNye,kBAAmB,yBACnBC,mBAAoB,YACpB9hB,OAAQ,UAEV+hB,MAAO,CACLd,OAAQ,CACNC,QAAS,wBACTpY,OAAQ,+BAEVkZ,MAAO,8BACPC,cAAe,kEACfC,aAAc,uDACdC,aAAc,2DACdC,UAAW,mDACXf,OAAQ,qBACRgB,MAAO,gEACPrU,KAAM,mBACNsU,gBAAiB,UACjB/Y,IAAK,OACLiZ,QAAS,gBACTD,yBACE,iEACFzZ,OAAQ,iDACR6Y,gBAAiB,sBACjBc,kBAAmB,SACnBrf,KAAM,MACNvD,KAAM,QACN6iB,cAAe,0BACfC,eAAgB,gCAChBd,kBAAmB,wBACnBe,OAAQ,mBACRC,SAAU,kDAEZxjB,OAAQ,CACNyjB,GAAI,iBACJC,IAAK,UACLhV,OAAQ,YACR4G,OAAQ,yBACRqO,mBAAoB,eACpBC,cAAe,yBACfvI,OAAQ,SACRE,UAAW,YACXnL,OAAQ,UAEVrN,OAAQ,CACN6e,OAAQ,CACNiC,yBAA0B,mDAC1BC,yBAA0B,iDAE5BC,SAAU,yBACVC,QAAS,iBACTpU,KAAM,OACNtP,QAAS,sBACT8S,KAAM,cAER5E,OAAQ,UACRyV,2BAA4B,wDCtEvB,MAKMC,GAAW,uCAAG,sBAAAlf,EAAA,+EACzB,IAAIC,QAAQ,CAACC,EAAS2H,KACpB/K,QAAQC,MAAM,2BAA4B,CACxCwW,QAAS4L,UAAUC,UAAaD,UAAkBE,eAEpDC,KAAQC,IAAIC,KAAkBC,KAC5B,CACEC,YAAa,KACbC,IAAKR,UAAUC,UAAaD,UAAkBE,aAC9CO,UAAW,CACTC,GAAI,CAAEC,YAAaD,IACnB,QAAS,CAAEC,YAAaD,IACxBE,GAAI,CAAED,YAAaC,IACnB,QAAS,CAAED,YAAaC,KAE1BC,cAAe,CACbC,aAAa,EACbC,OAAQ,CAACngB,EAAOmgB,EAAQP,IAGf5f,IAIZhF,IACKA,GAAO8M,EAAO9M,GAClBmF,SA1BmB,2CAAH,qD,QCId,uCAAG,oCAAAF,EAAA,6DACLmgB,EAC+DC,UAE/DhW,EAAS0K,GACTlH,EAAcoN,IAAO,GACrB3Q,EAAgB2Q,IAAO,GAC7BkE,KAEMmB,EAAQC,sBACZpjB,EACAijB,EACEI,0BACEC,IAAMC,kBAAkB,CAAErW,SAAQwD,cAAavD,qBAb1C,kBAoBJgW,GApBI,2CAAH,qDAyBVZ,GAAOiB,KAAML,IACXM,SACE,gBAAC,IAAD,CAAUN,MAAOA,GACf,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAOnL,KAAK,IAAIsE,UAAWH,OAG/BjZ,SAASwgB,eAAe,Y","file":"static/js/main.7d9fdec1.chunk.js","sourcesContent":["import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { MediasAction } from \"../actions/medias\";\nimport { Track, Album, Playlist } from \"../utils/medias\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  medias: {\n    // keys are MediaType\n    album: { [id: string]: Album };\n    playlist: { [id: string]: Playlist };\n    track: { [id: string]: Track };\n  };\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  medias: {\n    // keys are MediaType\n    album: {},\n    playlist: {},\n    track: {},\n  },\n};\n\n// ------------------------------------------------------------------\n\nexport const mediasReducer: Reducer<State, MediasAction> = (\n  state = INITIAL_STATE,\n  action: MediasAction\n): State => {\n  switch (action.type) {\n    case \"medias/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null,\n      };\n    case \"medias/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null,\n      };\n    }\n    case \"medias/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    case \"medias/SET\": {\n      const copy = {\n        ...state,\n        medias: {\n          album: { ...state.medias.album },\n          playlist: { ...state.medias.playlist },\n          track: { ...state.medias.track },\n        },\n      };\n      for (const media of action.payload) {\n        copy.medias[media.type][media.id] = media;\n      }\n      return copy;\n    }\n    case \"medias/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { MessagesAction } from \"../actions/messages\";\nimport { Message } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type State = Message[];\n\nexport const INITIAL_STATE: State = [];\n\n// ------------------------------------------------------------------\n\nexport const messagesReducer: Reducer<State, MessagesAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"message/ADD\":\n      return [action.payload, ...state];\n    case \"message/REMOVE\":\n      return state.filter(other => other.id !== action.payload);\n    case \"message/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { ModalsAction, ModalPrereq } from \"../actions/modals\";\n\n// ------------------------------------------------------------------\n\nexport type ModalsState = {\n  stack: ModalPrereq[];\n};\n\n// ------------------------------------------------------------------\n\nexport const initialState: ModalsState = {\n  stack: []\n};\n\n// ------------------------------------------------------------------\n\nexport const modalsReducer: Reducer<ModalsState, ModalsAction> = (\n  state = initialState,\n  action\n): ModalsState => {\n  switch (action.type) {\n    case \"modals/OPEN\":\n      return {\n        ...state,\n        stack: [action.payload]\n      };\n    case \"modals/CLOSE\":\n      return {\n        ...state,\n        stack: []\n      };\n    case \"modals/PUSH\":\n      return {\n        ...state,\n        stack: [...state.stack, action.payload]\n      };\n    case \"modals/POP\":\n      const copy = [...state.stack];\n      copy.pop();\n      return {\n        ...state,\n        stack: copy\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { PlayerAction } from \"../actions/player\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  playing: boolean;\n  track_percent: number;\n};\n\nexport const INITIAL_STATE: State = {\n  playing: false,\n  track_percent: 0,\n};\n\n// ------------------------------------------------------------------\n\nexport const playerReducer: Reducer<State, PlayerAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"player/SET\":\n      return { ...state, ...action.payload };\n    case \"player/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { RoomAction } from \"../actions/room\";\nimport { RoomAccess, RoomInfo } from \"../utils/rooms\";\nimport { CombinedColor } from \"../utils/colorpicker\";\nimport { FirebaseRoom } from \"../utils/firebase\";\nimport { MediaAccess } from \"../utils/medias\";\n\n// ------------------------------------------------------------------\n\nexport type RoomData = {\n  room: ReturnType<typeof FirebaseRoom> | null;\n  access: RoomAccess;\n  color: CombinedColor;\n  info: RoomInfo | null;\n  medias: MediaAccess[];\n  playing: boolean;\n  position: number;\n};\n\nexport type State = RoomData & {\n  fetching: boolean;\n  error: null | AxiosError;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  room: null,\n  access: { id: \"\", secret: \"\" },\n  color: { fg: { r: 0, g: 0, b: 0 }, bg: { r: 255, g: 255, b: 255 } },\n  info: null,\n  medias: [],\n  playing: false,\n  position: 0,\n};\n\n// ------------------------------------------------------------------\n\nexport const roomReducer: Reducer<State, RoomAction> = (\n  state = INITIAL_STATE,\n  action: RoomAction\n): State => {\n  switch (action.type) {\n    case \"room/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null,\n      };\n    case \"room/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null,\n      };\n    }\n    case \"room/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    case \"room/SET\": {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case \"room/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { UserAction } from \"../actions/user\";\nimport {\n  deleteUserAccess,\n  saveUserAccess,\n  loadUserAccess,\n  UserAccess,\n  UserInfo,\n} from \"../utils/users\";\nimport { FirebaseUser } from \"../utils/firebase\";\n\n// ------------------------------------------------------------------\n\nexport type UserData = {\n  user: ReturnType<typeof FirebaseUser> | null;\n  access: UserAccess;\n  info: UserInfo | null;\n};\n\nexport type State = UserData & {\n  fetching: boolean;\n  error: null | AxiosError;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  user: null,\n  access: loadUserAccess(),\n  info: null,\n};\n\n// ------------------------------------------------------------------\n\nexport const userReducer: Reducer<State, UserAction> = (\n  state = INITIAL_STATE,\n  action: UserAction\n): State => {\n  switch (action.type) {\n    case \"user/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null,\n      };\n    case \"user/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null,\n      };\n    }\n    case \"user/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    case \"user/SET\": {\n      const copy = {\n        ...state,\n        ...action.payload,\n      };\n      saveUserAccess(copy.access);\n      return copy;\n    }\n    case \"user/RESET\":\n      deleteUserAccess();\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","export type UserInfo = {\n  name: string;\n  online: boolean;\n  room_id: string;\n  status: string;\n  timestamp: number;\n};\n\nexport type UserAccess = {\n  id: string;\n  secret: string;\n};\n\n// ------------------------------------------------------------------\n\nexport const loadUserAccess = (): UserAccess => {\n  const res: UserAccess = {\n    id: \"\",\n    secret: \"\",\n  };\n  const s = localStorage.getItem(\"U\");\n  if (s) {\n    try {\n      const d = JSON.parse(atob(s));\n      if (typeof d.i === \"string\" && typeof d.s === \"string\") {\n        res.id = d.i;\n        res.secret = d.s;\n        console.debug(\"Loaded user access: \", res);\n      }\n    } catch (err) {}\n  }\n  return res;\n};\n\nexport const deleteUserAccess = () => {\n  localStorage.removeItem(\"U\");\n};\n\nexport const saveUserAccess = ({ id, secret }: UserAccess) => {\n  localStorage.setItem(\n    \"U\",\n    btoa(\n      JSON.stringify({\n        i: id,\n        s: secret,\n      })\n    )\n  );\n};\n","import { combineReducers } from \"redux\";\nimport { mediasReducer as medias } from \"./medias\";\nimport { messagesReducer as messages } from \"./messages\";\nimport { modalsReducer as modals } from \"./modals\";\nimport { playerReducer as player } from \"./player\";\nimport { roomReducer as room } from \"./room\";\nimport { userReducer as user } from \"./user\";\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const rootReducer = combineReducers({\n  medias,\n  messages,\n  modals,\n  player,\n  room,\n  user,\n});\n","import React, { Component } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport classNames from \"classnames\";\n//\nimport \"./Icon.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  icon: string;\n  size?: \"S\" | \"M\" | \"L\";\n  title?: string;\n};\n\nclass Icon extends Component<Props> {\n  public render = () => {\n    const { className, color, icon, size = \"M\", title } = this.props;\n    return (\n      <FontAwesome\n        className={classNames(\"Icon\", className, size)}\n        name={icon}\n        style={{ color }}\n        title={title}\n      />\n    );\n  };\n}\n\nexport default Icon;\n\n// ------------------------------------------------------------------\n\nexport const LoadingIcon = ({ size }: { size?: \"S\" | \"M\" | \"L\" }) => (\n  <Icon\n    className=\"rotating\"\n    icon=\"circle-o-notch\"\n    size={size}\n    title=\"Loading\"\n  />\n);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"./Icon\";\nimport \"./IconButton.scss\";\n\n// ------------------------------------------------------------------\n\ntype ButtonType = \"button\" | \"submit\";\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  disabled?: boolean;\n  displayTitle?: boolean;\n  icon: string;\n  kind?: \"default\" | \"primary\" | \"danger\" | \"special\";\n  onClick?: () => void;\n  size?: \"S\" | \"M\" | \"L\";\n  title: string;\n  type?: ButtonType;\n};\n\nclass IconButton extends Component<Props> {\n  public render = () => {\n    const {\n      className,\n      color,\n      disabled = false,\n      displayTitle = false,\n      icon,\n      kind = \"default\",\n      onClick,\n      size,\n      title,\n      type = \"button\",\n    } = this.props;\n    return (\n      <button\n        type={type}\n        aria-label={title}\n        className={classNames(\"IconButton\", className, kind, size, {\n          clickable: !disabled && (!!onClick || type === \"submit\"),\n        })}\n        onClick={disabled ? void 0 : onClick}\n        title={title}\n      >\n        <Icon color={color} icon={icon} size={size} />\n        {displayTitle && (\n          <div className={classNames(\"IconButtonTitle\", size)}>{title}</div>\n        )}\n      </button>\n    );\n  };\n}\n\nexport default IconButton;\n\n// ------------------------------------------------------------------\n\ntype CancelButtonProps = {\n  onClick: () => void;\n};\n\nclass _CancelButton extends Component<CancelButtonProps & WithTranslation> {\n  public render = () => {\n    const { onClick, t } = this.props;\n    return (\n      <IconButton\n        onClick={onClick}\n        title={t(\"cancel\")}\n        kind=\"default\"\n        icon=\"ban\"\n      />\n    );\n  };\n}\n\nexport const CancelButton = withTranslation()(_CancelButton);\n","import { createHashHistory } from \"history\";\n\nexport default createHashHistory();\n","// https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\nexport const copyToClipboard = async (value: string): Promise<void> =>\n  await new Promise(resolve => {\n    const elem = document.createElement(\"textarea\");\n    elem.value = value;\n    elem.setAttribute(\"readonly\", \"\");\n    elem.style.position = \"absolute\";\n    elem.style.left = \"-9999px\";\n\n    document.body.appendChild(elem);\n    const selection = document.getSelection();\n    if (selection !== null) {\n      const selected =\n        selection.rangeCount > 0 ? selection.getRangeAt(0) : false;\n      elem.select();\n      document.execCommand(\"copy\");\n      if (selected !== false) {\n        selection.removeAllRanges();\n        selection.addRange(selected);\n      }\n    }\n    document.body.removeChild(elem);\n    resolve();\n  });\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Room/Head\";\nimport history from \"../../utils/history\";\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport \"./Head.scss\";\n\n// ------------------------------------------------------------------\n\nclass Head extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const { room, t } = this.props;\n    return (\n      <div className=\"Head\">\n        <div className=\"RoomLink\">\n          <IconButton\n            icon=\"link\"\n            onClick={this.onCopyLink}\n            size=\"M\"\n            title={t(\"rooms.copy_link\")}\n          />\n        </div>\n        <div className=\"RoomName\">{room ? room.name : \"\"}</div>\n        <div className=\"RoomExit\">\n          <IconButton\n            onClick={this.onExit}\n            icon=\"sign-out\"\n            size=\"M\"\n            title={t(\"rooms.exit\")}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyLink = async () => {\n    const { onMessage, t } = this.props;\n    await copyToClipboard(document.location.href.split(\"?\")[0]);\n    onMessage(t(\"rooms.link_copied_to_clipboard\"));\n  };\n\n  private onExit = () => {\n    const { onConfirm, t } = this.props;\n    onConfirm(t(\"rooms.confirm_exit\"), () => {\n      history.push(\"/\");\n    });\n  };\n}\n\nexport default withTranslation()(Head);\n","import { RootState } from \"../reducers\";\n\nexport const extractRoom = (state: RootState) => state.room.info;\n\nexport const isRoomLoaded = (state: RootState) => !!state.room.room;\n\nexport const isRoomLocked = (state: RootState) => !state.room.access.secret;\n","import { AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../reducers\";\nimport { Player } from \"../utils/player\";\nimport { DeezerApi } from \"../utils/deezer\";\n\n// ------------------------------------------------------------------\n\nexport type Action<T extends string> = {\n  type: T;\n};\n\nexport type ActionWithPayload<T extends string, P> = {\n  type: T;\n  payload: P;\n};\n\nexport type Extended = {\n  deezer: ReturnType<typeof DeezerApi>;\n  previewPlayer: ReturnType<typeof Player>;\n  queuePlayer: ReturnType<typeof Player>;\n};\n\nexport type Dispatch = ThunkDispatch<RootState, Extended, AnyAction>;\n\nexport type AsyncAction = ThunkAction<void, RootState, Extended, AnyAction>;\n\nexport function createAction<T extends string>(type: T): Action<T>;\n\nexport function createAction<T extends string, P>(\n  type: T,\n  payload: P\n): ActionWithPayload<T, P>;\n\nexport function createAction<T extends string, P>(type: T, payload?: P) {\n  return payload === void 0 ? { type } : { type, payload };\n}\n","import { createAction, AsyncAction } from \".\";\nimport { ConfirmModalProps } from \"../components/Modals/ConfirmModal\";\n\n// ------------------------------------------------------------------\n\nexport type ModalPrereqT<T extends string, P> = {\n  type: T;\n  props: P;\n};\n\nexport type ModalPrereq =\n  | ModalPrereqT<\"Confirm\", ConfirmModalProps>\n  | ModalPrereqT<\"ConnectUser\", null>\n  | ModalPrereqT<\"CreateRoom\", null>\n  | ModalPrereqT<\"CreateUser\", null>\n  | ModalPrereqT<\"Search\", null>\n  | ModalPrereqT<\"UnlockRoom\", null>;\n\n// ------------------------------------------------------------------\n\nexport type ModalsAction =\n  | ReturnType<typeof closeModal>\n  | ReturnType<typeof openModal>\n  | ReturnType<typeof popModal>\n  | ReturnType<typeof pushModal>;\n\n// ------------------------------------------------------------------\n\nexport const openModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/OPEN\", prereq);\n\nexport const closeModal = () => createAction(\"modals/CLOSE\");\n\n// ------------------------------------------------------------------\n\nexport const pushModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/PUSH\", prereq);\n\nexport const popModal = () => createAction(\"modals/POP\");\n\n// ------------------------------------------------------------------\n\nexport const confirmModal = (\n  question: string,\n  onConfirmed: () => void,\n  onCanceled?: () => void\n): AsyncAction => async () => {\n  // TODO: open custom ConfirmModal instead of system popup\n  if (window.confirm(question)) {\n    onConfirmed();\n  } else if (onCanceled) {\n    onCanceled();\n  }\n};\n","import { createAction, AsyncAction } from \".\";\nimport { Message, MessageType } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type MessagesAction =\n  | ReturnType<typeof addMessage>\n  | ReturnType<typeof clearMessages>\n  | ReturnType<typeof removeMessage>;\n\nconst addMessage = (message: Message) => createAction(\"message/ADD\", message);\n\nconst removeMessage = (id: number) => createAction(\"message/REMOVE\", id);\n\nconst clearMessages = () => createAction(\"message/RESET\");\n\n// ------------------------------------------------------------------\n\nlet MESSAGE_ID_GENERATOR: number = 0;\n\nexport const displayMessage = (\n  type: MessageType,\n  text: string,\n  duration: number = 5000\n): AsyncAction => (dispatch): any => {\n  const id = MESSAGE_ID_GENERATOR++;\n  dispatch(addMessage({ id, stamp: new Date().getTime(), text, type }));\n  setTimeout(() => dispatch(removeMessage(id)), duration);\n};\n\nexport const displayError = (text: string): AsyncAction => (dispatch): any => {\n  dispatch(displayMessage(\"error\", text, 3000));\n};\n\nexport const displayInfo = (text: string) => displayMessage(\"info\", text, 3000);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Head from \"../../components/Room/Head\";\nimport { extractRoom } from \"../../selectors/room\";\nimport { confirmModal } from \"../../actions/modals\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  room: extractRoom(state),\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onConfirm: (question: string, onConfirmed: () => void) => {\n    dispatch(confirmModal(question, onConfirmed));\n  },\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message)),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Head);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"../Common/Icon\";\nimport \"./Cover.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  image: string;\n  onPlay: () => void;\n  onStop: () => void;\n  playable: boolean;\n  playing: boolean;\n};\n\nclass Cover extends Component<Props & WithTranslation> {\n  public render = () => {\n    const { playable, playing, image, onPlay, onStop, t } = this.props;\n    if (playable) {\n      return (\n        <div\n          className={classNames(\"Cover\", { playable, playing })}\n          style={image ? { backgroundImage: `url('${image}')` } : {}}\n          onClick={!playing ? onPlay : onStop}\n        >\n          {!playing ? (\n            <Icon icon=\"play\" title={t(\"player.play\")} />\n          ) : (\n            <Icon icon=\"pause\" title={t(\"player.stop\")} />\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={classNames(\"Cover\", { playing })}\n          style={image ? { backgroundImage: `url('${image}')` } : {}}\n        >\n          {playing ? <Icon icon=\"music\" title={t(\"player.playing\")} /> : null}\n        </div>\n      );\n    }\n  };\n}\n\nexport default withTranslation()(Cover);\n","import React, { ReactNode, Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport Cover from \"./Cover\";\nimport { LoadingIcon } from \"../Common/Icon\";\nimport {\n  Album,\n  Playlist,\n  Track,\n  Media as MediaData,\n  MediaType,\n} from \"../../utils/medias\";\nimport \"./Medias.scss\";\n\n// ------------------------------------------------------------------\n\ntype MediaProps = {\n  actions?: ReactNode;\n  media: MediaData | null;\n  mediaType: MediaType;\n  playable: boolean;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n};\n\n// ------------------------------------------------------------------\n\nclass _Media extends Component<MediaProps & WithTranslation> {\n  public render = () => {\n    const {\n      actions,\n      media,\n      mediaType,\n      playable,\n      playing,\n      onPlay,\n      onStop,\n      t,\n    } = this.props;\n    if (!media) {\n      return (\n        <div className=\"Media\">\n          {actions}\n          <Cover\n            playable={playable}\n            playing={playing}\n            image={\"\"}\n            onPlay={onPlay}\n            onStop={onStop}\n          />\n          <div className=\"Metas\">\n            <LoadingIcon size=\"M\" />\n          </div>\n        </div>\n      );\n    } else if (mediaType === \"album\") {\n      const album = media as Album;\n      return (\n        <div className=\"Media Album\">\n          {actions}\n          <Cover\n            playable={playable}\n            playing={playing}\n            image={album.cover_small}\n            onPlay={onPlay}\n            onStop={onStop}\n          />\n          <div className=\"Metas\">\n            <div className=\"Meta AlbumTitle\">\n              <a href={album.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {album.title}\n              </a>\n            </div>\n            <div className=\"Meta AlbumArtist\">\n              <a\n                href={album.artist.link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"medias.by\", { artist: album.artist.name })}\n              </a>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (mediaType === \"playlist\") {\n      const playlist = media as Playlist;\n      return (\n        <div className=\"Media Playlist\">\n          {actions}\n          <Cover\n            playable={playable}\n            playing={playing}\n            image={playlist.picture_small}\n            onPlay={onPlay}\n            onStop={onStop}\n          />\n          <div className=\"Metas\">\n            <div className=\"Meta PlaylistTitle\">\n              <a href={media.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {media.title}\n              </a>\n            </div>\n            <div className=\"Meta PlaylistCreator\">\n              <a\n                href={playlist.user.link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"medias.by\", { artist: playlist.user.name })}\n              </a>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (mediaType === \"track\") {\n      const track = media as Track;\n      return (\n        <div className=\"Media Track\">\n          {actions}\n          <Cover\n            playable={playable && !!track.preview}\n            playing={playing}\n            image={track.album.cover_small}\n            onPlay={onPlay}\n            onStop={onStop}\n          />\n          <div className=\"Metas\">\n            <div className=\"Meta TrackTitle\">\n              <a href={track.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {track.title}\n              </a>\n            </div>\n            <div className=\"Meta TrackArtist\">\n              <a\n                href={track.artist.link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"medias.by\", { artist: track.artist.name })}\n              </a>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n}\n\nexport default withTranslation()(_Media);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport Media from \"./Medias\";\nimport IconButton from \"../Common/IconButton\";\nimport { Media as MediaData, MediaType } from \"../../utils/medias\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  locked: boolean;\n  media: MediaData | null; // if null : stiil loading or cannot be loaded or to reload later because of rate limit\n  mediaType: MediaType;\n  playing: boolean;\n  onPlay: () => void;\n  onRemove: () => void;\n  onStop: () => void;\n};\n\nclass QueueItem extends Component<Props & WithTranslation> {\n  public render = () => {\n    const {\n      locked,\n      media,\n      mediaType,\n      playing,\n      onPlay,\n      onRemove,\n      onStop,\n      t,\n    } = this.props;\n    return (\n      <div className=\"QueueItem\">\n        <Media\n          media={media}\n          mediaType={mediaType}\n          playable={!!media && !locked}\n          playing={playing}\n          onPlay={onPlay}\n          onStop={onStop}\n          actions={\n            !locked ? (\n              <IconButton\n                title={t(\"medias.remove\")}\n                icon=\"trash\"\n                onClick={onRemove}\n              />\n            ) : null\n          }\n        />\n      </div>\n    );\n  };\n}\n\nexport default withTranslation()(QueueItem);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Room/Queue\";\nimport IconButton from \"../Common/IconButton\";\nimport { LoadingIcon } from \"../Common/Icon\";\nimport QueueItem from \"./QueueItem\";\nimport \"./Queue.scss\";\n\n// ------------------------------------------------------------------\n\nclass Queue extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      loaded,\n      locked,\n      medias,\n      playing,\n      playingIndex,\n      onPlay,\n      onRemove,\n      onSearch,\n      onStop,\n      t,\n    } = this.props;\n    return (\n      <div className=\"Queue\">\n        {medias.length > 0 ? (\n          medias.map((media, index) => (\n            <QueueItem\n              key={index}\n              locked={locked}\n              playing={playing && playingIndex === index}\n              media={media}\n              mediaType=\"track\"\n              onPlay={() => onPlay(index)}\n              onRemove={() => onRemove(index)}\n              onStop={onStop}\n            />\n          ))\n        ) : (\n          <div className=\"QueueEmpty\">\n            {loaded ? (\n              <>\n                <IconButton\n                  title=\"...\"\n                  icon=\"shower\"\n                  onClick={onSearch}\n                  size=\"L\"\n                />\n                <span onClick={onSearch}>{t(\"rooms.empty\")}</span>\n              </>\n            ) : (\n              <>\n                <LoadingIcon size=\"L\" />\n                <span>{t(\"rooms.loading\")}</span>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n}\n\nexport default withTranslation()(Queue);\n","import { RootState } from \"../reducers\";\nimport { Media, MediaAccess } from \"../utils/medias\";\n\n// ------------------------------------------------------------------\n\nexport const extractMedias = (\n  state: RootState,\n  mediaAccesses: MediaAccess[]\n) => {\n  const res: Array<Media | null> = [];\n  const {\n    medias: { medias },\n  } = state;\n  for (const mediaAccess of mediaAccesses) {\n    const media = medias[mediaAccess.type][mediaAccess.id];\n    if (!!media) {\n      res.push(media);\n    } else {\n      res.push(null); // Stiil loading or cannot be loaded or to reload later because of rate limit\n    }\n  }\n  return res;\n};\n","const config = {\n  databaseURL: process.env.REACT_APP_FIREBASE_URL\n};\n\nconsole.debug(config);\n\nexport default config;\n","export const sleep = (delay: number) =>\n  new Promise((resolve) => setTimeout(resolve, delay));\n\nexport const onlyUnique = <T>(value: T, index: number, self: T[]) =>\n  self.indexOf(value) === index;\n\nexport const getFromDict = <T>(dict: { [id: string]: T }, id: string) => {\n  const value = dict[id];\n  return !value ? void 0 : value;\n};\n\nexport const getFromList = <T extends { id: string }>(\n  list: T[],\n  id: string\n) => {\n  return list.find((item) => item.id === id);\n};\n\nexport const getFromDictOrList = <T extends { id: string }>(\n  dict: { [id: string]: T },\n  list: T[],\n  id: string\n) => getFromDict(dict, id) || getFromList(list, id);\n","import * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n//\nimport firebaseConfig from \"../config/firebase\";\nimport { RoomInfo } from \"./rooms\";\nimport { UserInfo } from \"./users\";\nimport { sleep } from \".\";\n\n// ------------------------------------------------------------------\n\ntype FirebaseCB = (eventType: firebase.database.DataSnapshot) => void;\n\n// ------------------------------------------------------------------\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseDatabase = firebase.database(firebaseApp);\n\n// ------------------------------------------------------------------\n\nconst MEMBERS = firebaseDatabase.ref(\"members\");\nconst ROOMS = firebaseDatabase.ref(\"rooms\");\nconst USERS = firebaseDatabase.ref(\"users\");\n\n// ------------------------------------------------------------------\n\nexport const FirebaseRoom = (id: string, secret?: string) => {\n  const _room = ROOMS.child(id);\n  const _info = _room.child(\"info\");\n  const _members = MEMBERS.child(id);\n  let _secret = secret || \"\";\n  console.debug(\"INIT SECRET\", _secret);\n  let _values: RoomInfo = {\n    name: \"dummy\",\n    playing: false,\n    queue: {},\n    queue_position: 0,\n    timestamp: 0,\n    type: \"dj\",\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    console.debug(\"[Firebase] Setting room secret\", {\n      oldSecret: _secret,\n      newSecret,\n    });\n    _secret = newSecret;\n  };\n\n  const wait = async (): Promise<RoomInfo> =>\n    new Promise((resolve, reject) => {\n      console.debug(\"[Firebase] Waiting room...\");\n      _info.once(\"value\", (snapshot) => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"rooms.errors.invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    console.debug(\"[Firebase] Subscribing room...\");\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    console.debug(\"[Firebase] Unsubscribing room...\");\n    _info.off(\"value\", cb);\n  };\n\n  const subscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    console.debug(\"[Firebase] Subscribing members...\");\n    _members.on(\"child_added\", cbAdded);\n    _members.on(\"child_removed\", cbRemoved);\n  };\n\n  const unsubscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    console.debug(\"[Firebase] Unsubscribing members...\");\n    _members.off(\"child_added\", cbAdded);\n    _members.off(\"child_removed\", cbRemoved);\n  };\n\n  const update = async ({\n    name,\n    playing,\n    queue,\n    queue_position,\n  }: Partial<\n    Pick<RoomInfo, \"name\" | \"playing\" | \"queue\" | \"queue_position\">\n  >) => {\n    console.debug(\"[Firebase] Updating room...\", {\n      name,\n      playing,\n      queue,\n      queue_position,\n    });\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (playing !== void 0) {\n      _values.playing = playing;\n    }\n    if (queue !== void 0) {\n      _values.queue = queue;\n    }\n    if (queue_position !== void 0) {\n      _values.queue_position = queue_position;\n    }\n    await _room.set({\n      info: {\n        ..._values,\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n  };\n\n  return {\n    getInfo,\n    id,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    subscribeMembers,\n    unsubscribeInfo,\n    unsubscribeMembers,\n    update,\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const FirebaseUser = (id: string, secret?: string) => {\n  const _user = USERS.child(id);\n  const _info = _user.child(\"info\");\n  let _membership: firebase.database.Reference | null = null;\n  let _secret = secret || \"\";\n  let _values: UserInfo = {\n    name: \"dummy\",\n    online: false,\n    room_id: \"\",\n    status: \"\",\n    timestamp: 0,\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    console.debug(\"[Firebase] Setting user secret...\", {\n      oldSecret: _secret,\n      newSecret,\n    });\n    _secret = newSecret;\n  };\n\n  const wait = async (): Promise<UserInfo> =>\n    new Promise((resolve, reject) => {\n      console.debug(\"[Firebase] Waiting user...\");\n      _info.once(\"value\", (snapshot) => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"users.errors.invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    console.debug(\"[Firebase] Subscribing user...\");\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    console.debug(\"[Firebase] Unsubscribing user...\");\n    _info.off(\"value\", cb);\n  };\n\n  const update = async ({\n    name,\n    room_id,\n  }: Partial<Pick<UserInfo, \"name\" | \"room_id\">>) => {\n    console.debug(\"[Firebase] Updating user...\", { name, room_id });\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (room_id !== void 0) {\n      _values.room_id = room_id;\n    }\n    await _user.set({\n      info: {\n        ..._values,\n        online: true,\n        status: \"online\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n    installDisconnect();\n  };\n\n  const installDisconnect = () => {\n    console.debug(\"[Firebase] Installing user disconnect...\");\n    _user.onDisconnect().cancel();\n    _user.onDisconnect().set({\n      info: {\n        ..._values,\n        online: false,\n        room_id: \"\",\n        status: \"disconnected\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n  };\n\n  const enter = async (room: ReturnType<typeof FirebaseRoom>) => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: room.id,\n    });\n    _membership = MEMBERS.child(room.id).child(id);\n    _membership.onDisconnect().remove();\n    await _membership.set({\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n    });\n  };\n\n  const exit = async () => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: \"\",\n    });\n  };\n\n  return {\n    id,\n    enter,\n    exit,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    unsubscribeInfo,\n    update,\n    getInfo,\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const FirebaseParty = (\n  id: string,\n  room: ReturnType<typeof FirebaseRoom>\n) => {\n  const _members: string[] = [];\n  const _users: { [id: string]: ReturnType<typeof FirebaseUser> } = {};\n  let _info: RoomInfo = {\n    name: \"\",\n    playing: false,\n    queue: {},\n    queue_position: 0,\n    timestamp: 0,\n    type: \"dj\",\n  };\n\n  const _onAdded = (added: firebase.database.DataSnapshot) => {\n    const userId = added.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index === -1) {\n        _members.push(userId);\n        _users[userId] = FirebaseUser(userId);\n        _log();\n      }\n    }\n  };\n\n  const _onRemoved = (removed: firebase.database.DataSnapshot) => {\n    const userId = removed.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index !== -1) {\n        _members.splice(index, 1);\n        delete _users[userId];\n        _log();\n      }\n    }\n  };\n\n  const _onRoomInfo = (snapshot: firebase.database.DataSnapshot) => {\n    const newValues = snapshot.val() as RoomInfo | null;\n    if (newValues) {\n      _info = newValues;\n      _log();\n    }\n  };\n\n  const _log = () => {\n    console.debug(\"PARTY\", {\n      _info,\n      _members,\n    });\n  };\n\n  const init = () => {\n    room.subscribeInfo(_onRoomInfo);\n    room.subscribeMembers(_onAdded, _onRemoved);\n  };\n\n  const terminate = () => {\n    room.unsubscribeInfo(_onRoomInfo);\n    room.unsubscribeMembers(_onAdded, _onRemoved);\n  };\n\n  return {\n    init,\n    terminate,\n  };\n};\n\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n\nexport const testRoom = async () => {\n  const room = FirebaseRoom(\"r1\", \"rs1\");\n  await room.update({ name: \"R1\" });\n  room.subscribeInfo((info) => console.debug(\"ROOM\", info.val()));\n  room.subscribeMembers(\n    (members) => console.debug(\"ADDED\", members.key),\n    (members) => console.debug(\"REMOVED\", members.key)\n  );\n  await room.update({ name: \"R1\" });\n  await sleep(1000);\n  await room.update({\n    name: \"R1b\",\n    queue: {},\n    queue_position: 0,\n  });\n};\n\nexport const testUser = async () => {\n  const user = FirebaseUser(\"u1\", \"us1\");\n  user.subscribeInfo((info) => console.debug(\"USER\", info.val()));\n  await user.update({ name: \"U1\" });\n  await sleep(1000);\n  await user.update({ name: \"U1b\" });\n};\n\nexport const testParty = async () => {\n  const room1 = FirebaseRoom(\"r1\", \"rs1\");\n  await room1.update({ name: \"R1\" });\n  const room2 = FirebaseRoom(\"r2\", \"rs2\");\n  await room2.update({ name: \"R2\" });\n  const user1 = FirebaseUser(\"u1\", \"us1\");\n  await user1.update({ name: \"U1\" });\n  const user2 = FirebaseUser(\"u2\", \"us2\");\n  await user2.update({ name: \"U2\" });\n\n  await sleep(2000);\n\n  const party1 = FirebaseParty(\"P1\", room1);\n  await party1.init();\n  const party2 = FirebaseParty(\"P2\", room2);\n  await party2.init();\n\n  await sleep(1000);\n  user1.enter(room1);\n  await sleep(1000);\n  user2.enter(room1);\n  await sleep(1000);\n  user1.enter(room2);\n  await sleep(1000);\n  user1.exit();\n  await sleep(1000);\n  user1.enter(room1);\n};\n\nexport const test = () => {\n  // testRoom();\n  // testUser();\n  // testParty();\n};\n","export type MessageType = \"error\" | \"info\";\n\nexport type Message = {\n  id: number;\n  stamp: number;\n  text: string;\n  type: MessageType;\n};\n\nexport const extractErrorMessage = (err: any) =>\n  err.response && err.response.data && err.response.data.message\n    ? err.response.data.message\n    : err.message;\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { appendInQueue } from \"./queue\";\nimport { getFromDictOrList, onlyUnique } from \"../utils\";\nimport {\n  Media,\n  MediaType,\n  ProviderType,\n  Track,\n  Container,\n} from \"../utils/medias\";\nimport { extractErrorMessage } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type MediasAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof set>;\n\nconst fetching = () => createAction(\"medias/FETCHING\");\nconst success = () => createAction(\"medias/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"medias/ERROR\", error);\nconst reset = () => createAction(\"medias/RESET\");\nconst set = (medias: Media[]) => createAction(\"medias/SET\", medias);\n\n// ------------------------------------------------------------------\n\nexport const loadMedias = (\n  provider: ProviderType,\n  mediaType: MediaType,\n  mediaIds: string[],\n  enqueue: boolean,\n  preview: boolean\n): AsyncAction => async (dispatch, getState, { deezer, previewPlayer }) => {\n  if (mediaIds.length > 0) {\n    const {\n      medias: { medias },\n    } = getState();\n    try {\n      if (mediaType === \"track\") {\n        // TRACK\n        const { track: oldTracks } = medias;\n        const newTrackIds: string[] = mediaIds\n          .filter((trackId) => !oldTracks[trackId])\n          .filter(onlyUnique);\n        let newTracks: Track[] = [];\n        if (newTrackIds.length > 0) {\n          console.debug(\"Loading tracks...\", { mediaIds: newTrackIds });\n          newTracks = await deezer.loadTracks(newTrackIds);\n          dispatch(set(newTracks));\n        }\n        if (enqueue) {\n          console.debug(\"Enqueuing tracks...\", { mediaIds });\n          dispatch(appendInQueue(provider, mediaIds));\n        }\n        if (preview) {\n          const trackId = mediaIds[0];\n          const track = getFromDictOrList(oldTracks, newTracks, trackId);\n          if (track) {\n            console.debug(\"Previewing track...\", { track, trackId });\n            await previewPlayer.play(0, track.id, track.preview, 0);\n          } else {\n            console.debug(\"Cannot load track to preview...\");\n          }\n        }\n      } else {\n        // CONTAINERS\n        const { [mediaType]: oldContainers } = medias;\n        const newContainerIds: string[] = mediaIds\n          .filter((containerId) => !oldContainers[containerId])\n          .filter(onlyUnique);\n        let newContainers: Array<Container> = [];\n        if (newContainerIds.length > 0) {\n          console.debug(\"Loading containers...\", { mediaIds: newContainerIds });\n          newContainers = await deezer.loadContainers(\n            mediaType,\n            newContainerIds\n          );\n\n          const newContainersAndTracks: Media[] = [...newContainers];\n          for (const container of newContainers) {\n            newContainersAndTracks.push(...container.tracks!);\n          }\n\n          dispatch(set(newContainersAndTracks));\n        }\n\n        if (enqueue) {\n          console.debug(\"Enqueuing containers tracks...\", { mediaIds });\n          for (const containerId of mediaIds) {\n            const container = getFromDictOrList<Container>(\n              oldContainers,\n              newContainers,\n              containerId\n            );\n            if (container) {\n              dispatch(\n                appendInQueue(\n                  provider,\n                  container.tracks!.map((track) => track.id)\n                )\n              );\n            }\n          }\n        }\n        if (preview) {\n          let track: Track | null = null;\n          for (const containerId of mediaIds) {\n            const container = getFromDictOrList<Container>(\n              oldContainers,\n              newContainers,\n              containerId\n            );\n            if (container && container.tracks && container.tracks.length > 0) {\n              track = container.tracks[0];\n              break;\n            }\n          }\n          if (track) {\n            console.debug(\"Previewing container first track...\");\n            await previewPlayer.play(0, track.id, track.preview, 0);\n          } else {\n            console.debug(\"Cannot load track to preview...\");\n          }\n        }\n      }\n    } catch (err) {\n      dispatch(displayError(extractErrorMessage(err)));\n    }\n  }\n};\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { RoomInfo } from \"../utils/rooms\";\nimport { FirebaseRoom } from \"../utils/firebase\";\nimport { loadMedias } from \"./medias\";\nimport { MediaAccess } from \"../utils/medias\";\nimport history from \"../utils/history\";\nimport { extractErrorMessage } from \"../utils/messages\";\nimport { RoomData } from \"../reducers/room\";\n\n// ------------------------------------------------------------------\n\nexport type RoomAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof resetRoom>\n  | ReturnType<typeof setRoom>;\n\nconst fetching = () => createAction(\"room/FETCHING\");\nconst success = () => createAction(\"room/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"room/ERROR\", error);\nconst resetRoom = () => createAction(\"room/RESET\");\nexport const setRoom = (values: Partial<RoomData>) =>\n  createAction(\"room/SET\", values);\n\n// ------------------------------------------------------------------\n\nexport const createRoom = (name: string, secret: string): AsyncAction => async (\n  dispatch\n) => {\n  try {\n    const id = v4();\n    console.debug(\"Creating room...\", { id, secret });\n    await FirebaseRoom(id, secret).update({ name });\n    dispatch(enterRoom(id, secret));\n  } catch (err) {\n    dispatch(displayError(extractErrorMessage(err)));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_CB: any = null;\n\nexport const enterRoom = (id: string, secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    room: { room },\n  } = getState();\n  if (!room || room.id !== id) {\n    dispatch(exitRoom());\n    try {\n      console.debug(\"Entering room...\", { id, secret });\n      const newRoom = FirebaseRoom(id, secret);\n      dispatch(\n        setRoom({\n          access: { id, secret },\n          room: newRoom,\n          info: await newRoom.wait(),\n        })\n      );\n      FIREBASE_CB = newRoom.subscribeInfo(\n        (snapshot: firebase.database.DataSnapshot) => {\n          const newInfo = snapshot.val() as RoomInfo;\n          console.debug(\"[Firebase] Received room update...\", newInfo);\n          let medias: MediaAccess[] = [];\n          if (newInfo.queue) {\n            medias = Object.entries(newInfo.queue)\n              .sort((media1, media2) => Number(media1[0]) - Number(media2[0]))\n              .map((media) => media[1]);\n            dispatch(\n              loadMedias(\n                \"deezer\",\n                \"track\",\n                medias.map((media) => media.id),\n                false,\n                false\n              )\n            );\n          }\n          dispatch(\n            setRoom({\n              medias,\n              playing: newInfo.playing,\n              position: newInfo.queue_position,\n              room: newRoom,\n              info: newInfo,\n            })\n          );\n        }\n      );\n      history.push(`/room/${id}?key=${secret}`); // TODO: should push only if we're not already in it\n    } catch (err) {\n      dispatch(displayError(extractErrorMessage(err)));\n    }\n  }\n};\n\nexport const exitRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    room: { room },\n  } = getState();\n  if (room) {\n    console.debug(\"Exiting room...\");\n    room.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_CB = null;\n    dispatch(resetRoom());\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const lockRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    room: {\n      room,\n      access: { id },\n    },\n  } = getState();\n  if (room && room.id === id) {\n    console.debug(\"Locking room...\", { id });\n    room.setSecret(\"\");\n    dispatch(setRoom({ access: { id, secret: \"\" } }));\n  }\n};\n\nexport const unlockRoom = (secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    room: {\n      room,\n      access: { id },\n    },\n  } = getState();\n  if (room && room.id === id) {\n    console.debug(\"Unlocking room...\", { id, secret });\n    room.setSecret(secret);\n    dispatch(setRoom({ access: { id, secret } }));\n  }\n};\n","import { AsyncAction } from \".\";\nimport { RoomQueue } from \"../utils/rooms\";\nimport { displayError } from \"./messages\";\nimport { lockRoom } from \"./room\";\nimport { ProviderType } from \"../utils/medias\";\nimport { extractErrorMessage } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport const clearQueue = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    room: { room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    try {\n      console.debug(\"Clearing queue...\");\n      await room.update({ queue: {}, queue_position: 0 });\n    } catch (err) {\n      dispatch(displayError(extractErrorMessage(err)));\n      dispatch(lockRoom());\n    }\n  } else {\n    dispatch(displayError(\"rooms.error.locked\"));\n  }\n};\n\nexport const appendInQueue = (\n  provider: ProviderType,\n  trackIds: string[]\n): AsyncAction => async (dispatch, getState) => {\n  const {\n    room: { room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    if (trackIds.length > 0) {\n      const {\n        room: { medias: queueMedias },\n      } = getState();\n      try {\n        console.debug(\"Appending queue...\", { trackIds });\n        const queue: RoomQueue = {};\n        [...queueMedias.map((media) => media.id), ...trackIds].forEach(\n          (id, index) => {\n            queue[index] = {\n              id,\n              provider,\n              type: \"track\",\n            };\n          }\n        );\n        await room.update({ queue });\n      } catch (err) {\n        dispatch(displayError(extractErrorMessage(err)));\n        dispatch(lockRoom());\n      }\n    }\n  } else {\n    dispatch(displayError(\"rooms.error.locked\"));\n  }\n};\n\nexport const removeFromQueue = (index: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    room: { medias: queueMedias, position, room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    if (index < queueMedias.length) {\n      try {\n        console.debug(\"Removing from queue...\", { index });\n        const oldIndex = position % queueMedias.length;\n        const queue: RoomQueue = {};\n        const copy = [...queueMedias];\n        copy.splice(index, 1);\n        copy.forEach((mediaAccess, index) => {\n          queue[index] = mediaAccess;\n        });\n        await room.update({\n          queue,\n          queue_position: index < oldIndex ? position - 1 : position,\n        });\n      } catch (err) {\n        dispatch(displayError(extractErrorMessage(err)));\n        dispatch(lockRoom());\n      }\n    }\n  } else {\n    dispatch(displayError(\"rooms.error.locked\"));\n  }\n};\n\nexport const setQueuePosition = (newPosition: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    room: { position: oldPosition, room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    if (oldPosition !== newPosition) {\n      try {\n        console.debug(\"Set queue position...\", {\n          oldPosition,\n          newPosition,\n        });\n        await room.update({ queue_position: newPosition });\n      } catch (err) {\n        dispatch(displayError(extractErrorMessage(err)));\n        dispatch(lockRoom());\n      }\n    }\n  } else {\n    dispatch(displayError(\"rooms.error.locked\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const moveBackward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    room: { medias: queueMedias, position },\n  } = getState();\n  if (queueMedias.length > 0) {\n    console.debug(\"Moving backward...\");\n    dispatch(\n      setQueuePosition(position > 0 ? position - 1 : queueMedias.length - 1)\n    );\n  }\n};\n\nexport const moveForward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    room: { medias: queueMedias, position },\n  } = getState();\n  if (queueMedias.length > 0) {\n    console.debug(\"Moving forward...\");\n    dispatch(setQueuePosition(position + 1));\n  }\n};\n","import * as jimp from \"jimp\";\n\n// ------------------------------------------------------------------\n\nexport type Color = {\n  r: number;\n  g: number;\n  b: number;\n};\n\nexport type CombinedColor = {\n  bg: Color;\n  fg: Color;\n};\n\nconst CACHE: { [url: string]: CombinedColor } = {};\n\nconst DEFAULT_COLOR = {\n  bg: { r: 255, g: 255, b: 255 },\n  fg: { r: 0, g: 0, b: 0 },\n};\n\n// ------------------------------------------------------------------\n\n// https://stackoverflow.com/questions/3942878/how-to-decide-font-color-in-white-or-black-depending-on-background-color\nexport const pickColor = async (url: string) => {\n  let res = DEFAULT_COLOR;\n  if (url) {\n    res = CACHE[url];\n    if (!res) {\n      try {\n        const image = await jimp.read(url);\n        const pixel = await image.resize(1, 1).getPixelColor(0, 0);\n        const bg = jimp.intToRGBA(pixel);\n        CACHE[url] = res = {\n          bg,\n          fg:\n            bg.r * 0.299 + bg.g * 0.587 + bg.b * 0.114 > 186\n              ? { r: 0, g: 0, b: 0 }\n              : { r: 255, g: 255, b: 255 },\n        };\n      } catch (err) {\n        console.debug(\"An error prevented colorpicking\", err);\n      }\n    }\n  }\n  return res;\n};\n","import { AsyncAction, createAction, Dispatch } from \".\";\nimport { setRoom } from \"./room\";\nimport { pickColor } from \"../utils/colorpicker\";\nimport { setQueuePosition } from \"./queue\";\nimport { Player } from \"../utils/player\";\nimport { RootState } from \"../reducers\";\nimport { MediaAccess } from \"../utils/medias\";\nimport { displayError } from \"./messages\";\nimport { extractErrorMessage } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type PlayerAction =\n  | ReturnType<typeof resetPlayer>\n  | ReturnType<typeof setPlayer>;\n\nconst resetPlayer = () => createAction(\"player/RESET\");\nconst setPlayer = (\n  values: Partial<{ playing: boolean; track_percent: number }>\n) => createAction(\"player/SET\", values);\n\n// ------------------------------------------------------------------\n\nexport const startPlayer = (): AsyncAction => async (\n  dispatch,\n  getState,\n  { queuePlayer }\n) => {\n  if (!PLAYER_TIMER1 && !PLAYER_TIMER2) {\n    _installTimer1(dispatch, getState, queuePlayer);\n    _installTimer2(dispatch, getState, queuePlayer);\n    dispatch(setPlayer({ playing: true }));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPlayer = (): AsyncAction => async (\n  dispatch,\n  _,\n  { queuePlayer }\n) => {\n  if (PLAYER_TIMER1 && PLAYER_TIMER2) {\n    clearTimeout(PLAYER_TIMER1);\n    PLAYER_TIMER1 = null;\n    clearTimeout(PLAYER_TIMER2);\n    PLAYER_TIMER2 = null;\n    await queuePlayer.stop();\n    dispatch(resetPlayer());\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPreview = (): AsyncAction => async (\n  _1,\n  _2,\n  { previewPlayer }\n) => {\n  console.debug(\"Stop previewing...\");\n  await previewPlayer.stop();\n};\n\n// ------------------------------------------------------------------\n\nlet PLAYER_TIMER1: NodeJS.Timeout | null = null;\nlet PLAYER_TIMER2: NodeJS.Timeout | null = null;\n\nconst _computeNextPosition = (\n  queuePlayer: ReturnType<typeof Player>,\n  queueTrackPosition: number,\n  medias: MediaAccess[]\n) => {\n  let nextPosition = -1;\n  const playingTrackID = queuePlayer.getPlayingTrackID();\n  const playingTrackPosition = queuePlayer.getPlayingTrackPosition();\n  if (playingTrackPosition !== queueTrackPosition) {\n    if (queuePlayer.isPlaying()) {\n      // User has clicked an other track or added/removed a track in queue\n      nextPosition = queueTrackPosition;\n    } else {\n      // Not playing which means previous track has terminated\n      nextPosition =\n        playingTrackPosition >= 0 ? playingTrackPosition : queueTrackPosition;\n    }\n  } else if (playingTrackID !== medias[queueTrackPosition % medias.length].id) {\n    // User has deleted playing track\n    nextPosition = queueTrackPosition;\n  }\n  return nextPosition;\n};\n\nconst _installTimer1 = (\n  dispatch: Dispatch,\n  getState: () => RootState,\n  queuePlayer: ReturnType<typeof Player>\n) => {\n  // Don't use setInterval because a step could be triggered before previous one terminated\n  PLAYER_TIMER1 = setTimeout(async () => {\n    const {\n      room: { medias: queueMedias, position },\n      medias: {\n        medias: { track: tracks },\n      },\n    } = getState();\n    if (queueMedias.length > 0) {\n      // Detect and apply change to queue and player\n      const nextTrackPosition = _computeNextPosition(\n        queuePlayer,\n        position,\n        queueMedias\n      );\n      if (nextTrackPosition >= 0) {\n        const nextIndex = nextTrackPosition % queueMedias.length;\n        const nextTrack = tracks[queueMedias[nextIndex].id];\n        console.debug(\"Detected play change...\", {\n          nextIndex,\n          nextTrack,\n          nextTrackPosition,\n        });\n\n        try {\n          dispatch(setQueuePosition(nextTrackPosition));\n          const [color] = await Promise.all([\n            pickColor(nextTrack.album.cover_small),\n            queuePlayer.play(\n              nextTrackPosition,\n              nextTrack.id,\n              nextTrack.preview,\n              0\n            ),\n          ]);\n          dispatch(setRoom({ color }));\n        } catch (err) {\n          dispatch(displayError(extractErrorMessage(err)));\n        }\n      }\n\n      // Reschedule time\n      _installTimer1(dispatch, getState, queuePlayer);\n    } else {\n      // Last track has been removed from queue by user\n      console.debug(\"No more tracks in queue...\");\n      dispatch(stopPlayer());\n    }\n  }, 250);\n};\n\nconst _installTimer2 = (\n  dispatch: Dispatch,\n  getState: () => RootState,\n  queuePlayer: ReturnType<typeof Player>\n) => {\n  // Don't use setInterval because a step could be triggered before previous one terminated\n  PLAYER_TIMER2 = setTimeout(() => {\n    const {\n      room: { medias },\n    } = getState();\n    if (medias.length > 0) {\n      // Refresh player track percent\n      dispatch(\n        setPlayer({ track_percent: queuePlayer.getPlayingTrackPercent() })\n      );\n\n      // Reschedule time\n      _installTimer2(dispatch, getState, queuePlayer);\n    }\n  }, 250); // Must do very few operation because called very often (if we put less it creates blink on mobile when playing & scrolling)\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Queue from \"../../components/Room/Queue\";\nimport { extractMedias } from \"../../selectors/medias\";\nimport { setQueuePosition, removeFromQueue } from \"../../actions/queue\";\nimport { stopPlayer, startPlayer } from \"../../actions/player\";\nimport { isRoomLoaded, isRoomLocked } from \"../../selectors/room\";\nimport { openModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  loaded: isRoomLoaded(state),\n  locked: isRoomLocked(state),\n  medias: extractMedias(state, state.room.medias),\n  playing: state.player.playing,\n  playingIndex: state.room.position % state.room.medias.length,\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onPlay: (index: number) => {\n    dispatch(startPlayer());\n    dispatch(setQueuePosition(index));\n  },\n  onRemove: (index: number) => dispatch(removeFromQueue(index)),\n  onSearch: () => dispatch(openModal({ type: \"Search\", props: null })),\n  onStop: () => dispatch(stopPlayer()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Queue);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport { MappedProps } from \"../../containers/Room/Progress\";\nimport \"./Progress.scss\";\n\n// ------------------------------------------------------------------\n\nclass Progress extends Component<MappedProps> {\n  public render = () => {\n    const { playing, value } = this.props;\n    return (\n      <div className={classNames(\"Progress\", { playing })}>\n        <progress max={100} value={value * 100} />\n      </div>\n    );\n  };\n}\n\nexport default Progress;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Progress from \"../../components/Room/Progress\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  playing: state.player.playing,\n  value: state.player.track_percent\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Progress);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Room/Controls\";\nimport IconButton from \"../Common/IconButton\";\nimport Progress from \"../../containers/Room/Progress\";\nimport \"./Controls.scss\";\n\n// ------------------------------------------------------------------\n\nclass Controls extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      onMoveBackward,\n      onMoveForward,\n      onPlay,\n      onSearch,\n      onStop,\n      onUnlock,\n      tracksCount,\n      locked,\n      playing,\n      t,\n    } = this.props;\n    return (\n      <div className=\"Controls\">\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              icon=\"step-backward\"\n              onClick={onMoveBackward}\n              size=\"M\"\n              title={t(\"player.backward\")}\n            />\n          </div>\n          <div className=\"Control\">\n            {!playing ? (\n              <IconButton\n                disabled={locked || tracksCount === 0}\n                onClick={onPlay}\n                icon=\"play\"\n                size=\"L\"\n                title={t(\"player.play\")}\n              />\n            ) : (\n              <IconButton\n                disabled={locked || tracksCount === 0}\n                onClick={onStop}\n                icon=\"pause\"\n                title={t(\"player.stop\")}\n                size=\"L\"\n              />\n            )}\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              icon=\"step-forward\"\n              onClick={onMoveForward}\n              size=\"M\"\n              title={t(\"player.forward\")}\n            />\n          </div>\n        </div>\n        <Progress />\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              onClick={this.onClear}\n              icon=\"trash\"\n              title={t(\"rooms.clear\")}\n            />\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              onClick={onSearch}\n              icon=\"search\"\n              title={t(\"medias.search\")}\n            />\n          </div>\n          <div className=\"Control\">\n            {locked ? (\n              <IconButton\n                icon=\"lock\"\n                onClick={onUnlock}\n                size=\"M\"\n                title={t(\"rooms.locked\")}\n              />\n            ) : (\n              <IconButton\n                icon=\"unlock\"\n                onClick={this.onLock}\n                size=\"M\"\n                title={t(\"rooms.unlocked\")}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  private onClear = () => {\n    const { onClear, onConfirm, t } = this.props;\n    onConfirm(t(\"rooms.confirm_clear\"), onClear);\n  };\n\n  private onLock = () => {\n    const { onConfirm, t } = this.props;\n    onConfirm(t(\"rooms.confirm_lock\"), this.props.onLock);\n  };\n}\n\nexport default withTranslation()(Controls);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Controls from \"../../components/Room/Controls\";\nimport { startPlayer, stopPlayer } from \"../../actions/player\";\nimport { openModal, confirmModal } from \"../../actions/modals\";\nimport { clearQueue, moveBackward, moveForward } from \"../../actions/queue\";\nimport { isRoomLocked } from \"../../selectors/room\";\nimport { displayMessage } from \"../../actions/messages\";\nimport { lockRoom } from \"../../actions/room\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  tracksCount: state.room.medias.length,\n  locked: isRoomLocked(state),\n  playing: state.player.playing,\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClear: () => {\n    dispatch(clearQueue());\n    dispatch(stopPlayer());\n  },\n  onConfirm: (question: string, onConfirmed: () => void) => {\n    dispatch(confirmModal(question, onConfirmed));\n  },\n  onLock: () => dispatch(lockRoom()),\n  onUnlock: () => dispatch(openModal({ type: \"UnlockRoom\", props: null })),\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message)),\n  onMoveBackward: () => dispatch(moveBackward()),\n  onMoveForward: () => dispatch(moveForward()),\n  onPlay: () => dispatch(startPlayer()),\n  onSearch: () => dispatch(openModal({ type: \"Search\", props: null })),\n  onStop: () => dispatch(stopPlayer()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Controls);\n","import React, { Component } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/Room\";\nimport Head from \"../../containers/Room/Head\";\nimport Queue from \"../../containers/Room/Queue\";\nimport Controls from \"../../containers/Room/Controls\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = RouteComponentProps<{\n  room_id: string;\n}>;\n\nclass Room extends Component<Props & MappedProps> {\n  public componentDidMount = () => {\n    this.props.onEnter();\n  };\n\n  public componentWillUnmount = () => {\n    this.props.onExit();\n  };\n\n  public render = () => {\n    const {\n      color: { fg, bg }\n    } = this.props;\n    return (\n      <div\n        className=\"Room\"\n        style={{\n          color: `rgb(${fg.r}, ${fg.g}, ${fg.b})`,\n          backgroundColor: `rgb(${bg.r}, ${bg.g}, ${bg.b})`\n        }}\n      >\n        <Head />\n        <Queue />\n        <Controls />\n      </div>\n    );\n  };\n}\n\nexport default withRouter(Room);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport * as qs from \"qs\";\n//\nimport { RootState } from \"../../reducers\";\nimport Room, { Props } from \"../../components/Room\";\nimport { enterRoom, exitRoom } from \"../../actions/room\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState, ownProps: Props) => ({\n  color: state.room.color,\n});\n\nconst dispatchToProps = (\n  dispatch: ThunkDispatch<RootState, any, any>,\n  ownProps: Props\n) => {\n  const { key } = qs.parse(ownProps.location.search.substr(1)) as {\n    key?: string;\n  };\n  return {\n    onEnter: () =>\n      dispatch(enterRoom(ownProps.match.params.room_id, key || \"\")),\n    onExit: () => dispatch(exitRoom()),\n  };\n};\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Room);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Splash\";\nimport IconButton from \"../Common/IconButton\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass Splash extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const { loggedIn, onCreateRoom, onConnectUser, t } = this.props;\n    return (\n      <div className=\"Splash\">\n        <div className=\"Top\">\n          <div className=\"Logo\">\n            <Link to=\"/\">Party</Link>\n          </div>\n          <div className=\"PoweredWith\">\n            <span>{t(\"splash.powered_with\")}</span>\n            <a\n              href=\"https://www.deezer.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                src=\"/images/deezer.svg\"\n                height=\"20px\"\n                title=\"Deezer\"\n                alt=\"Deezer Logo\"\n              />\n            </a>\n          </div>\n        </div>\n        <div className=\"Middle\">\n          <div className=\"Menu\">\n            {loggedIn ? (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"plus\"\n                  onClick={onCreateRoom}\n                  size=\"L\"\n                  title={t(\"rooms.create\")}\n                />\n              </div>\n            ) : (\n              <>\n                <div className=\"MenuItem\">\n                  <IconButton\n                    displayTitle={true}\n                    onClick={onConnectUser}\n                    icon=\"sign-in\"\n                    size=\"L\"\n                    title={t(\"users.connect\")}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        <div className=\"Bottom\">\n          <div className=\"Menu\">\n            {loggedIn ? (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"sign-out\"\n                  onClick={this.onDisconnect}\n                  size=\"M\"\n                  title={t(\"users.disconnect\")}\n                />\n              </div>\n            ) : (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"info\"\n                  onClick={() => {}}\n                  size=\"M\"\n                  title={t(\"splash.CGU\")}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  onDisconnect = () => {\n    const { onConfirm, onDisconnectUser, t } = this.props;\n    onConfirm(t(\"users.confirm_disconnect\"), onDisconnectUser);\n  };\n}\n\nexport default withTranslation()(Splash);\n","import { RootState } from \"../reducers\";\n\nexport const extractUser = (state: RootState) => state.user.info;\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { UserInfo } from \"../utils/users\";\nimport { FirebaseUser } from \"../utils/firebase\";\nimport { displayError } from \"./messages\";\nimport { extractErrorMessage } from \"../utils/messages\";\nimport { UserData } from \"../reducers/user\";\n\n// ------------------------------------------------------------------\n\nexport type UserAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof resetUser>\n  | ReturnType<typeof setUser>;\n\nconst fetching = () => createAction(\"user/FETCHING\");\nconst success = () => createAction(\"user/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"user/ERROR\", error);\nconst resetUser = () => createAction(\"user/RESET\");\nconst setUser = (values: Partial<UserData>) => createAction(\"user/SET\", values);\n\n// ------------------------------------------------------------------\n\nexport const createUser = (name: string, secret: string): AsyncAction => async (\n  dispatch\n) => {\n  try {\n    console.debug(\"Creating user...\");\n    const id = v4();\n    await FirebaseUser(id, secret).update({ name });\n    dispatch(connectUser(id, secret));\n  } catch (err) {\n    dispatch(displayError(extractErrorMessage(err)));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_CB: any = null;\n\nexport const connectUser = (id: string, secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    user: { user },\n  } = getState();\n  if (!user || user.id !== id) {\n    dispatch(disconnectUser());\n    try {\n      console.debug(\"Connection user...\", { id, secret });\n      const newUser = FirebaseUser(id);\n      dispatch(\n        setUser({\n          access: { id, secret },\n          user: newUser,\n          info: await newUser.wait(),\n        })\n      );\n      FIREBASE_CB = newUser.subscribeInfo(\n        (snapshot: firebase.database.DataSnapshot) => {\n          const newInfo = snapshot.val() as UserInfo;\n          console.debug(\"[Firebase] Received user update...\", newInfo);\n          dispatch(setUser({ user: newUser, info: newInfo }));\n        }\n      );\n    } catch (err) {\n      dispatch(displayError(extractErrorMessage(err)));\n      dispatch(setUser({ access: { id, secret: \"\" } }));\n    }\n  }\n};\n\nexport const disconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    user: { user },\n  } = getState();\n  if (user) {\n    console.debug(\"Disconnecting user...\");\n    user.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_CB = null;\n    dispatch(resetUser());\n  }\n};\n\nexport const reconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    user: {\n      access: { id, secret },\n    },\n  } = getState();\n  if (id && secret) {\n    console.debug(\"Reconnecting user...\", { id, secret });\n    dispatch(connectUser(id, secret));\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Splash from \"../../components/Splash\";\nimport { extractUser } from \"../../selectors/user\";\nimport { openModal, confirmModal } from \"../../actions/modals\";\nimport { disconnectUser } from \"../../actions/user\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  loggedIn: !!state.user.access.id,\n  user: extractUser(state),\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onConfirm: (question: string, onConfirmed: () => void) => {\n    dispatch(confirmModal(question, onConfirmed));\n  },\n  onCreateRoom: () => dispatch(openModal({ type: \"CreateRoom\", props: null })),\n  onConnectUser: () => dispatch(openModal({ type: \"CreateUser\", props: null })),\n  onDisconnectUser: () => dispatch(disconnectUser()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Splash);\n","import React, { Component, FormEvent, ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Modals/Modal\";\nimport IconButton from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n  className?: string;\n  title: string;\n  renderFoot?: () => React.ReactNode;\n  onSubmit?: () => void;\n};\n\nclass Modal extends Component<Props & MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      children,\n      className,\n      title,\n      renderFoot,\n      onClose,\n      onPop,\n      has_prev_modal,\n      t,\n    } = this.props;\n    return (\n      <form className={classNames(\"Modal\", className)} onSubmit={this.onSubmit}>\n        <div className=\"ModalHead\">\n          <IconButton\n            kind=\"special\"\n            className={classNames(\"ModalHeadBack\", {\n              hidden: !has_prev_modal,\n            })}\n            icon=\"angle-left\"\n            title=\"Back\"\n            onClick={onPop}\n          />\n          <div className=\"ModalTitle\">{title}</div>\n          <IconButton\n            kind=\"special\"\n            className=\"ModalHeadClose\"\n            onClick={onClose}\n            title={t(\"cancel\")}\n            icon=\"times\"\n          />\n        </div>\n        <div className=\"ModalBody\">{children}</div>\n        <div className=\"ModalFoot\">{renderFoot && renderFoot()}</div>\n      </form>\n    );\n  };\n\n  private onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  };\n}\n\nexport default withTranslation()(Modal);\n","import { connect } from \"react-redux\";\n//\nimport Modal from \"../../components/Modals/Modal\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  has_prev_modal: state.modals.stack.length > 1\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onClose: () => dispatch(popModal()),\n  onPop: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport Modal from \"../../containers/Modals/Modal\";\nimport \"./FormModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  className?: string;\n  onSubmit: () => void;\n  renderButtons: () => React.ReactNode;\n  title: string;\n};\n\nclass FormModal extends Component<Props> {\n  public render = () => {\n    const { children, className, renderButtons, title, onSubmit } = this.props;\n    return (\n      <Modal\n        className={classNames(\"FormModal\", className)}\n        title={title}\n        renderFoot={renderButtons}\n        onSubmit={onSubmit}\n      >\n        {children}\n      </Modal>\n    );\n  };\n}\n\nexport default FormModal;\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Modals/ConfirmModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\nexport type ConfirmModalProps = {\n  question: string;\n  onCanceled?: () => void;\n  onConfirmed: () => void;\n};\n\nclass ConfirmModal extends Component<\n  ConfirmModalProps & MappedProps & WithTranslation\n> {\n  public render = () => {\n    const { question, t } = this.props;\n    return (\n      <FormModal\n        title={t(\"confirm\")}\n        onSubmit={this.props.onConfirmed}\n        renderButtons={this.renderButtons}\n      >\n        {question}\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"cancel\")}\n          kind=\"primary\"\n          icon=\"plus\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onCancel} />\n      </>\n    );\n  };\n}\n\nexport default withTranslation()(ConfirmModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport ConfirmModal, {\n  ConfirmModalProps,\n} from \"../../components/Modals/ConfirmModal\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (\n  dispatch: ThunkDispatch<RootState, any, any>,\n  ownProps: ConfirmModalProps\n) => ({\n  onCancel: () => {\n    dispatch(popModal());\n    if (ownProps.onCanceled) {\n      ownProps.onCanceled();\n    }\n  },\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(ConfirmModal);\n","import React, { Component, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/ConnectUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  id: string;\n  secret: string;\n};\n\nclass ConnectUserModal extends Component<MappedProps & WithTranslation, State> {\n  private idRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    id: \"\",\n    secret: \"\",\n  };\n\n  public componentDidMount() {\n    if (this.idRef.current) {\n      this.idRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { id, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"users.connection\")}\n        onSubmit={this.onConnect}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-id\">{t(\"users.user_id\")}</label>\n          <input\n            id=\"modal-id\"\n            type=\"text\"\n            placeholder={t(\"users.id_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={id}\n            ref={this.idRef}\n            onChange={(e) => {\n              this.setState({ id: e.target.value });\n            }}\n          />\n        </div>\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">{t(\"users.secret\")}</label>\n          <input\n            id=\"modal-secret\"\n            type=\"password\"\n            placeholder={t(\"users.secret_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            onChange={(e) => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"users.connect\")}\n          kind=\"primary\"\n          icon=\"sign-in\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n        <IconButton\n          title={t(\"users.create\")}\n          kind=\"default\"\n          icon=\"plus\"\n          onClick={this.props.onToggle}\n        />\n      </>\n    );\n  };\n\n  private onConnect = () => {\n    const { onClose, onConnect, onError } = this.props;\n    const { id, secret } = this.state;\n    if (id.trim().length === 0) {\n      onError(\"users.id_is_invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"users.secret_is_invalid\");\n      return;\n    }\n    onConnect(id, secret);\n    onClose();\n  };\n}\n\nexport default withTranslation()(ConnectUserModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport ConnectUserModal from \"../../components/Users/ConnectUserModal\";\nimport { connectUser } from \"../../actions/user\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onConnect: (id: string, secret: string) => dispatch(connectUser(id, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"CreateUser\", props: null })),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(ConnectUserModal);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  id: string;\n  label: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  value: string;\n};\n\nclass SecretField extends Component<Props & MappedProps & WithTranslation> {\n  public render = () => {\n    const { id, label, onChange, placeholder, value } = this.props;\n    return (\n      <div className=\"ModalField\">\n        <label htmlFor={id}>{label}</label>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <input\n            style={{\n              flexGrow: 1,\n              marginRight: \"0.5rem\",\n            }}\n            id={id}\n            type=\"password\"\n            placeholder={placeholder}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n          />\n          <IconButton\n            icon=\"clipboard\"\n            onClick={this.onCopyToClipboard}\n            size=\"M\"\n            title={`Copy to Clipboard`}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyToClipboard = async () => {\n    const { onMessage, value, t } = this.props;\n    await copyToClipboard(value);\n    onMessage(t(\"secret_copied_to_clipboard\"));\n  };\n}\n\nexport default withTranslation()(SecretField);\n","import { connect } from \"react-redux\";\n//\nimport SecretField from \"../../components/Modals/SecretField\";\nimport { RootState } from \"../../reducers\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message))\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretField);\n","import React, { Component, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/CreateRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\nlet ROOM_COUNTER = 1;\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateRoomModal extends Component<MappedProps & WithTranslation, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4(),\n  };\n\n  public componentDidMount() {\n    this.setState({\n      name: `${this.props.t(\"rooms.room\")} ${ROOM_COUNTER}`,\n    });\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"rooms.room_creation\")}\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">{t(\"rooms.name\")}</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder={t(\"rooms.name_placeholder\")}\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label={t(\"rooms.key\")}\n          placeholder={t(\"rooms.key_placeholder\")}\n          value={secret}\n          onChange={(newSecret) => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"rooms.create\")}\n          kind=\"primary\"\n          icon=\"plus\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </>\n    );\n  };\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(\"rooms.name_is_invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"rooms.secret_is_invalid\");\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n    ROOM_COUNTER++;\n  };\n}\n\nexport default withTranslation()(CreateRoomModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateRoomModal from \"../../components/Room/CreateRoomModal\";\nimport { createRoom } from \"../../actions/room\";\nimport { popModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createRoom(name, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateRoomModal);\n","import React, { Component, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/CreateUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\nlet USER_COUNTER = 1;\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateUserModal extends Component<MappedProps & WithTranslation, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4(),\n  };\n\n  public componentDidMount() {\n    this.setState({\n      name: `${this.props.t(\"users.user\")} ${USER_COUNTER}`,\n    });\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"users.user_creation\")}\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">{t(\"users.name\")}</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder={t(\"users.name_placeholder\")}\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label={t(\"users.secret\")}\n          placeholder={t(\"users.secret_placeholder\")}\n          value={secret}\n          onChange={(newSecret) => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"users.create\")}\n          kind=\"primary\"\n          icon=\"plus\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n        <IconButton\n          title={t(\"users.connect\")}\n          kind=\"default\"\n          icon=\"sign-in\"\n          onClick={this.props.onToggle}\n        />\n      </>\n    );\n  };\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(\"users.name_is_invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"users.secret_is_invalid\");\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n    USER_COUNTER++;\n  };\n}\n\nexport default withTranslation()(CreateUserModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateUserModal from \"../../components/Users/CreateUserModal\";\nimport { createUser } from \"../../actions/user\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createUser(name, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"ConnectUser\", props: null })),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateUserModal);\n","// import Axios from \"axios\";\nimport jsonp from \"jsonp\";\n//\nimport { sleep } from \".\";\nimport {\n  SearchResults,\n  Container,\n  ContainerType,\n  Album,\n  Playlist,\n  Track,\n  MediaType,\n} from \"./medias\";\n\n// ------------------------------------------------------------------\n\nconst RATE_LIMIT_DELAY = 5000; // ms\n\n// ------------------------------------------------------------------\n\nexport type ApiError = {\n  code: number;\n  message: string;\n  type: string;\n};\n\nexport type ApiAlbum = {\n  error?: ApiError;\n  artist: {\n    id: number;\n    name: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  cover_big: string;\n  cover_small: string;\n  id: number;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n};\n\nexport type ApiPlaylist = {\n  error?: ApiError;\n  creator?: {\n    id: number;\n    name: string;\n  };\n  id: number;\n  picture_big: string;\n  picture_small: string;\n  public: true;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  user?: {\n    id: number;\n    name: string;\n  };\n};\n\nexport type ApiTrack = {\n  error?: ApiError;\n  album: {\n    cover_big: string;\n    cover_small: string;\n    id: number;\n    title: string;\n  };\n  artist: {\n    id: number;\n    name: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  duration: number;\n  id: number;\n  preview: string;\n  readable: boolean;\n  title: string;\n};\n\nexport type ApiSearchResult<T> = {\n  data: T[];\n  total: number;\n};\n\n// ------------------------------------------------------------------\n\nconst ConvertAlbum = (album: ApiAlbum): Album => ({\n  artist: {\n    id: album.artist.id.toString(),\n    name: album.artist.name,\n    link: `https://www.deezer.com/artist/${album.artist.id}`,\n    picture_big: album.artist.picture_big,\n    picture_small: album.artist.picture_small,\n  },\n  cover_big: album.cover_big,\n  cover_small: album.cover_small,\n  id: album.id.toString(),\n  link: `https://www.deezer.com/album/${album.id}`,\n  title: album.title,\n  tracks:\n    album.tracks !== void 0\n      ? album.tracks.data\n          .filter((track) => track.readable && track.preview)\n          .map((track) => ConvertTrack(track, album))\n      : void 0,\n  type: \"album\",\n});\n\nconst ConvertPlaylist = (\n  playlist: ApiPlaylist,\n  user: { id: number; name: string }\n): Playlist => ({\n  id: playlist.id.toString(),\n  link: `https://www.deezer.com/playlist/${playlist.id}`,\n  picture_big: playlist.picture_big,\n  picture_small: playlist.picture_small,\n  title: playlist.title,\n  tracks:\n    playlist.tracks !== void 0\n      ? playlist.tracks.data\n          .filter((track) => track.readable && track.preview)\n          .map((track) => ConvertTrack(track, track.album))\n      : void 0,\n  type: \"playlist\",\n  user: {\n    id: user.id.toString(),\n    name: user.name,\n    link: `https://www.deezer.com/profile/${user.id}`,\n  },\n});\n\nconst ConvertTrack = (\n  track: ApiTrack,\n  album: { id: number; title: string; cover_big: string; cover_small: string }\n): Track => ({\n  album: {\n    id: album.id.toString(),\n    link: `https://www.deezer.com/album/${album.id}`,\n    title: album.title,\n    cover_big: album.cover_big,\n    cover_small: album.cover_small,\n  },\n  artist: {\n    id: track.artist.id.toString(),\n    name: track.artist.name,\n    link: `https://www.deezer.com/artist/${track.artist.id}`,\n    picture_big: track.artist.picture_big,\n    picture_small: track.artist.picture_small,\n  },\n  duration: track.duration,\n  id: track.id.toString(),\n  link: `https://www.deezer.com/track/${track.id}`,\n  preview: track.preview,\n  title: track.title,\n  type: \"track\",\n});\n\n// ------------------------------------------------------------------\n\nexport const DeezerApi = () => {\n  const API_BASE = \"https://api.deezer.com\";\n\n  const _asyncJsonp = <T>(url: string): Promise<T> =>\n    new Promise((resolve, reject) => {\n      jsonp(url, void 0, (err, data) => {\n        if (err) {\n          reject(new Error(err.message));\n        } else {\n          resolve(data);\n        }\n      });\n    });\n\n  const _call = async <T>(path: string, qs?: string) => {\n    // We have to rely on jsonp because the Deezer api is CORS restricted\n    const fullpath = qs\n      ? `${API_BASE}/${path}?${qs}&output=jsonp&callback=`\n      : `${API_BASE}/${path}?output=jsonp&callback=`;\n    return await _asyncJsonp<T>(fullpath);\n  };\n\n  const _search = <T>(type: MediaType, query: string) =>\n    _call<ApiSearchResult<T>>(\n      `search/${type}`,\n      `q=${encodeURIComponent(query)}`\n    );\n\n  const _load = <T extends { error?: ApiError }>(\n    type: MediaType,\n    ids: string[]\n  ) =>\n    Promise.all(\n      ids.map(async (id) => {\n        const media = await _call<T>(`${type}/${id}`);\n        return media.error ? null : media;\n      })\n    );\n\n  const _loadWithRetry = async <T extends { error?: ApiError }>(\n    type: MediaType,\n    ids: string[]\n  ) => {\n    let first = true;\n    const medias: Array<T | null> = ids.map(() => null);\n    while (medias.includes(null)) {\n      const subIds: string[] = [];\n      const subIndexes: number[] = [];\n      medias.forEach((media, index) => {\n        if (!media) {\n          subIds.push(ids[index]);\n          subIndexes.push(index);\n        }\n      });\n      if (!first) {\n        console.debug(`Handling rate limit delayed batch...`, { subIds });\n        await sleep(RATE_LIMIT_DELAY);\n      }\n      const subMedias = await _load<T>(type, subIds);\n      subIndexes.forEach((index, subIndex) => {\n        medias[index] = subMedias[subIndex];\n      });\n      first = false;\n    }\n    return medias as T[];\n  };\n\n  const _searchAlbums = (query: string) => _search<ApiAlbum>(\"album\", query);\n\n  const _searchPlaylists = (query: string) =>\n    _search<ApiPlaylist>(\"playlist\", query);\n\n  const _searchTracks = (query: string) => _search<ApiTrack>(\"track\", query);\n\n  const search = async (query: string): Promise<SearchResults> => {\n    const [album, playlist, track] = await Promise.all([\n      _searchAlbums(query),\n      _searchPlaylists(query),\n      _searchTracks(query),\n    ]);\n    return {\n      // keys are MediaType\n      album: album.data.map(ConvertAlbum),\n      playlist: playlist.data\n        .filter((playlist) => playlist.public)\n        .map((playlist) => ConvertPlaylist(playlist, playlist.user!)),\n      track: track.data\n        .filter((track) => track.readable && track.preview)\n        .map((track) => ConvertTrack(track, track.album)),\n    };\n  };\n\n  const loadAlbums = async (ids: string[]): Promise<Album[]> => {\n    const albums = await _loadWithRetry<ApiAlbum>(\"album\", ids);\n    return albums.map((album) => ConvertAlbum(album));\n  };\n\n  const loadPlaylists = async (ids: string[]): Promise<Playlist[]> => {\n    const playlists = await _loadWithRetry<ApiPlaylist>(\"playlist\", ids);\n    return playlists.map((playlist) =>\n      ConvertPlaylist(playlist, playlist.creator!)\n    );\n  };\n\n  const loadContainers = async (\n    type: ContainerType,\n    ids: string[]\n  ): Promise<Container[]> => {\n    switch (type) {\n      case \"album\":\n        return loadAlbums(ids);\n      case \"playlist\":\n        return loadPlaylists(ids);\n    }\n  };\n\n  const loadTracks = async (ids: string[]): Promise<Track[]> => {\n    const tracks = await _loadWithRetry<ApiTrack>(\"track\", ids);\n    return tracks.map((track) => ConvertTrack(track, track.album));\n  };\n\n  return {\n    search,\n    loadContainers,\n    loadTracks,\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const DEFAULT_API = DeezerApi();\n","export type MediaAccess = {\n  id: string;\n  provider: ProviderType;\n  type: MediaType;\n};\n\nexport type ContainerType = \"album\" | \"playlist\";\n\nexport type MediaType = ContainerType | \"track\";\n\nexport type MediaTypeDefinition = {\n  label: string;\n  provider: ProviderType;\n  type: MediaType;\n};\n\nexport type ProviderType = \"deezer\";\n\nexport type TrackType = \"track\";\n\n// ------------------------------------------------------------------\n\nexport type Album = {\n  artist: {\n    id: string;\n    link: string;\n    name: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  cover_big: string;\n  cover_small: string;\n  id: string;\n  link: string;\n  title: string;\n  tracks?: Track[];\n  type: \"album\";\n};\n\nexport type Playlist = {\n  id: string;\n  link: string;\n  picture_big: string;\n  picture_small: string;\n  title: string;\n  tracks?: Track[];\n  type: \"playlist\";\n  user: {\n    id: string;\n    link: string;\n    name: string;\n  };\n};\n\nexport type Track = {\n  album: {\n    cover_big: string;\n    cover_small: string;\n    id: string;\n    link: string;\n    title: string;\n  };\n  artist: {\n    id: string;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  duration: number;\n  id: string;\n  link: string;\n  preview: string;\n  title: string;\n  type: \"track\";\n};\n\nexport type Container = Album | Playlist;\n\nexport type Media = Container | Track;\n\n// ------------------------------------------------------------------\n\nexport type SearchResults = {\n  // keys are MediaType\n  album: Album[];\n  playlist: Playlist[];\n  track: Track[];\n};\n\n// ------------------------------------------------------------------\n\nexport const MEDIA_TYPE_DEFINITIONS: MediaTypeDefinition[] = [\n  {\n    label: \"medias.albums\",\n    provider: \"deezer\",\n    type: \"album\",\n  },\n  {\n    label: \"medias.playlists\",\n    provider: \"deezer\",\n    type: \"playlist\",\n  },\n  {\n    label: \"medias.tracks\",\n    provider: \"deezer\",\n    type: \"track\",\n  },\n];\n","import React, { ReactNode } from \"react\";\n//\nimport { Media } from \"../../utils/medias\";\n\n// ------------------------------------------------------------------\n\nconst MAX_RESULTS_COUNT = 5;\n\n// ------------------------------------------------------------------\n\nconst SearchResultCategory = ({\n  items,\n  label,\n  cb,\n}: {\n  items: Media[];\n  label: string;\n  cb: (item: Media) => ReactNode;\n}) =>\n  items.length > 0 ? (\n    <>\n      <div className=\"ModalField\">\n        <label>{label}</label>\n      </div>\n      {items.slice(0, MAX_RESULTS_COUNT).map((item) => (\n        <div key={item.id} className=\"ModalField\">\n          <div className=\"SearchResultItem\">{cb(item)}</div>\n        </div>\n      ))}\n    </>\n  ) : null;\n\nexport default SearchResultCategory;\n","import React, { Component, createRef, RefObject } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/SearchModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport { DEFAULT_API } from \"../../utils/deezer\";\nimport Media from \"./Medias\";\nimport {\n  MEDIA_TYPE_DEFINITIONS,\n  MediaType,\n  ProviderType,\n  SearchResults,\n} from \"../../utils/medias\";\nimport SearchResultCategory from \"./SearchResultCategory\";\nimport \"./SearchModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  playingMediaId: string;\n  playingMediaType: MediaType;\n  provider: ProviderType;\n  query: string;\n  results: SearchResults;\n};\n\nclass SearchModal extends Component<MappedProps & WithTranslation, State> {\n  private queryRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    playingMediaId: \"\",\n    playingMediaType: \"track\",\n    provider: \"deezer\",\n    query: \"\",\n    results: {\n      // keys are MediaType\n      album: [],\n      playlist: [],\n      track: [],\n    },\n  };\n\n  public componentDidMount() {\n    if (this.queryRef.current) {\n      this.queryRef.current.focus();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.props.onStop();\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    return (\n      <FormModal\n        className=\"SearchModal\"\n        title={t(\"medias.medias_search\")}\n        onSubmit={this.onSearch}\n        renderButtons={this.renderButtons}\n      >\n        {this.renderInputs()}\n        {this.renderResults()}\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"medias.search\")}\n          kind=\"primary\"\n          icon=\"search\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </>\n    );\n  };\n\n  private renderInputs = () => {\n    const { t } = this.props;\n    const { query } = this.state;\n    return (\n      <div className=\"ModalField\">\n        <input\n          id=\"modal-query\"\n          type=\"text\"\n          placeholder={t(\"medias.search_placeholder\")}\n          maxLength={100}\n          minLength={2}\n          required={true}\n          value={query}\n          ref={this.queryRef}\n          onChange={(e) => {\n            this.setState({ query: e.target.value });\n          }}\n        />\n      </div>\n    );\n  };\n\n  private renderResults = () => {\n    const { onSelect, locked, t } = this.props;\n    const { playingMediaId, playingMediaType, provider, results } = this.state;\n    return MEDIA_TYPE_DEFINITIONS.map(({ label, type }) => (\n      <SearchResultCategory\n        key={type}\n        label={t(label)}\n        items={results[type]}\n        cb={(media) => (\n          <Media\n            actions={\n              !locked ? (\n                <IconButton\n                  title={t(\"medias.add\")}\n                  icon=\"plus\"\n                  onClick={() => onSelect(provider, type, media.id)}\n                />\n              ) : null\n            }\n            media={media}\n            mediaType={type}\n            playable={true}\n            playing={playingMediaType === type && playingMediaId === media.id}\n            onPlay={() => this.onStartPreview(type, media.id)}\n            onStop={this.onStopPreview}\n          />\n        )}\n      />\n    ));\n  };\n\n  private onSearch = async () => {\n    const { query } = this.state;\n    if (query.trim().length > 0) {\n      this.setState({ results: await DEFAULT_API.search(query) });\n    }\n  };\n\n  private onStartPreview = (\n    playingMediaType: MediaType,\n    playingMediaId: string\n  ) => {\n    this.props.onPlay(this.state.provider, playingMediaType, playingMediaId);\n    this.setState({\n      playingMediaId,\n      playingMediaType,\n    });\n  };\n\n  private onStopPreview = () => {\n    this.props.onStop();\n    this.setState({\n      playingMediaId: \"\",\n      playingMediaType: \"track\",\n    });\n  };\n}\n\nexport default withTranslation()(SearchModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport SearchModal from \"../../components/Room/SearchModal\";\nimport { popModal } from \"../../actions/modals\";\nimport { loadMedias } from \"../../actions/medias\";\nimport { stopPreview } from \"../../actions/player\";\nimport { ProviderType, MediaType } from \"../../utils/medias\";\nimport { isRoomLocked } from \"../../selectors/room\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onSelect: (provider: ProviderType, mediaType: MediaType, mediaId: string) =>\n    dispatch(loadMedias(provider, mediaType, [mediaId], true, false)),\n  onPlay: (provider: ProviderType, mediaType: MediaType, mediaId: string) =>\n    dispatch(loadMedias(provider, mediaType, [mediaId], false, true)),\n  onStop: () => dispatch(stopPreview()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(SearchModal);\n","import React, { Component, createRef, RefObject } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/UnlockRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  secret: string;\n};\n\nclass UnlockRoomModal extends Component<MappedProps & WithTranslation, State> {\n  private secretRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    secret: \"\",\n  };\n\n  public componentDidMount() {\n    if (this.secretRef.current) {\n      this.secretRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"rooms.room_unlocking\")}\n        onSubmit={this.onUnlock}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">{t(\"rooms.key\")}</label>\n          <input\n            id=\"modal-secret\"\n            type=\"password\"\n            placeholder={t(\"rooms.key_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            ref={this.secretRef}\n            onChange={(e) => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"rooms.unlock\")}\n          kind=\"primary\"\n          icon=\"unlock\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </>\n    );\n  };\n\n  private onUnlock = () => {\n    const { onClose, onUnlock } = this.props;\n    onUnlock(this.state.secret);\n    onClose();\n  };\n}\n\nexport default withTranslation()(UnlockRoomModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport UnlockRoomModal from \"../../components/Room/UnlockRoomModal\";\nimport { unlockRoom } from \"../../actions/room\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onUnlock: (secret: string) => dispatch(unlockRoom(secret)),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(UnlockRoomModal);\n","import React, { Component, MouseEvent } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/Modals\";\nimport { ModalPrereq } from \"../../actions/modals\";\nimport ConfirmModal from \"../../containers/Modals/ConfirmModal\";\nimport ConnectUserModal from \"../../containers/Users/ConnectUserModal\";\nimport CreateRoomModal from \"../../containers/Room/CreateRoomModal\";\nimport CreateUserModal from \"../../containers/Users/CreateUserModal\";\nimport SearchModal from \"../../containers/Room/SearchModal\";\nimport UnlockRoomModal from \"../../containers/Room/UnlockRoomModal\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst TransitionTimeout = 300;\n\n// ------------------------------------------------------------------\n\nexport const getModal = (prereq: ModalPrereq) => {\n  switch (prereq.type) {\n    case \"Confirm\":\n      return <ConfirmModal {...prereq.props} />;\n    case \"ConnectUser\":\n      return <ConnectUserModal />;\n    case \"CreateRoom\":\n      return <CreateRoomModal />;\n    case \"CreateUser\":\n      return <CreateUserModal />;\n    case \"Search\":\n      return <SearchModal />;\n    case \"UnlockRoom\":\n      return <UnlockRoomModal />;\n  }\n};\n\n// ------------------------------------------------------------------\n\ntype State = {\n  curr_prereq?: ModalPrereq;\n  prev_prereq?: ModalPrereq; // Keeping prev modal prereq for modal fadeout\n};\n\nclass Modals extends Component<MappedProps, State> {\n  public readonly state: State = {\n    curr_prereq: void 0,\n    prev_prereq: void 0,\n  };\n\n  public componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentDidUpdate = (prevProps: MappedProps) => {\n    const oldPrereq = prevProps.prereq;\n    const newPrereq = this.props.prereq;\n    if (oldPrereq !== newPrereq) {\n      // Hide current modal before showing new one (if there is a new one)\n      this.setState(\n        {\n          curr_prereq: void 0,\n          prev_prereq: oldPrereq,\n        },\n        () => {\n          if (newPrereq) {\n            setTimeout(() => {\n              this.setState({\n                curr_prereq: newPrereq,\n              });\n            }, TransitionTimeout);\n          }\n        }\n      );\n    }\n  };\n\n  public render = () => {\n    const { curr_prereq, prev_prereq } = this.state;\n    const prereq = curr_prereq || prev_prereq;\n    let modal = null;\n    if (prereq) {\n      modal = getModal(prereq);\n    }\n    return (\n      <CSSTransition\n        in={!!curr_prereq}\n        timeout={TransitionTimeout}\n        unmountOnExit={true}\n      >\n        <div className=\"ModalOverlay\" onClick={this.onClickOverlay}>\n          {modal && (\n            <div\n              className=\"ModalWrapper\"\n              role=\"dialog\"\n              onClick={this.onClickWrapper}\n            >\n              {modal}\n            </div>\n          )}\n        </div>\n      </CSSTransition>\n    );\n  };\n\n  private onClickOverlay = (event: MouseEvent) => {\n    // Clicking overlay will close current modal\n    event.stopPropagation();\n    this.props.onCloseModal();\n  };\n\n  private onClickWrapper = (event: MouseEvent) => {\n    // Clicking wrapper modal will not progagate to overlay which would close current modal\n    event.stopPropagation();\n  };\n\n  private onKeyDown = (e: KeyboardEvent) => {\n    if (e.keyCode === 27) {\n      this.props.onCloseModal();\n    }\n  };\n}\n\nexport default Modals;\n","import { connect } from \"react-redux\";\n//\nimport Modals from \"../../components/Modals\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  prereq:\n    state.modals.stack.length > 0\n      ? state.modals.stack[state.modals.stack.length - 1]\n      : void 0\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onCloseModal: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modals);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/App/Messages\";\nimport { Message } from \"../../utils/messages\";\nimport \"./Messages.scss\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n\n// ------------------------------------------------------------------\n\nclass Messages extends Component<MappedProps & WithTranslation> {\n  public render = () => (\n    <div className=\"Messages\">\n      <TransitionGroup>\n        {this.props.messages.map(this.renderMessage)}\n      </TransitionGroup>\n    </div>\n  );\n\n  private renderMessage = (message: Message) => (\n    <CSSTransition\n      key={message.id}\n      classNames=\"Message\"\n      timeout={{ enter: 200, exit: 200 }}\n    >\n      <div className={classNames(\"Message\", \"Message-\" + message.type)}>\n        {this.props.t(message.text)}\n      </div>\n    </CSSTransition>\n  );\n}\n\nexport default withTranslation()(Messages);\n","import { RootState } from \"../reducers\";\n\n// ------------------------------------------------------------------\n\nexport const extractMessages = (state: RootState) =>\n  state.messages.sort((m1, m2) => m1.stamp - m2.stamp);\n","import { connect } from \"react-redux\";\n//\nimport { RootState } from \"../../reducers\";\nimport Messages from \"../../components/App/Messages\";\nimport { extractMessages } from \"../../selectors/messages\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  messages: extractMessages(state),\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/App\";\nimport Room from \"../../containers/Room\";\nimport Splash from \"../../containers/Splash\";\nimport Modals from \"../../containers/Modals\";\nimport Messages from \"../../containers/App/Messages\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass App extends Component<MappedProps> {\n  public componentDidMount = async () => {\n    this.props.onReconnect();\n  };\n\n  public render = () => {\n    return (\n      <div className=\"App\">\n        <Modals />\n        <Switch>\n          <Route exact={true} path=\"/room/:room_id\" component={Room} />\n          <Route exact={true} path=\"/\" component={Splash} />\n          <Redirect to=\"/\" />\n        </Switch>\n        <Messages />\n      </div>\n    );\n  };\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport App from \"../../components/App\";\nimport { reconnectUser } from \"../../actions/user\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onReconnect: () => dispatch(reconnectUser()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(App);\n","// ------------------------------------------------------------------\n\nlet AUDIO_CONTEXT: AudioContext | null = null;\n\nconst getContext = () => {\n  if (!AUDIO_CONTEXT) {\n    AUDIO_CONTEXT = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n  }\n  return AUDIO_CONTEXT;\n};\n\nconst decodeAudioData = (encodedBuffer: ArrayBuffer): Promise<AudioBuffer> =>\n  new Promise((resolve, reject) =>\n    getContext().decodeAudioData(encodedBuffer, resolve, reject)\n  );\n\nconst loadAudioBuffer = (trackId: string, url: string): Promise<AudioBuffer> =>\n  new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest();\n    req.open(\"GET\", url, true);\n    req.responseType = \"arraybuffer\";\n    req.addEventListener(\n      \"error\",\n      () => reject(new Error(\"player.errors.cannot_load_audio_buffer\")),\n      false\n    );\n    req.addEventListener(\n      \"load\",\n      async () => {\n        try {\n          resolve(await decodeAudioData(req.response as ArrayBuffer));\n        } catch (error) {\n          console.debug(\"An error occurred while decoding audio data\", {\n            trackId,\n            url,\n          });\n          reject(new Error(\"player.errors.cannot_decode_audio_data\"));\n        }\n      },\n      false\n    );\n    req.send();\n  });\n\nconst AUDIO_BUFFER_CACHES: Array<{ buffer: AudioBuffer; url: string }> = [];\nconst AUDIO_BUFFER_CACHES_MAX_SIZE = 10;\n\nconst loadAudioBufferWithCache = async (\n  trackId: string,\n  url: string\n): Promise<AudioBuffer> => {\n  if (!url) {\n    console.error(\"Track has invalid URL\", { trackId });\n    throw new Error(\"Invalid URL\");\n  }\n  let buffer: AudioBuffer | null = null;\n  const index = AUDIO_BUFFER_CACHES.findIndex((item) => item.url === url);\n  if (index >= 0) {\n    // Found: extract old buffer, it will be repush at the end of cache\n    console.debug(\"Reusing cached audio buffer...\", { trackId, url });\n    buffer = AUDIO_BUFFER_CACHES.splice(index, 1)[0].buffer;\n  } else {\n    // Not Found\n    console.debug(\"Loading audio buffer...\", { trackId, url });\n    buffer = await loadAudioBuffer(trackId, url);\n  }\n  AUDIO_BUFFER_CACHES.push({ buffer, url });\n  AUDIO_BUFFER_CACHES.splice(AUDIO_BUFFER_CACHES_MAX_SIZE);\n  return buffer;\n};\n\n// ------------------------------------------------------------------\n\n// Fix Safari and iOS Audio Context\n(() => {\n  const fixAudioContext = () => {\n    document.removeEventListener(\"click\", fixAudioContext);\n    document.removeEventListener(\"touchstart\", fixAudioContext);\n    console.debug(\"Fixing audio context...\");\n    const context = getContext();\n    // Create empty buffer, connect to output, play sound\n    var buffer = context.createBuffer(1, 1, 22050);\n    var source = context.createBufferSource();\n    source.buffer = buffer;\n    source.connect(context.destination);\n    source.start(0);\n  };\n  document.addEventListener(\"click\", fixAudioContext);\n  document.addEventListener(\"touchstart\", fixAudioContext);\n})();\n\n// ------------------------------------------------------------------\n\nexport type PlayerCallbacks = {\n  onStart: () => void;\n  onStop: () => void;\n};\n\nexport const Player = (chainPlay: boolean) => {\n  let analyserNode: AnalyserNode | null = null;\n  let gainNode: GainNode | null = null;\n  let _node: AudioNode | null = null;\n  let _buffer: AudioBuffer | null = null;\n  let _sourceNode: AudioBufferSourceNode | null = null;\n  let _sourceNodeStartTime = 0;\n  let _trackId = \"\";\n  let _trackPosition = -1;\n\n  const getOrCreateNode = () => {\n    if (!_node) {\n      const context = getContext();\n      _node = context.destination;\n\n      gainNode = context.createGain();\n      gainNode.gain.value = 1.0;\n      gainNode.connect(_node);\n      _node = gainNode;\n\n      analyserNode = context.createAnalyser();\n      analyserNode.fftSize = 128;\n      // analyserNode.minDecibels = -90;\n      // analyserNode.maxDecibels = -10;\n      analyserNode.connect(_node);\n      _node = analyserNode;\n    }\n    return _node;\n  };\n\n  const isPlaying = () => !!_sourceNode;\n\n  const getPlayingTrackID = () => _trackId;\n\n  const getPlayingTrackPosition = () => _trackPosition;\n\n  // Percentage [0, 1]\n  const getPlayingTrackPercent = () => {\n    if (_buffer && _sourceNode) {\n      return (\n        (getContext().currentTime - _sourceNodeStartTime) / _buffer.duration\n      );\n    }\n    return 0;\n  };\n\n  const play = async (\n    trackPosition: number,\n    trackId: string,\n    trackUrl: string,\n    offset: number\n  ) => {\n    await stop();\n    _buffer = await loadAudioBufferWithCache(trackId, trackUrl); // TODO: warning if loadBuffer takes long for some reason and user clicks stop before end, next part of this function will continue after stop have been requested\n    console.debug(\"Starting audio...\", { trackPosition, trackId, trackUrl });\n    _trackId = trackId;\n    _trackPosition = trackPosition;\n    _sourceNode = getContext().createBufferSource();\n    _sourceNode.buffer = _buffer;\n    _sourceNode.loop = false;\n    _sourceNode.loopStart = 0;\n    _sourceNode.loopEnd = 0;\n    _sourceNode.onended = () => {\n      console.debug(\"Audio terminated...\");\n      _buffer = null;\n      _sourceNode = null;\n      if (chainPlay) {\n        _trackPosition++;\n      }\n    };\n    _sourceNode.playbackRate.value = 1.0;\n    _sourceNode.connect(getOrCreateNode());\n    _sourceNode.start(0, offset); // A new BufferSource must be created for each start\n    _sourceNodeStartTime = getContext().currentTime;\n  };\n\n  const stop = async (): Promise<void> =>\n    new Promise((resolve) => {\n      if (null !== _sourceNode) {\n        console.debug(\"Stopping audio...\");\n        _sourceNode.onended = () => {\n          console.debug(\"Forced audio termination...\");\n          resolve();\n        };\n        _sourceNode.stop();\n        _sourceNode = null;\n        _sourceNodeStartTime = 0;\n        _trackPosition = -1;\n      } else {\n        resolve();\n      }\n    });\n\n  return {\n    analyserNode,\n    gainNode,\n    getPlayingTrackID,\n    getPlayingTrackPercent,\n    getPlayingTrackPosition,\n    isPlaying,\n    play,\n    stop,\n  };\n};\n","export default {\n  splash: {\n    CGU: \"CGU\",\n    powered_with: \"Powered with\",\n  },\n  users: {\n    errors: {\n      invalid: \"User is invalid\",\n    },\n    user: \"User\",\n    confirm_disconnect: \"Are you sure you want to disconnect?\",\n    connect: \"Connect\",\n    connection: \"Connection\",\n    create: \"Create a user\",\n    disconnect: \"Disconnect\",\n    user_creation: \"User Registration\",\n    id_is_invalid: \"ID is invalid\",\n    id_placeholder: \"User ID...\",\n    user_id: \"User ID\",\n    name_is_invalid: \"Name is invalid\",\n    name_placeholder: \"User Name...\",\n    name: \"User Name\",\n    secret_is_invalid: \"Secret is invalid\",\n    secret_placeholder: \"User Secret...\",\n    secret: \"User Secret\",\n  },\n  rooms: {\n    errors: {\n      invalid: \"Room is invalid\",\n      locked: \"Room is locked\",\n    },\n    clear: \"Clear all tracks\",\n    confirm_clear: \"Are you sure you want to remove all tracks?\",\n    confirm_exit: \"Are you sure you want to leave the room?\",\n    confirm_lock: \"Are you sure you want to lock the room?\",\n    copy_link: \"Copy Room Link to Clipboard\",\n    create: \"Create a room\",\n    empty: \"It's empty here, you should add some tracks...\",\n    exit: \"Exit Room\",\n    key_placeholder: \"Room Key...\",\n    key: \"Room Key\",\n    link_copied_to_clipboard: \"Room link has been copied to clipboard\",\n    loading: \"Loading...\",\n    locked: \"Locked (click to unlock)\",\n    name_is_invalid: \"Name is invalid\",\n    name_placeholderl: \"Room Name...\",\n    name: \"Room Name\",\n    room_creation: \"Room Creation\",\n    room_unlocking: \"Room Unlocking\",\n    room: \"Room\",\n    secret_is_invalid: \"Secret is invalid\",\n    unlock: \"Unlock\",\n    unlocked: \"Unlocked (click to lock)\",\n  },\n  medias: {\n    by: \"by {{artist}}\",\n    add: \"Add\",\n    remove: \"Remove\",\n    search: \"Search Media\",\n    search_placeholder: \"Search...\",\n    medias_search: \"Media Search\",\n    albums: \"Albums\",\n    playlists: \"Playlists\",\n    tracks: \"Tracks\",\n  },\n  player: {\n    errors: {\n      cannot_decode_audio_data: \"Audio buffer cannot be decoded\",\n      cannot_load_audio_buffer: \"Audio buffer loading failed\",\n    },\n    backward: \"Backward\",\n    forward: \"Forward\",\n    play: \"Play\",\n    playing: \"Playing\",\n    stop: \"Stop\",\n  },\n  cancel: \"Cancel\",\n  secret_copied_to_clipboard: \"Secret has been copied to clipboard\",\n};\n","export default {\n  splash: {\n    CGU: \"CGU\",\n    powered_with: \"boosté avec\",\n  },\n  users: {\n    errors: {\n      invalid: \"L'utilisateur est invalide\",\n    },\n    user: \"Utilisateur\",\n    confirm_disconnect: \"Êtes-vous sûr(e) de vouloir vous déconnecter ?\",\n    connect: \"Se connecter\",\n    connection: \"Connexion\",\n    create: \"Créer un utilisateur\",\n    disconnect: \"Se déconnecter\",\n    user_creation: \"Création d'un utilisateur\",\n    id_is_invalid: \"L'identifiant est invalide\",\n    id_placeholder: \"Identifiant...\",\n    user_id: \"Identifiant\",\n    name_is_invalid: \"Le nom est invalide\",\n    name_placeholder: \"Nom...\",\n    name: \"Nom\",\n    secret_is_invalid: \"Le secret est invalide\",\n    secret_placeholder: \"Secret...\",\n    secret: \"Secret\",\n  },\n  rooms: {\n    errors: {\n      invalid: \"La salle est invalide\",\n      locked: \"La salle est verrouillée\",\n    },\n    clear: \"Supprimer toutes les pistes\",\n    confirm_clear: \"Êtes-vous sûr(e) de vouloir supprimer toutes les pistes ?\",\n    confirm_exit: \"Êtes-vous sûr(e) de vouloir quitter la salle ?\",\n    confirm_lock: \"Êtes-vous sûr(e) de vouloir verrouiller la salle ?\",\n    copy_link: \"Copier le lien de la salle dans le presse-papier\",\n    create: \"Créer une salle\",\n    empty: \"Cette salle est vide, vous devriez ajouter quelques pistes...\",\n    exit: \"Quitter la salle\",\n    key_placeholder: \"Clef...\",\n    key: \"Clef\",\n    loading: \"Chargement...\",\n    link_copied_to_clipboard:\n      \"Le lien de la salle a été copié dans le presse-papier\",\n    locked: \"Verrouillée (cliquer pour déverrouiller)\",\n    name_is_invalid: \"Le nom est invalide\",\n    name_placeholderl: \"Nom...\",\n    name: \"Nom\",\n    room: \"Salle\",\n    room_creation: \"Création d'une salle\",\n    room_unlocking: \"Déverrouillage de la salle\",\n    secret_is_invalid: \"Le secret is invalide\",\n    unlock: \"Déverrouiller\",\n    unlocked: \"Déverrouillée (cliquer pour verrouiller)\",\n  },\n  medias: {\n    by: \"par {{artist}}\",\n    add: \"Ajouter\",\n    remove: \"Supprimer\",\n    search: \"Chercher des médias\",\n    search_placeholder: \"Recherche...\",\n    medias_search: \"Recherche de médias\",\n    albums: \"Albums\",\n    playlists: \"Playlists\",\n    tracks: \"Pistes\",\n  },\n  player: {\n    errors: {\n      cannot_decode_audio_data: \"Le buffer audio ne peut pas être décodé\",\n      cannot_load_audio_buffer: \"Le buffer audio ne peut pas être chargé\",\n    },\n    backward: \"Piste précédente\",\n    forward: \"Piste suivante\",\n    play: \"Lire\",\n    playing: \"En cours de lecture\",\n    stop: \"Arrêter\",\n  },\n  cancel: \"Annuler\",\n  secret_copied_to_clipboard: \"Le secret a été copié dans le presse-papier\",\n};\n","import i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n//\nimport en from \"../locales/en\";\nimport fr from \"../locales/fr\";\n\n// --------------------------------------------------------------\n\nexport const changeLanguage = (language: string) =>\n  i18next.changeLanguage(language);\n\n// --------------------------------------------------------------\n\nexport const initLocales = async (): Promise<void> =>\n  new Promise((resolve, reject) => {\n    console.debug(\"Initializing language...\", {\n      current: navigator.language || (navigator as any).userLanguage,\n    });\n    i18next.use(initReactI18next).init(\n      {\n        fallbackLng: \"en\",\n        lng: navigator.language || (navigator as any).userLanguage,\n        resources: {\n          en: { translation: en },\n          \"en-US\": { translation: en },\n          fr: { translation: fr },\n          \"fr-FR\": { translation: fr },\n        },\n        interpolation: {\n          escapeValue: false, // react is already safe from xss\n          format: (value, format, lng) => {\n            // if (format === \"uppercase\") return value.toUpperCase();\n            // if (value instanceof Date) return moment(value).format(format);\n            return value;\n          },\n        },\n      },\n      (error) => {\n        if (error) reject(error);\n        resolve();\n      }\n    );\n  });\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n//\nimport { rootReducer } from \"./reducers\";\nimport App from \"./containers/App\";\nimport { DEFAULT_API } from \"./utils/deezer\";\nimport { Player } from \"./utils/player\";\nimport { initLocales } from \"./utils/i18n\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst init = async () => {\n  const composeEnhancers =\n    process.env.NODE_ENV === \"development\" ? composeWithDevTools({}) : compose;\n\n  const deezer = DEFAULT_API;\n  const queuePlayer = Player(true);\n  const previewPlayer = Player(false);\n  initLocales();\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(\n        thunk.withExtraArgument({ deezer, queuePlayer, previewPlayer })\n      )\n    )\n  );\n\n  // const dispatch: Dispatch = store.dispatch.bind(store);\n\n  return store;\n};\n\n// ------------------------------------------------------------------\n\ninit().then((store) => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <Route path=\"/\" component={App} />\n      </HashRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n"],"sourceRoot":""}