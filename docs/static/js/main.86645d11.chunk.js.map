{"version":3,"sources":["reducers/medias.ts","reducers/messages.ts","reducers/modals.ts","reducers/player.ts","reducers/queue.ts","reducers/rooms.ts","reducers/users.ts","utils/users.ts","reducers/index.ts","components/Common/Icon.tsx","components/Common/IconButton.tsx","utils/history.ts","utils/clipboard.ts","components/Room/Head.tsx","selectors/rooms.ts","actions/index.ts","actions/modals.ts","actions/messages.ts","containers/Room/Head.ts","components/Room/Cover.tsx","components/Room/Medias.tsx","components/Room/QueueItem.tsx","components/Room/Queue.tsx","selectors/medias.ts","config/firebase.ts","utils/index.ts","utils/firebase.ts","utils/messages.ts","actions/medias.ts","actions/rooms.ts","actions/queue.ts","utils/colorpicker.ts","actions/player.ts","containers/Room/Queue.ts","components/Room/Progress.tsx","containers/Room/Progress.ts","components/Room/Controls.tsx","containers/Room/Controls.ts","components/Room/index.tsx","containers/Room/index.ts","components/Splash/index.tsx","selectors/users.ts","actions/users.ts","containers/Splash/index.ts","components/Modals/Modal.tsx","containers/Modals/Modal.ts","components/Modals/FormModal.tsx","components/Modals/ConfirmModal.tsx","containers/Modals/ConfirmModal.ts","components/Users/ConnectUserModal.tsx","containers/Users/ConnectUserModal.ts","components/Modals/SecretField.tsx","containers/Modals/SecretField.ts","components/Room/CreateRoomModal.tsx","containers/Room/CreateRoomModal.ts","components/Users/CreateUserModal.tsx","containers/Users/CreateUserModal.ts","utils/deezer.ts","utils/medias.ts","components/Room/SearchResultCategory.tsx","components/Room/SearchModal.tsx","containers/Room/SearchModal.ts","components/Room/UnlockRoomModal.tsx","containers/Room/UnlockRoomModal.ts","components/Modals/index.tsx","containers/Modals/index.ts","components/App/Messages.tsx","selectors/messages.ts","containers/App/Messages.ts","components/App/index.tsx","containers/App/index.ts","utils/player.ts","locales/en.ts","locales/fr.ts","utils/i18n.ts","index.tsx"],"names":["INITIAL_STATE","fetching","error","medias","album","playlist","track","initialState","stack","playing","track_percent","position","room","room_access","id","secret","room_color","fg","r","g","b","bg","room_info","user","user_access","res","s","localStorage","getItem","d","JSON","parse","atob","i","console","debug","err","loadUserAccess","user_info","rootReducer","combineReducers","state","action","type","payload","copy","media","messages","filter","other","modals","pop","player","queue","rooms","users","setItem","btoa","stringify","saveUserAccess","Icon","Component","render","this","props","className","color","icon","size","title","classNames","name","style","LoadingIcon","IconButton","disabled","displayTitle","kind","onClick","aria-label","clickable","_CancelButton","t","CancelButton","withTranslation","createHashHistory","copyToClipboard","value","a","Promise","resolve","elem","document","createElement","setAttribute","left","body","appendChild","selection","getSelection","selected","rangeCount","getRangeAt","select","execCommand","removeAllRanges","addRange","removeChild","Head","onCopyLink","onExit","onMessage","location","href","split","onConfirm","history","push","extractRoom","isRoomLoaded","isRoomLocked","createAction","openModal","prereq","popModal","confirmModal","question","onConfirmed","onCanceled","window","confirm","MESSAGE_ID_GENERATOR","displayMessage","text","duration","dispatch","stamp","Date","getTime","setTimeout","removeMessage","displayError","connect","message","Cover","playable","image","onPlay","onStop","backgroundImage","_Media","actions","mediaType","cover_small","link","target","rel","artist","picture_small","QueueItem","locked","onRemove","Queue","loaded","playingIndex","onSearch","length","map","index","key","extractMedias","mediaAccesses","mediaAccess","config","databaseURL","process","sleep","delay","firebaseApp","firebase","firebaseConfig","firebaseDatabase","MEMBERS","ref","ROOMS","USERS","FirebaseRoom","_room","child","_info","_members","_secret","_values","queue_position","timestamp","getInfo","isLocked","setSecret","newSecret","wait","reject","once","snapshot","newValues","val","Error","subscribeInfo","cb","on","subscribeMembers","cbAdded","cbRemoved","unsubscribeInfo","off","unsubscribeMembers","update","set","info","ServerValue","TIMESTAMP","FirebaseUser","_user","_membership","online","room_id","status","installDisconnect","onDisconnect","cancel","enter","remove","exit","extractErrorMessage","response","data","onlyUnique","self","indexOf","loadMedias","provider","mediaIds","enqueue","preview","getState","deezer","previewPlayer","oldTracks","newTrackIds","trackId","newTracks","loadTracks","appendInQueue","find","play","oldContainers","log","newContainerIds","containerId","newContainers","load","container","tracks","setRoom","setRoomAccess","setRoomColor","createRoom","v4","enterRoom","FIREBASE_CB","exitRoom","newRoom","newInfo","Object","entries","sort","media1","media2","Number","setQueue","lockRoom","unlockRoom","clearQueue","trackIds","queueMedias","forEach","removeFromQueue","oldIndex","splice","setQueuePosition","newPosition","oldPosition","moveBackward","moveForward","CACHE","DEFAULT_COLOR","pickColor","url","jimp","resize","getPixelColor","pixel","setPlayerTrackPercent","percent","startPlayer","queuePlayer","PLAYER_TIMER1","PLAYER_TIMER2","_installTimer1","_installTimer2","stopPlayer","_","clearTimeout","stop","stopPreview","_1","_2","_computeNextPosition","queueTrackPosition","nextPosition","playingTrackID","getPlayingTrackID","playingTrackPosition","getPlayingTrackPosition","isPlaying","nextTrackPosition","nextIndex","nextTrack","all","getPlayingTrackPercent","Progress","max","Controls","onMoveBackward","onMoveForward","onUnlock","tracksCount","onClear","onLock","Room","componentDidMount","onEnter","componentWillUnmount","backgroundColor","withRouter","ownProps","qs","search","substr","match","params","Splash","loggedIn","onCreateRoom","onConnectUser","to","src","height","alt","onDisconnectUser","extractUser","setUser","setUserAccess","createUser","connectUser","disconnectUser","newUser","reconnectUser","Modal","children","renderFoot","onClose","onPop","has_prev_modal","onSubmit","hidden","event","preventDefault","FormModal","renderButtons","ConfirmModal","onCancel","ConnectUserModal","idRef","createRef","onConnect","htmlFor","placeholder","maxLength","minLength","required","onChange","e","setState","onToggle","onError","trim","current","focus","SecretField","label","display","flexDirection","justifyContent","flexGrow","marginRight","onCopyToClipboard","ROOM_COUNTER","CreateRoomModal","nameRef","onCreate","USER_COUNTER","CreateUserModal","ConvertAlbum","toString","picture_big","cover_big","ConvertTrack","ConvertPlaylist","public","readable","DEFAULT_API","_asyncJsonp","jsonp","_call","path","fullpath","_search","query","encodeURIComponent","_load","ids","_loadWithRetry","first","includes","subIds","subIndexes","subMedias","subIndex","searchAlbums","searchPlaylists","searchTracks","searchAll","loadAlbums","albums","loadPlaylists","playlists","creator","DeezerApi","MEDIA_TYPE_DEFINITIONS","SearchResultCategory","items","slice","item","SearchModal","queryRef","playingMediaId","playingMediaType","results","renderInputs","renderResults","onSelect","onStartPreview","onStopPreview","mediaId","UnlockRoomModal","secretRef","Modals","curr_prereq","prev_prereq","addEventListener","onKeyDown","removeEventListener","componentDidUpdate","prevProps","oldPrereq","newPrereq","modal","getModal","in","timeout","unmountOnExit","onClickOverlay","role","onClickWrapper","stopPropagation","onCloseModal","keyCode","Messages","renderMessage","extractMessages","m1","m2","App","onReconnect","exact","component","AUDIO_CONTEXT","getContext","AudioContext","webkitAudioContext","decodeAudioData","encodedBuffer","loadAudioBuffer","req","XMLHttpRequest","open","responseType","send","fixAudioContext","context","buffer","createBuffer","source","createBufferSource","destination","start","Player","chainPlay","analyserNode","gainNode","_node","_buffer","_bufferUrl","_sourceNode","_sourceNodeStartTime","_trackId","_trackPosition","getOrCreateNode","createGain","gain","createAnalyser","fftSize","_loadBuffer","trackPosition","trackUrl","offset","loop","loopStart","loopEnd","onended","playbackRate","currentTime","splash","CGU","powered_with","errors","invalid","confirm_disconnect","connection","create","disconnect","user_creation","id_is_invalid","id_placeholder","user_id","name_is_invalid","name_placeholder","secret_is_invalid","secret_placeholder","clear","confirm_clear","confirm_exit","confirm_lock","copy_link","empty","key_placeholder","link_copied_to_clipboard","loading","name_placeholderl","room_creation","room_unlocking","unlock","unlocked","by","add","search_placeholder","medias_search","cannot_load_audio_buffer","backward","forward","secret_copied_to_clipboard","initLocales","i18next","use","initReactI18next","init","fallbackLng","lng","navigator","language","userLanguage","resources","translation","en","fr","interpolation","escapeValue","format","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","withExtraArgument","then","ReactDOM","getElementById"],"mappings":"wSAkBA,MAAMA,EAAuB,CAC3BC,UAAU,EACVC,MAAO,KACPC,OAAQ,CAENC,MAAO,GACPC,SAAU,GACVC,MAAO,KCjBEN,EAAuB,GCGvBO,EAA4B,CACvCC,MAAO,ICFIR,EAAuB,CAClCS,SAAS,EACTC,cAAe,GCAJV,EAAuB,CAClCG,OAAQ,GACRM,SAAS,EACTE,SAAU,GCGNX,EAAuB,CAC3BC,UAAU,EACVC,MAAO,KACPU,KAAM,KACNC,YAAa,CAAEC,GAAI,GAAIC,OAAQ,IAC/BC,WAAY,CAAEC,GAAI,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAKC,GAAI,CAAEH,EAAG,IAAKC,EAAG,IAAKC,EAAG,MACjEE,UAAW,MCHPtB,EAAuB,CAC3BC,UAAU,EACVC,MAAO,KACPqB,KAAM,KACNC,YCV4B,MAC5B,MAAMC,EAAkB,CACtBX,GAAI,GACJC,OAAQ,IAEJW,EAAIC,aAAaC,QAAQ,KAC/B,GAAIF,EACF,IACE,MAAMG,EAAIC,KAAKC,MAAMC,KAAKN,IACP,kBAARG,EAAEI,GAAiC,kBAARJ,EAAEH,IACtCD,EAAIX,GAAKe,EAAEI,EACXR,EAAIV,OAASc,EAAEH,EACfQ,QAAQC,MAAM,uBAAwBV,IAExC,MAAOW,IAEX,OAAOX,GDNMY,GACbC,UAAW,MEfAC,EAAcC,0BAAgB,CACzCrC,ORmByD,CACzDsC,EAAQzC,EACR0C,KAEA,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAO,eACFF,EADL,CAEExC,UAAU,EACVC,MAAO,OAEX,IAAK,iBACH,OAAO,eACFuC,EADL,CAEExC,UAAU,EACVC,MAAO,OAGX,IAAK,eACH,OAAO,eACFuC,EADL,CAEExC,UAAU,EACVC,MAAOwC,EAAOE,UAElB,IAAK,aAAc,CACjB,MAAMC,EAAI,eACLJ,EADK,CAERtC,OAAQ,CACNC,MAAM,eAAMqC,EAAMtC,OAAOC,OACzBC,SAAS,eAAMoC,EAAMtC,OAAOE,UAC5BC,MAAM,eAAMmC,EAAMtC,OAAOG,UANZ,oBASGoC,EAAOE,SATV,IASjB,2BAAoC,CAAC,MAA1BE,EAAyB,QAClCD,EAAK1C,OAAO2C,EAAMH,MAAMG,EAAMhC,IAAMgC,GAVrB,8BAYjB,OAAOD,EAET,IAAK,eACH,OAAO7C,EACT,QACE,OAAOyC,IQ3DXM,SPD6D,CAC7DN,EAAQzC,EACR0C,KAEA,OAAQA,EAAOC,MACb,IAAK,cACH,MAAO,CAACD,EAAOE,WAAYH,GAC7B,IAAK,iBACH,OAAOA,EAAMO,OAAOC,GAASA,EAAMnC,KAAO4B,EAAOE,SACnD,IAAK,gBACH,OAAO5C,EACT,QACE,OAAOyC,IOVXS,ONG+D,CAC/DT,EAAQlC,EACRmC,KAEA,OAAQA,EAAOC,MACb,IAAK,cACH,OAAO,eACFF,EADL,CAEEjC,MAAO,CAACkC,EAAOE,WAEnB,IAAK,eACH,OAAO,eACFH,EADL,CAEEjC,MAAO,KAEX,IAAK,cACH,OAAO,eACFiC,EADL,CAEEjC,MAAO,IAAIiC,EAAMjC,MAAOkC,EAAOE,WAEnC,IAAK,aACH,MAAMC,EAAO,IAAIJ,EAAMjC,OAEvB,OADAqC,EAAKM,MACE,eACFV,EADL,CAEEjC,MAAOqC,IAEX,QACE,OAAOJ,IM9BXW,OLEyD,CACzDX,EAAQzC,EACR0C,KAEA,OAAQA,EAAOC,MACb,IAAK,eACH,OAAO,eAAKF,EAAZ,CAAmBhC,SAAS,IAC9B,IAAK,cACH,OAAO,eAAKgC,EAAZ,CAAmBhC,SAAS,IAC9B,IAAK,2BACH,OAAO,eAAKgC,EAAZ,CAAmB/B,cAAegC,EAAOE,UAC3C,IAAK,eACH,OAAO5C,EACT,QACE,OAAOyC,IKfXY,MJIuD,CACvDZ,EAAQzC,EACR0C,KAEA,OAAQA,EAAOC,MACb,IAAK,YACH,OAAO,eACFF,EADL,GAEKC,EAAOE,SAEd,QACE,OAAOH,IIdXa,MHYuD,CACvDb,EAAQzC,EACR0C,KAEA,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,eACFF,EADL,CAEExC,UAAU,EACVC,MAAO,OAEX,IAAK,gBACH,OAAO,eACFuC,EADL,CAEExC,UAAU,EACVC,MAAO,OAGX,IAAK,cACH,OAAO,eACFuC,EADL,CAEExC,UAAU,EACVC,MAAOwC,EAAOE,UAElB,IAAK,iBACH,OAAO,eACFH,EADL,GAEKC,EAAOE,SAGd,IAAK,wBACH,OAAO,eACFH,EADL,CAEE5B,YAAa6B,EAAOE,UAGxB,IAAK,uBACH,OAAO,eACFH,EADL,CAEEzB,WAAY0B,EAAOE,UAGvB,IAAK,cACH,OAAO5C,EACT,QACE,OAAOyC,IGxDXc,MFauD,CACvDd,EAAQzC,EACR0C,KAEA,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,eACFF,EADL,CAEExC,UAAU,EACVC,MAAO,OAEX,IAAK,gBACH,OAAO,eACFuC,EADL,CAEExC,UAAU,EACVC,MAAO,OAGX,IAAK,cACH,OAAO,eACFuC,EADL,CAEExC,UAAU,EACVC,MAAOwC,EAAOE,UAElB,IAAK,iBACH,OAAO,eACFH,EADL,GAEKC,EAAOE,SAGd,IAAK,wBAEH,MC7BwB,GAAG9B,KAAIC,aACnCY,aAAa6B,QACX,IACAC,KACE3B,KAAK4B,UAAU,CACbzB,EAAGnB,EACHY,EAAGX,ODsBL4C,CAAejB,EAAOE,SACf,eACFH,EADL,CAEEjB,YAAakB,EAAOE,UAGxB,IAAK,cACH,OAAO5C,EACT,QACE,OAAOyC,M,0DGvDb,MAAMmB,UAAaC,YAAkB,eAAD,oBAC3BC,OAAS,KAAO,MAAD,EACkCC,KAAKC,MAAnDC,EADY,EACZA,UAAWC,EADC,EACDA,MAAOC,EADN,EACMA,KADN,IACYC,YADZ,MACmB,IADnB,EACwBC,EADxB,EACwBA,MAC5C,OACE,kBAAC,IAAD,CACEJ,UAAWK,IAAW,OAAQL,EAAWG,GACzCG,KAAMJ,EACNK,MAAO,CAAEN,SACTG,MAAOA,MAMAT,QAIR,MAAMa,EAAc,EAAGL,UAC5B,kBAAC,EAAD,CACEH,UAAU,WACVE,KAAK,iBACLC,KAAMA,EACNC,MAAM,Y,MCfV,MAAMK,UAAmBb,YAAkB,eAAD,oBACjCC,OAAS,KAAO,MAAD,EAYhBC,KAAKC,MAVPC,EAFkB,EAElBA,UACAC,EAHkB,EAGlBA,MAHkB,IAIlBS,gBAJkB,aAKlBC,oBALkB,SAMlBT,EANkB,EAMlBA,KANkB,IAOlBU,YAPkB,MAOX,UAPW,EAQlBC,EARkB,EAQlBA,QACAV,EATkB,EASlBA,KACAC,EAVkB,EAUlBA,MAVkB,IAWlB1B,YAXkB,MAWX,SAXW,EAapB,OACE,4BACEA,KAAMA,EACNoC,aAAYV,EACZJ,UAAWK,IAAW,aAAcL,EAAWY,EAAMT,EAAM,CACzDY,WAAYL,MAAeG,GAAoB,WAATnC,KAExCmC,QAASH,OAAW,EAASG,EAC7BT,MAAOA,GAEP,kBAAC,EAAD,CAAMH,MAAOA,EAAOC,KAAMA,EAAMC,KAAMA,IACrCQ,GACC,yBAAKX,UAAWK,IAAW,kBAAmBF,IAAQC,MAOjDK,QAQf,MAAMO,UAAsBpB,YAAgD,eAAD,oBAClEC,OAAS,KAAO,MAAD,EACGC,KAAKC,MAApBc,EADY,EACZA,QAASI,EADG,EACHA,EACjB,OACE,kBAAC,EAAD,CACEJ,QAASA,EACTT,MAAOa,EAAE,UACTL,KAAK,UACLV,KAAK,UAMN,MAAMgB,EAAeC,cAAkBH,G,WC7E/BI,gBCDR,MAAMC,EAAe,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACvB,IAAIC,QAAQC,IAChB,MAAMC,EAAOC,SAASC,cAAc,YACpCF,EAAKJ,MAAQA,EACbI,EAAKG,aAAa,WAAY,IAC9BH,EAAKnB,MAAM7D,SAAW,WACtBgF,EAAKnB,MAAMuB,KAAO,UAElBH,SAASI,KAAKC,YAAYN,GAC1B,MAAMO,EAAYN,SAASO,eAC3B,GAAkB,OAAdD,EAAoB,CACtB,MAAME,EACJF,EAAUG,WAAa,GAAIH,EAAUI,WAAW,GAClDX,EAAKY,SACLX,SAASY,YAAY,SACJ,IAAbJ,IACFF,EAAUO,kBACVP,EAAUQ,SAASN,IAGvBR,SAASI,KAAKW,YAAYhB,GAC1BD,MArB2B,mFAAH,sD,MCU5B,MAAMkB,UAAa/C,YAA0C,eAAD,iCACnDC,OAAS,KAAO,MAAD,EACAC,KAAKC,MAAjBpD,EADY,EACZA,KAAMsE,EADM,EACNA,EACd,OACE,yBAAKjB,UAAU,QACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACEE,KAAK,OACLW,QAASf,KAAK8C,WACdzC,KAAK,IACLC,MAAOa,EAAE,sBAGb,yBAAKjB,UAAU,YAAYrD,EAAOA,EAAK2D,KAAO,IAC9C,yBAAKN,UAAU,YACb,kBAAC,EAAD,CACEa,QAASf,KAAK+C,OACd3C,KAAK,WACLC,KAAK,IACLC,MAAOa,EAAE,mBAnBuC,KA0BlD2B,WA1BkD,sBA0BrC,gCAAArB,EAAA,+DACM,EAAKxB,MAAtB+C,EADW,EACXA,UAAW7B,EADA,EACAA,EADA,SAEbI,EAAgBM,SAASoB,SAASC,KAAKC,MAAM,KAAK,IAFrC,OAGnBH,EAAU7B,EAAE,mCAHO,2CA1BqC,KAgClD4B,OAAS,KAAO,MAAD,EACI/C,KAAKC,OAC9BmD,EAFqB,EACbA,YACEjC,EAFW,EACFA,GACP,sBAAuB,KACjCkC,EAAQC,KAAK,SAKJjC,oBAAkBwB,GCjD1B,MAAMU,EAAe7E,GAAqBA,EAAMa,MAAMhC,UAEhDiG,EAAgB9E,KAAuBA,EAAMa,MAAM1C,KAEnD4G,EAAgB/E,IAC1BA,EAAMa,MAAMzC,YAAYE,OC4BpB,SAAS0G,EAAkC9E,EAASC,GACzD,YAAmB,IAAZA,EAAqB,CAAED,QAAS,CAAEA,OAAMC,WCR1C,MAAM8E,EAAaC,GACxBF,EAAa,cAAeE,GASjBC,EAAW,IAAMH,EAAa,cAI9BI,EAAe,CAC1BC,EACAC,EACAC,IAH0B,sBAIV,sBAAAxC,EAAA,sDAEZyC,OAAOC,QAAQJ,GACjBC,IACSC,GACTA,IALc,2CC5BlB,IAAIG,EAA+B,EAE5B,MAAMC,EAAiB,CAC5BzF,EACA0F,EACAC,EAAmB,MACFC,IACjB,MAAMzH,EAAKqH,IACXI,EAhBuCd,EAAa,cAgBhC,CAAE3G,KAAI0H,OAAO,IAAIC,MAAOC,UAAWL,OAAM1F,UAC7DgG,WAAW,IAAMJ,EAfIzH,IAAe2G,EAAa,iBAAkB3G,GAezC8H,CAAc9H,IAAMwH,IAGnCO,EAAgBR,GAA+BE,IAC1DA,EAASH,EAAe,QAASC,EAAM,OCN1BS,kBAdOrG,IAAD,CACnB7B,KAAM0G,EAAY7E,KAGK8F,IAAD,CACtBpB,UAAW,CAACW,EAAkBC,KAC5BQ,EAASV,EAAaC,EAAUC,KAElChB,UAAYgC,GAAoBR,EAASH,EAAe,OAAQW,MAMnDD,CAAuClC,G,MCRtD,MAAMoC,UAAcnF,YAAoC,eAAD,oBAC9CC,OAAS,KAAO,MAAD,EACoCC,KAAKC,MAArDiF,EADY,EACZA,SAAUxI,EADE,EACFA,QAASyI,EADP,EACOA,MAAOC,EADd,EACcA,OAAQC,EADtB,EACsBA,OAAQlE,EAD9B,EAC8BA,EAClD,OAAI+D,EAEA,yBACEhF,UAAWK,IAAW,QAAS,CAAE2E,WAAUxI,YAC3C+D,MAAO0E,EAAQ,CAAEG,gBAAgB,QAAD,OAAUH,EAAV,OAAwB,GACxDpE,QAAUrE,EAAmB2I,EAATD,GAElB1I,EAGA,kBAAC,EAAD,CAAM0D,KAAK,QAAQE,MAAOa,EAAE,iBAF5B,kBAAC,EAAD,CAAMf,KAAK,OAAOE,MAAOa,EAAE,kBAQ/B,yBACEjB,UAAWK,IAAW,QAAS,CAAE7D,YACjC+D,MAAO0E,EAAQ,CAAEG,gBAAgB,QAAD,OAAUH,EAAV,OAAwB,IAEvDzI,EAAU,kBAAC,EAAD,CAAM0D,KAAK,QAAQE,MAAOa,EAAE,oBAAwB,QAO1DE,qBAAkB4D,G,MCnBjC,MAAMM,WAAezF,YAAyC,eAAD,oBACpDC,OAAS,KAAO,MAAD,EAUhBC,KAAKC,MARPuF,EAFkB,EAElBA,QACAzG,EAHkB,EAGlBA,MACA0G,EAJkB,EAIlBA,UACAP,EALkB,EAKlBA,SACAxI,EANkB,EAMlBA,QACA0I,EAPkB,EAOlBA,OACAC,EARkB,EAQlBA,OACAlE,EATkB,EASlBA,EAEF,IAAKpC,EACH,OACE,yBAAKmB,UAAU,SACZsF,EACD,kBAAC,GAAD,CACEN,SAAUA,EACVxI,QAASA,EACTyI,MAAO,GACPC,OAAQA,EACRC,OAAQA,IAEV,yBAAKnF,UAAU,SACb,kBAACQ,EAAD,CAAaL,KAAK,QAInB,GAAkB,UAAdoF,EAAuB,CAChC,MAAMpJ,EAAQ0C,EACd,OACE,yBAAKmB,UAAU,eACZsF,EACD,kBAAC,GAAD,CACEN,SAAUA,EACVxI,QAASA,EACTyI,MAAO9I,EAAMqJ,YACbN,OAAQA,EACRC,OAAQA,IAEV,yBAAKnF,UAAU,SACb,yBAAKA,UAAU,mBACb,uBAAGgD,KAAM7G,EAAMsJ,KAAMC,OAAO,SAASC,IAAI,uBACtCxJ,EAAMiE,QAGX,yBAAKJ,UAAU,oBACb,uBACEgD,KAAM7G,EAAMyJ,OAAOH,KACnBC,OAAO,SACPC,IAAI,uBAEH1E,EAAE,YAAa,CAAE2E,OAAQzJ,EAAMyJ,OAAOtF,WAM5C,GAAkB,aAAdiF,EAA0B,CACnC,MAAMnJ,EAAWyC,EACjB,OACE,yBAAKmB,UAAU,kBACZsF,EACD,kBAAC,GAAD,CACEN,SAAUA,EACVxI,QAASA,EACTyI,MAAO7I,EAASyJ,cAChBX,OAAQA,EACRC,OAAQA,IAEV,yBAAKnF,UAAU,SACb,yBAAKA,UAAU,sBACb,uBAAGgD,KAAMnE,EAAM4G,KAAMC,OAAO,SAASC,IAAI,uBACtC9G,EAAMuB,QAGX,yBAAKJ,UAAU,wBACb,uBACEgD,KAAM5G,EAASkB,KAAKmI,KACpBC,OAAO,SACPC,IAAI,uBAEH1E,EAAE,YAAa,CAAE2E,OAAQxJ,EAASkB,KAAKgD,WAM7C,GAAkB,UAAdiF,EAAuB,CAChC,MAAMlJ,EAAQwC,EACd,OACE,yBAAKmB,UAAU,eACZsF,EACD,kBAAC,GAAD,CACEN,SAAUA,EACVxI,QAASA,EACTyI,MAAO5I,EAAMF,MAAMqJ,YACnBN,OAAQA,EACRC,OAAQA,IAEV,yBAAKnF,UAAU,SACb,yBAAKA,UAAU,mBACb,uBAAGgD,KAAM3G,EAAMoJ,KAAMC,OAAO,SAASC,IAAI,uBACtCtJ,EAAM+D,QAGX,yBAAKJ,UAAU,oBACb,uBACEgD,KAAM3G,EAAMuJ,OAAOH,KACnBC,OAAO,SACPC,IAAI,uBAEH1E,EAAE,YAAa,CAAE2E,OAAQvJ,EAAMuJ,OAAOtF,cAUxCa,qBAAkBkE,ICnIjC,MAAMS,WAAkBlG,YAAoC,eAAD,oBAClDC,OAAS,KAAO,MAAD,EAUhBC,KAAKC,MARPgG,EAFkB,EAElBA,OACAlH,EAHkB,EAGlBA,MACA0G,EAJkB,EAIlBA,UACA/I,EALkB,EAKlBA,QACA0I,EANkB,EAMlBA,OACAc,EAPkB,EAOlBA,SACAb,EARkB,EAQlBA,OACAlE,EATkB,EASlBA,EAEF,OACE,yBAAKjB,UAAU,aACb,kBAAC,GAAD,CACEnB,MAAOA,EACP0G,UAAWA,EACXP,WAAYnG,IAAUkH,EACtBvJ,QAASA,EACT0I,OAAQA,EACRC,OAAQA,EACRG,QACGS,EAMG,KALF,kBAAC,EAAD,CACE3F,MAAOa,EAAE,iBACTf,KAAK,QACLW,QAASmF,SAUV7E,qBAAkB2E,I,MC5CjC,MAAMG,WAAcrG,YAA0C,eAAD,oBACpDC,OAAS,KAAO,MAAD,EAYhBC,KAAKC,MAVPmG,EAFkB,EAElBA,OACAH,EAHkB,EAGlBA,OACA7J,EAJkB,EAIlBA,OACAM,EALkB,EAKlBA,QACA2J,EANkB,EAMlBA,aACAjB,EAPkB,EAOlBA,OACAc,EARkB,EAQlBA,SACAI,EATkB,EASlBA,SACAjB,EAVkB,EAUlBA,OACAlE,EAXkB,EAWlBA,EAEF,OACE,yBAAKjB,UAAU,SACZ9D,EAAOmK,OAAS,EACfnK,EAAOoK,IAAI,CAACzH,EAAO0H,IACjB,kBAAC,GAAD,CACEC,IAAKD,EACLR,OAAQA,EACRvJ,QAASA,GAAW2J,IAAiBI,EACrC1H,MAAOA,EACP0G,UAAU,QACVL,OAAQ,IAAMA,EAAOqB,GACrBP,SAAU,IAAMA,EAASO,GACzBpB,OAAQA,KAIZ,yBAAKnF,UAAU,cACZkG,EACC,oCACE,kBAAC,EAAD,CACE9F,MAAM,MACNF,KAAK,SACLW,QAASuF,EACTjG,KAAK,MAEP,0BAAMU,QAASuF,GAAWnF,EAAE,iBAG9B,oCACE,kBAACT,EAAD,CAAaL,KAAK,MAClB,8BAAOc,EAAE,uBAUVE,qBAAkB8E,IC5D1B,MAAMQ,GAAgB,CAC3BjI,EACAkI,KAEA,MAAMlJ,EAA2B,GAErBtB,EACRsC,EADFtC,OAAUA,OAHT,oBAKuBwK,GALvB,IAKH,2BAAyC,CAAC,MAA/BC,EAA8B,QACjC9H,EAAQ3C,EAAOyK,EAAYjI,MAAMiI,EAAY9J,IAC7CgC,EACJrB,EAAI4F,KAAKvE,GAETrB,EAAI4F,KAAK,OAVV,8BAaH,OAAO5F,G,6BCrBT,MAAMoJ,GAAS,CACbC,YAAaC,wCAGf7I,QAAQC,MAAM0I,IAECA,UCNR,MAAMG,GAASC,GACpB,IAAIxF,QAAQC,GAAWiD,WAAWjD,EAASuF,ICavCC,GAAcC,iBAAuBC,IACrCC,GAAmBF,YAAkBD,IAIrCI,GAAUD,GAAiBE,IAAI,WAC/BC,GAAQH,GAAiBE,IAAI,SAC7BE,GAAQJ,GAAiBE,IAAI,SAItBG,GAAe,CAAC5K,EAAYC,KACvC,MAAM4K,EAAQH,GAAMI,MAAM9K,GACpB+K,EAAQF,EAAMC,MAAM,QACpBE,EAAWR,GAAQM,MAAM9K,GAC/B,IAAIiL,EAAUhL,GAAU,GACxBmB,QAAQC,MAAM,cAAe4J,GAC7B,IAAIC,EAAoB,CACtBzH,KAAM,QACN9D,SAAS,EACT4C,MAAO,GACP4I,eAAgB,EAChBC,UAAW,EACXvJ,KAAM,MAwER,MAAO,CACLwJ,QAtEc,IAAMH,EAuEpBlL,KACAsL,SAtEe,KAAOL,EAuEtBM,UArEiBC,IACjBpK,QAAQC,MAAM,iBAAkBmK,GAChCP,EAAUO,GAoEVC,KAjEQ,uCAAG,sBAAA/G,EAAA,+EACX,IAAIC,QAAQ,CAACC,EAAS8G,KACpBX,EAAMY,KAAK,QAAUC,IACnB,MAAMC,EAAYD,EAASE,MACvBD,GACFX,EAAUW,EACVjH,EAAQsG,IAERQ,EAAO,IAAIK,MAAM,8BARZ,2CAAH,qDAkERC,cArDqBC,IACrBlB,EAAMmB,GAAG,QAASD,IAqDlBE,iBA9CuB,CAACC,EAAqBC,KAC7CrB,EAASkB,GAAG,cAAeE,GAC3BpB,EAASkB,GAAG,gBAAiBG,IA6C7BC,gBAnDuBL,IACvBlB,EAAMwB,IAAI,QAASN,IAmDnBO,mBA3CyB,CAACJ,EAAqBC,KAC/CrB,EAASuB,IAAI,cAAeH,GAC5BpB,EAASuB,IAAI,gBAAiBF,IA0C9BI,OAvCU,uCAAG,YAAO,KACpBhJ,EADoB,QAEpB9D,EAFoB,MAGpB4C,EAHoB,eAIpB4I,IAJa,SAAAzG,EAAA,kEAQA,IAATjB,IACFyH,EAAQzH,KAAOA,QAED,IAAZ9D,IACFuL,EAAQvL,QAAUA,QAEN,IAAV4C,IACF2I,EAAQ3I,MAAQA,QAEK,IAAnB4I,IACFD,EAAQC,eAAiBA,GAlBd,SAoBPN,EAAM6B,IAAI,CACdC,KAAK,eACAzB,EADD,CAEFE,UAAWf,YAAkBuC,YAAYC,YAE3C5M,OAAQgL,IAzBG,2CAAH,wDA6CD6B,GAAe,CAAC9M,EAAYC,KACvC,MAAM8M,EAAQpC,GAAMG,MAAM9K,GACpB+K,EAAQgC,EAAMjC,MAAM,QAC1B,IAAIkC,EAAkD,KAClD/B,EAAUhL,GAAU,GACpBiL,EAAoB,CACtBzH,KAAM,QACNwJ,QAAQ,EACRC,QAAS,GACTC,OAAQ,GACR/B,UAAW,GAGb,MAQMK,EAAI,uCAAG,sBAAA/G,EAAA,+EACX,IAAIC,QAAQ,CAACC,EAAS8G,KACpBX,EAAMY,KAAK,QAAUC,IACnB,MAAMC,EAAYD,EAASE,MACvBD,GACFX,EAAUW,EACVjH,EAAQsG,IAERQ,EAAO,IAAIK,MAAM,8BARZ,2CAAH,qDAqBJU,EAAM,uCAAG,YAAO,KACpBhJ,EADoB,QAEpByJ,IAFa,SAAAxI,EAAA,kEAIA,IAATjB,IACFyH,EAAQzH,KAAOA,QAED,IAAZyJ,IACFhC,EAAQgC,QAAUA,GARP,SAUPH,EAAML,IAAI,CACdC,KAAK,eACAzB,EADD,CAEF+B,QAAQ,EACRE,OAAQ,SACR/B,UAAWf,YAAkBuC,YAAYC,YAE3C5M,OAAQgL,IAjBG,OAmBbmC,IAnBa,2CAAH,sDAsBNA,EAAoB,KACxBL,EAAMM,eAAeC,SACrBP,EAAMM,eAAeX,IAAI,CACvBC,KAAK,eACAzB,EADD,CAEF+B,QAAQ,EACRC,QAAS,GACTC,OAAQ,eACR/B,UAAWf,YAAkBuC,YAAYC,YAE3C5M,OAAQgL,KA6BZ,MAAO,CACLjL,KACAuN,MA3BS,uCAAG,WAAOzN,GAAP,SAAA4E,EAAA,0DACRsI,EADQ,gCAEJA,EAAYQ,SAFR,OAGVR,EAAc,KAHJ,uBAKNP,EAAO,CACXS,QAASpN,EAAKE,KANJ,cAQZgN,EAAcxC,GAAQM,MAAMhL,EAAKE,IAAI8K,MAAM9K,GAC3CgN,EAAYK,eAAeG,SATf,UAUNR,EAAYN,IAAI,CACpBtB,UAAWf,YAAkBuC,YAAYC,YAX/B,4CAAH,sDA4BTY,KAbQ,uCAAG,sBAAA/I,EAAA,0DACPsI,EADO,gCAEHA,EAAYQ,SAFT,OAGTR,EAAc,KAHL,uBAKLP,EAAO,CACXS,QAAS,KANA,2CAAH,qDAcR5B,SA5Fe,KAAOL,EA6FtBM,UA3FiBC,IACjBP,EAAUO,GA2FVC,OACAO,cA5EqBC,IACrBlB,EAAMmB,GAAG,QAASD,IA4ElBK,gBAzEuBL,IACvBlB,EAAMwB,IAAI,QAASN,IAyEnBQ,SACApB,QApGc,IAAMH,ICjIXwC,GAAuBpM,GAClCA,EAAIqM,UAAYrM,EAAIqM,SAASC,MAAQtM,EAAIqM,SAASC,KAAK3F,QACnD3G,EAAIqM,SAASC,KAAK3F,QAClB3G,EAAI2G,QCSJyE,GAAOrN,GAAoBsH,EAAa,aAActH,GAItDwO,GAAa,CAACpJ,EAAeiF,EAAeoE,IAChDA,EAAKC,QAAQtJ,KAAWiF,EAIbsE,GAAa,CACxBC,EACAvF,EACAwF,EACAC,EACAC,IALwB,uCAMR,WAAO3G,EAAU4G,GAAU,OAAEC,EAAF,cAAUC,IAArC,6CAAA7J,EAAA,2DACZwJ,EAAS1E,OAAS,GADN,sBAIV6E,IADQhP,EAHE,EAGZA,OAAUA,OAHE,SAMM,UAAdqJ,EANQ,oBAQK8F,EAAcnP,EAArBG,MACFiP,EAAwBP,EAC3BhM,OAAQwM,IAAaF,EAAUE,IAC/BxM,OAAO2L,IACNc,EAAqB,KACrBF,EAAYjF,OAAS,GAbf,wBAcRpI,QAAQC,MAAM,oBAAqB,CAAE6M,SAAUO,IAdvC,UAeUH,EAAOM,WAAWH,GAf5B,QAeRE,EAfQ,OAgBRlH,EAASiF,GAAIiC,IAhBL,WAkBNR,IACF/M,QAAQC,MAAM,sBAAuB,CAAE6M,aACvCzG,EAASoH,GAAcZ,EAAUC,MAE/BE,EAtBM,wBAuBFM,EAAUR,EAAS,GACnB1O,EACJgP,EAAUE,IACVC,EAAUG,KAAMtP,GAAUA,EAAMQ,KAAO0O,GACzCtN,QAAQC,MAAM,sBAAuB,CAAE7B,QAAOkP,YA3BtC,UA4BFH,EAAcQ,KAAK,EAAGvP,EAAMQ,GAAIR,EAAM4O,QAAS,GA5B7C,mCAgCWY,EAAkB3P,EAA9BqJ,GACTtH,QAAQ6N,IAAI,OAAQ5P,GACd6P,EAA4BhB,EAC/BhM,OAAQiN,IAAiBH,EAAcG,IACvCjN,OAAO2L,IACNuB,EAAyB,KACzBF,EAAgB1F,OAAS,GAtCnB,wBAuCRpI,QAAQC,MAAM,wBAAyB,CAAE6M,SAAUgB,IAvC3C,UAwCcZ,EAAOe,KAAK3G,EAAWwG,GAxCrC,QAwCRE,EAxCQ,OAyCR3H,EAASiF,GAAI0C,IAzCL,QA2CV,GAAIjB,EAAS,CACX/M,QAAQC,MAAM,iCAAkC,CAAE6M,aADvC,cAEeA,GAFf,IAEX,2BAAWiB,EAAyB,QAC5BG,EACJN,EAAcG,IACdC,EAAcN,KAAMQ,GAAcA,EAAUtP,KAAOmP,GACrD1H,EACEoH,GACEZ,EACAqB,EAAUC,OAAQ9F,IAAKjK,GAAUA,EAAMQ,MATlC,+BAcb,GAAIoO,EAAS,CACP5O,EAAsB,KADf,cAEe0O,GAFf,IAEX,2BAAWiB,EAAyB,SAC5BG,EACJN,EAAcG,IACdC,EAAcN,KAAMQ,GAAcA,EAAUtP,KAAOmP,IACvCI,QAAUD,EAAUC,OAAO/F,OAAS,IAChDhK,EAAQ8P,EAAUC,OAAO,IAPlB,8BAUP/P,GACF4B,QAAQC,MAAM,uCACdoG,EAASuG,GAAWC,EAAU,QAAS,CAACzO,EAAMQ,KAAK,GAAO,KAE1DoB,QAAQC,MAAM,0CAvER,0DA4EZoG,EAASM,EAAa2F,GAAoB,EAAD,MA5E7B,0DANQ,0DCDpB8B,GAAU,CACd1P,EACA6M,IACGhG,EAAa,iBAAkB,CAAE7G,OAAMU,UAAWmM,IACjD8C,GAAgB,CAACzP,EAAYC,IACjC0G,EAAa,wBAAyB,CAAE3G,KAAIC,WACjCyP,GAAgBtM,GAC3BuD,EAAa,uBAAwBvD,GAI1BuM,GAAa,CAAClM,EAAcxD,IAAf,uCAA+C,WACvEwH,GADuE,eAAA/C,EAAA,sEAI/D1E,EAAK4P,eACXxO,QAAQC,MAAM,mBAAoB,CAAErB,KAAIC,WAL6B,SAM/D2K,GAAa5K,EAAIC,GAAQwM,OAAO,CAAEhJ,SAN6B,OAOrEgE,EAASoI,GAAU7P,EAAIC,IAP8C,gDASrEwH,EAASM,EAAa2F,GAAoB,EAAD,MAT4B,yDAA/C,sDAe1B,IAAIoC,GAAmB,KAEhB,MAAMD,GAAY,CAAC7P,EAAYC,IAAb,uCAA6C,WACpEwH,EACA4G,GAFoE,mBAAA3J,EAAA,2DAMhE2J,KADOvO,EALyD,EAKlE0C,MAAS1C,OAEEA,EAAKE,KAAOA,EAP2C,wBAQlEyH,EAASsI,MARyD,SAUhE3O,QAAQC,MAAM,mBAAoB,CAAErB,KAAIC,WAClC+P,EAAUpF,GAAa5K,EAAIC,GAX+B,KAYhEwH,EAZgE,KAYvD+H,GAZuD,KAY/CQ,EAZ+C,UAYhCA,EAAQvE,OAZwB,4DAahEhE,EAASgI,GAAczP,EAAIC,IAC3B6P,GAAelE,IACb,MAAMqE,EAAUrE,EAASE,MACzB,IAAIjC,EAA+B,GAC/BoG,EAAQ1N,QACVsH,EAAgBqG,OAAOC,QAAQF,EAAQ1N,OACpC6N,KAAK,CAACC,EAAQC,IAAWC,OAAOF,EAAO,IAAME,OAAOD,EAAO,KAC3D7G,IAAKzH,GAAUA,EAAM,IACxByF,EACEuG,GACE,SACA,QACAnE,EAAcJ,IAAKzH,GAAUA,EAAMhC,KACnC,GACA,KAINoB,QAAQ6N,IAAI,OAAQgB,GACpBxI,EACE+I,GAAS3G,EAAeoG,EAAQtQ,QAASsQ,EAAQ9E,iBAEnD1D,EAAS+H,GAAQQ,EAASC,KAE5BD,EAAQhE,cAAc8D,IACtBxJ,EAAQC,KAAR,gBAAsBvG,EAAtB,gBAAgCC,IAtCgC,kDAwChEwH,EAASM,EAAa2F,GAAoB,EAAD,MAxCuB,0DAA7C,wDA6CZqC,GAAW,2CAAmB,WAAOtI,EAAU4G,GAAjB,iBAAA3J,EAAA,wDAGrC2J,KADOvO,EAF8B,EAEvC0C,MAAS1C,QAGTsB,QAAQC,MAAM,mBACdvB,EAAKwM,gBAAgBwD,IACrBA,GAAc,KACdrI,EAAS+H,GAAQ,KAAM,OACvB/H,EAASgI,GAAc,GAAI,MATY,2CAAnB,wDAeXgB,GAAW,2CAAmB,WAAOhJ,EAAU4G,GAAjB,qBAAA3J,EAAA,wDAMrC2J,IANqC,IAEvC7L,MACE1C,EAHqC,EAGrCA,KACeE,EAJsB,EAIrCD,YAAeC,GAGfF,GAAQA,EAAKE,KAAOA,IACtBoB,QAAQC,MAAM,kBAAmB,CAAErB,OACnCF,EAAKyL,UAAU,IACf9D,EAASgI,GAAczP,EAAI,MAVY,2CAAnB,wDAcX0Q,GAAczQ,GAAD,uCAAiC,WACzDwH,EACA4G,GAFyD,qBAAA3J,EAAA,wDASrD2J,IATqD,IAKvD7L,MACE1C,EANqD,EAMrDA,KACeE,EAPsC,EAOrDD,YAAeC,GAGfF,GAAQA,EAAKE,KAAOA,IACtBoB,QAAQC,MAAM,oBAAqB,CAAErB,KAAIC,WACzCH,EAAKyL,UAAUtL,GACfwH,EAASgI,GAAczP,EAAIC,KAb4B,2CAAjC,wDCxHbuQ,GAAW,CACtBnR,EACAM,EACAE,IACG8G,EAAa,YAAa,CAAEtH,SAAQM,UAASE,aAIrC8Q,GAAa,2CAAmB,WAAOlJ,EAAU4G,GAAjB,iBAAA3J,EAAA,2DAGvC2J,MADOvO,EAFgC,EAEzC0C,MAAS1C,OAEEA,EAAKwL,WAJyB,iCAMvClK,QAAQC,MAAM,qBANyB,SAOjCvB,EAAK2M,OAAO,CAAElK,MAAO,GAAI4I,eAAgB,IAPR,uDASvC1D,EAASM,EAAa2F,GAAoB,EAAD,MACzCjG,EAASgJ,MAV8B,gCAazChJ,EAASM,EAAa,uBAbmB,yDAAnB,wDAiBb8G,GAAgB,CAC3BZ,EACA2C,IAF2B,uCAGX,WAAOnJ,EAAU4G,GAAjB,uBAAA3J,EAAA,2DAGZ2J,MADOvO,EAFK,EAEd0C,MAAS1C,OAEEA,EAAKwL,WAJF,sBAKVsF,EAASpH,OAAS,GALR,0BAQR6E,IADewC,EAPP,EAOVtO,MAASlD,OAPC,SAUV+B,QAAQC,MAAM,qBAAsB,CAAEuP,aAChCrO,EAAmB,GACzB,IAAIsO,EAAYpH,IAAKzH,GAAUA,EAAMhC,OAAQ4Q,GAAUE,QACrD,CAAC9Q,EAAI0J,KACHnH,EAAMmH,GAAS,CACb1J,KACAiO,WACApM,KAAM,WAjBF,UAqBJ/B,EAAK2M,OAAO,CAAElK,UArBV,0DAuBVkF,EAASM,EAAa2F,GAAoB,EAAD,MACzCjG,EAASgJ,MAxBC,gCA4BdhJ,EAASM,EAAa,uBA5BR,0DAHW,wDAmChBgJ,GAAmBrH,GAAD,uCAAgC,WAC7DjC,EACA4G,GAF6D,6BAAA3J,EAAA,2DAOzD2J,IAPyD,IAK3D9L,MAAiBsO,EAL0C,EAKlDxR,OAAqBQ,EAL6B,EAK7BA,WACrBC,EANkD,EAM3D0C,MAAS1C,OAEEA,EAAKwL,WAR2C,sBASvD5B,EAAQmH,EAAYrH,QATmC,iCAWvDpI,QAAQC,MAAM,yBAA0B,CAAEqI,UACpCsH,EAAWnR,EAAWgR,EAAYrH,OAClCjH,EAAmB,IACnBR,EAAO,IAAI8O,IACZI,OAAOvH,EAAO,GACnB3H,EAAK+O,QAAQ,CAAChH,EAAaJ,KACzBnH,EAAMmH,GAASI,IAjBsC,UAmBjDhK,EAAK2M,OAAO,CAChBlK,QACA4I,eAAgBzB,EAAQsH,EAAWnR,EAAW,EAAIA,IArBG,0DAwBvD4H,EAASM,EAAa2F,GAAoB,EAAD,MACzCjG,EAASgJ,MAzB8C,gCA6B3DhJ,EAASM,EAAa,uBA7BqC,0DAAhC,wDAiClBmJ,GAAoBC,GAAD,uCAAsC,WACpE1J,EACA4G,GAFoE,mBAAA3J,EAAA,2DAOhE2J,IAFiB+C,EAL+C,EAKlE7O,MAAS1C,WACAC,EANyD,EAMlE0C,MAAS1C,OAEEA,EAAKwL,WARkD,oBAS9D8F,IAAgBD,EAT8C,iCAW9D/P,QAAQC,MAAM,wBAAyB,CACrC+P,cACAD,gBAb4D,SAexDrR,EAAK2M,OAAO,CAAEtB,eAAgBgG,IAf0B,uDAiB9D1J,EAASM,EAAa2F,GAAoB,EAAD,MACzCjG,EAASgJ,MAlBqD,gCAsBlEhJ,EAASM,EAAa,uBAtB4C,yDAAtC,wDA4BnBsJ,GAAe,2CAAmB,WAAO5J,EAAU4G,GAAjB,qBAAA3J,EAAA,wDAGzC2J,IAHyC,IAE3C9L,MAAiBsO,EAF0B,EAElCxR,OAAqBQ,EAFa,EAEbA,SAE5BgR,EAAYrH,OAAS,IACvBpI,QAAQC,MAAM,sBACdoG,EACEyJ,GAAiBrR,EAAW,EAAIA,EAAW,EAAIgR,EAAYrH,OAAS,KAP3B,2CAAnB,wDAYf8H,GAAc,2CAAmB,WAAO7J,EAAU4G,GAAjB,qBAAA3J,EAAA,wDAGxC2J,IAHwC,IAE1C9L,MAAiBsO,EAFyB,EAEjCxR,OAAqBQ,EAFY,EAEZA,SAE5BgR,EAAYrH,OAAS,IACvBpI,QAAQC,MAAM,qBACdoG,EAASyJ,GAAiBrR,EAAW,KANK,2CAAnB,wD,sBCjI3B,MAAM0R,GAA0C,GAE1CC,GAAgB,CACpBjR,GAAI,CAAEH,EAAG,IAAKC,EAAG,IAAKC,EAAG,KACzBH,GAAI,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAMVmR,GAAS,uCAAG,WAAOC,GAAP,qBAAAhN,EAAA,yDACnB/D,EAAM6Q,IACNE,EAFmB,oBAGrB/Q,EAAM4Q,GAAMG,GAHS,0CAMGC,QAAUD,GANb,cAMXtJ,EANW,iBAOGA,EAAMwJ,OAAO,EAAG,GAAGC,cAAc,EAAG,GAPvC,QAOXC,EAPW,OAQXvR,EAAKoR,aAAeG,GAC1BP,GAAMG,GAAO/Q,EAAM,CACjBJ,KACAJ,GACS,KAAPI,EAAGH,EAAmB,KAAPG,EAAGF,EAAmB,KAAPE,EAAGD,EAAY,IACzC,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACjB,CAAEF,EAAG,IAAKC,EAAG,IAAKC,EAAG,MAdZ,kDAiBjBc,QAAQC,MAAM,kCAAd,MAjBiB,iCAqBhBV,GArBgB,0DAAH,sDCRhBoR,GAAyBC,GAC7BrL,EAAa,2BAA4BqL,GAM9BC,GAAc,2CAAmB,WAC5CxK,EACA4G,GACA,YAAE6D,IAH0C,SAAAxN,EAAA,sDAKvCyN,IAAkBC,KACrBC,GAAe5K,EAAU4G,EAAU6D,GACnCI,GAAe7K,EAAU4G,EAAU6D,GACnCzK,EAbgBd,EAAa,kBAKa,2CAAnB,0DAcd4L,GAAa,2CAAmB,WAC3C9K,EACA+K,GACA,YAAEN,IAHyC,SAAAxN,EAAA,0DAKvCyN,KAAiBC,GALsB,uBAMzCK,aAAaN,IACbA,GAAgB,KAChBM,aAAaL,IACbA,GAAgB,KATyB,SAUnCF,EAAYQ,OAVuB,OAWzCjL,EA7Bed,EAAa,gBA8B5Bc,EAASsK,GAAsB,IAZU,2CAAnB,0DAkBbY,GAAc,2CAAmB,WAC5CC,EACAC,GACA,cAAEtE,IAH0C,SAAA7J,EAAA,6DAK5CtD,QAAQC,MAAM,sBAL8B,SAMtCkN,EAAcmE,OANwB,2CAAnB,0DAW3B,IAAIP,GAAuC,KACvCC,GAAuC,KAE3C,MAAMU,GAAuB,CAC3BZ,EACAa,EACA1T,KAEA,IAAI2T,GAAgB,EACpB,MAAMC,EAAiBf,EAAYgB,oBAC7BC,EAAuBjB,EAAYkB,0BAczC,OAbID,IAAyBJ,EAGzBC,EAFEd,EAAYmB,YAECN,EAIbI,GAAwB,EAAIA,EAAuBJ,EAE9CE,IAAmB5T,EAAO0T,EAAqB1T,EAAOmK,QAAQxJ,KAEvEgT,EAAeD,GAEVC,GAGHX,GAAiB,CACrB5K,EACA4G,EACA6D,KAGAC,GAAgBtK,WAAU,sBAAC,gDAAAnD,EAAA,2DAMrB2J,IANqB,IAEvB9L,MAAiBsO,EAFM,EAEdxR,OAAqBQ,EAFP,EAEOA,SAEX0P,EAJI,EAGvBlQ,OACEA,OAAUG,QAGVqR,EAAYrH,OAAS,GAPA,uBASjB8J,EAAoBR,GACxBZ,EACArS,EACAgR,KAEuB,GAdF,wBAef0C,EAAYD,EAAoBzC,EAAYrH,OAC5CgK,EAAYjE,EAAOsB,EAAY0C,GAAWvT,IAChDoB,QAAQC,MAAM,0BAA2B,CACvCkS,YACAC,YACAF,sBAEF7L,EAASyJ,GAAiBoC,IAtBL,UAuBC3O,QAAQ8O,IAAI,CAChChC,GAAU+B,EAAUlU,MAAMqJ,aAC1BuJ,EAAYnD,KACVuE,EACAE,EAAUxT,GACVwT,EAAUpF,QACV,KA7BiB,qCAuBdhL,EAvBc,KAgCrBqE,EAASiI,GAAatM,IAhCD,QAoCvBiP,GAAe5K,EAAU4G,EAAU6D,GApCZ,wBAuCvB9Q,QAAQC,MAAM,8BACdoG,EAAS8K,MAxCc,4CA0CxB,MAGCD,GAAiB,CACrB7K,EACA4G,EACA6D,KAGAE,GAAgBvK,WAAW,KAGrBwG,IADF9L,MAASlD,OAEKmK,OAAS,IAEvB/B,EAASsK,GAAsBG,EAAYwB,2BAG3CpB,GAAe7K,EAAU4G,EAAU6D,KAEpC,MChIUlK,mBArBOrG,IAAD,CACnB0H,OAAQ5C,EAAa9E,GACrBuH,OAAQxC,EAAa/E,GACrBtC,OAAQuK,GAAcjI,EAAOA,EAAMY,MAAMlD,QACzCM,QAASgC,EAAMW,OAAO3C,QACtB2J,aAAc3H,EAAMY,MAAM1C,SAAW8B,EAAMY,MAAMlD,OAAOmK,SAGjC/B,IAAD,CACtBY,OAASqB,IACPjC,EAASwK,MACTxK,EAASyJ,GAAiBxH,KAE5BP,SAAWO,GAAkBjC,EAASsJ,GAAgBrH,IACtDH,SAAU,IAAM9B,EAASb,EAAU,CAAE/E,KAAM,SAAUqB,MAAO,QAC5DoF,OAAQ,IAAMb,EAAS8K,QAMVvK,CAAuCoB,I,MC1BtD,MAAMuK,WAAiB5Q,YAAwB,eAAD,oBACrCC,OAAS,KAAO,MAAD,EACOC,KAAKC,MAAxBvD,EADY,EACZA,QAAS8E,EADG,EACHA,MACjB,OACE,yBAAKtB,UAAWK,IAAW,WAAY,CAAE7D,aACvC,8BAAUiU,IAAK,IAAKnP,MAAe,IAARA,OAMpBkP,UCDA3L,mBAVOrG,IAAD,CACnBhC,QAASgC,EAAMW,OAAO3C,QACtB8E,MAAO9C,EAAMW,OAAO1C,gBAGG6H,IAAD,IAKTO,CAAuC2L,I,MCRtD,MAAME,WAAiB9Q,YAA0C,eAAD,oBACvDC,OAAS,KAAO,MAAD,EAYhBC,KAAKC,MAVP4Q,EAFkB,EAElBA,eACAC,EAHkB,EAGlBA,cACA1L,EAJkB,EAIlBA,OACAkB,EALkB,EAKlBA,SACAjB,EANkB,EAMlBA,OACA0L,EAPkB,EAOlBA,SACAC,EARkB,EAQlBA,YACA/K,EATkB,EASlBA,OACAvJ,EAVkB,EAUlBA,QACAyE,EAXkB,EAWlBA,EAEF,OACE,yBAAKjB,UAAU,YACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CACEU,SAAUqF,GAA0B,IAAhB+K,EACpB5Q,KAAK,gBACLW,QAAS8P,EACTxQ,KAAK,IACLC,MAAOa,EAAE,sBAGb,yBAAKjB,UAAU,WACXxD,EASA,kBAAC,EAAD,CACEkE,SAAUqF,GAA0B,IAAhB+K,EACpBjQ,QAASsE,EACTjF,KAAK,QACLE,MAAOa,EAAE,eACTd,KAAK,MAbP,kBAAC,EAAD,CACEO,SAAUqF,GAA0B,IAAhB+K,EACpBjQ,QAASqE,EACThF,KAAK,OACLC,KAAK,IACLC,MAAOa,EAAE,kBAYf,yBAAKjB,UAAU,WACb,kBAAC,EAAD,CACEU,SAAUqF,GAA0B,IAAhB+K,EACpB5Q,KAAK,eACLW,QAAS+P,EACTzQ,KAAK,IACLC,MAAOa,EAAE,sBAIf,kBAAC,GAAD,MACA,yBAAKjB,UAAU,eACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CACEU,SAAUqF,GAA0B,IAAhB+K,EACpBjQ,QAASf,KAAKiR,QACd7Q,KAAK,QACLE,MAAOa,EAAE,kBAGb,yBAAKjB,UAAU,WACb,kBAAC,EAAD,CACEa,QAASuF,EACTlG,KAAK,SACLE,MAAOa,EAAE,oBAGb,yBAAKjB,UAAU,WACZ+F,EACC,kBAAC,EAAD,CACE7F,KAAK,OACLW,QAASgQ,EACT1Q,KAAK,IACLC,MAAOa,EAAE,kBAGX,kBAAC,EAAD,CACEf,KAAK,SACLW,QAASf,KAAKkR,OACd7Q,KAAK,IACLC,MAAOa,EAAE,wBArFuC,KA8FtD8P,QAAU,KAAO,MAAD,EACYjR,KAAKC,MAA/BgR,EADc,EACdA,SACR7N,EAFsB,EACLA,YACPjC,EAFY,EACMA,GAChB,uBAAwB8P,IAhGwB,KAmGtDC,OAAS,KAAO,MAAD,EACIlR,KAAKC,OAC9BmD,EAFqB,EACbA,YACEjC,EAFW,EACFA,GACP,sBAAuBnB,KAAKC,MAAMiR,UAInC7P,qBAAkBuP,IC1ElB7L,mBA3BOrG,IAAD,CACnBsS,YAAatS,EAAMY,MAAMlD,OAAOmK,OAChCN,OAAQxC,EAAa/E,GACrBhC,QAASgC,EAAMW,OAAO3C,UAGC8H,IAAD,CACtByM,QAAS,KACPzM,EAASkJ,MACTlJ,EAAS8K,OAEXlM,UAAW,CAACW,EAAkBC,KAC5BQ,EAASV,EAAaC,EAAUC,KAElCkN,OAAQ,IAAM1M,EAASgJ,MACvBuD,SAAU,IAAMvM,EAASb,EAAU,CAAE/E,KAAM,aAAcqB,MAAO,QAChE+C,UAAYgC,GAAoBR,EAASH,EAAe,OAAQW,IAChE6L,eAAgB,IAAMrM,EAAS4J,MAC/B0C,cAAe,IAAMtM,EAAS6J,MAC9BjJ,OAAQ,IAAMZ,EAASwK,MACvB1I,SAAU,IAAM9B,EAASb,EAAU,CAAE/E,KAAM,SAAUqB,MAAO,QAC5DoF,OAAQ,IAAMb,EAAS8K,QAMVvK,CAAuC6L,I,MC1BtD,MAAMO,WAAarR,YAAgC,eAAD,oBACzCsR,kBAAoB,KACzBpR,KAAKC,MAAMoR,WAFmC,KAKzCC,qBAAuB,KAC5BtR,KAAKC,MAAM8C,UANmC,KASzChD,OAAS,KAAO,MAAD,EAGhBC,KAAKC,MADPE,MAASjD,EAFS,EAETA,GAAII,EAFK,EAELA,GAEf,OACE,yBACE4C,UAAU,OACVO,MAAO,CACLN,MAAM,OAAD,OAASjD,EAAGC,EAAZ,aAAkBD,EAAGE,EAArB,aAA2BF,EAAGG,EAA9B,KACLkU,gBAAgB,OAAD,OAASjU,EAAGH,EAAZ,aAAkBG,EAAGF,EAArB,aAA2BE,EAAGD,EAA9B,OAGjB,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,SAMOmU,mBAAWL,ICbXpM,mBArBM,CAACrG,EAAkB+S,KAAnB,CACnBtR,MAAOzB,EAAMa,MAAMtC,aAGG,CACtBuH,EACAiN,KACI,MACI/K,EAAQgL,QAASD,EAASxO,SAAS0O,OAAOC,OAAO,IAAjDlL,IAGR,MAAO,CACL2K,QAAS,IACP7M,EAASoI,GAAU6E,EAASI,MAAMC,OAAO7H,QAASvD,GAAO,KAC3D3D,OAAQ,IAAMyB,EAASsI,QAOZ/H,CAAuCoM,I,MCrBtD,MAAMY,WAAejS,YAA0C,eAAD,oBACrDC,OAAS,KAAO,MAAD,EACiCC,KAAKC,MAAlD+R,EADY,EACZA,SAAUC,EADE,EACFA,aAAcC,EADZ,EACYA,cAAe/Q,EAD3B,EAC2BA,EAC/C,OACE,yBAAKjB,UAAU,UACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAMiS,GAAG,KAAT,UAEF,yBAAKjS,UAAU,eACb,8BAAOiB,EAAE,wBACT,uBACE+B,KAAK,yBACL0C,OAAO,SACPC,IAAI,uBAEJ,yBACEuM,IAAI,qBACJC,OAAO,OACP/R,MAAM,SACNgS,IAAI,mBAKZ,yBAAKpS,UAAU,UACb,yBAAKA,UAAU,QACZ8R,EACC,yBAAK9R,UAAU,YACb,kBAAC,EAAD,CACEW,cAAc,EACdT,KAAK,OACLW,QAASkR,EACT5R,KAAK,IACLC,MAAOa,EAAE,mBAIb,oCACE,yBAAKjB,UAAU,YACb,kBAAC,EAAD,CACEW,cAAc,EACdE,QAASmR,EACT9R,KAAK,UACLC,KAAK,IACLC,MAAOa,EAAE,uBAOrB,yBAAKjB,UAAU,UACb,yBAAKA,UAAU,QACZ8R,EACC,yBAAK9R,UAAU,YACb,kBAAC,EAAD,CACEW,cAAc,EACdT,KAAK,WACLW,QAASf,KAAKoK,aACd/J,KAAK,IACLC,MAAOa,EAAE,uBAIb,yBAAKjB,UAAU,YACb,kBAAC,EAAD,CACEW,cAAc,EACdT,KAAK,OACLW,QAAS,OACTV,KAAK,IACLC,MAAOa,EAAE,qBAvEmC,KAiF5DiJ,aAAe,KAAO,MAAD,EACwBpK,KAAKC,MAAxCmD,EADW,EACXA,UAAWmP,EADA,EACAA,iBACnBnP,GAAUjC,EAFS,EACkBA,GACzB,4BAA6BoR,KAI9BlR,qBAAkB0Q,IC/F1B,MAAMS,GAAe9T,GAAqBA,EAAMc,MAAMjB,UCqBvDkU,GAAU,CACdjV,EACAkM,IACGhG,EAAa,iBAAkB,CAAElG,OAAMe,UAAWmL,IACjDgJ,GAAgB,CAAC3V,EAAYC,IACjC0G,EAAa,wBAAyB,CAAE3G,KAAIC,WAIjC2V,GAAa,CAACnS,EAAcxD,IAAf,uCAA+C,WACvEwH,GADuE,eAAA/C,EAAA,sEAIrEtD,QAAQC,MAAM,oBACRrB,EAAK4P,eAL0D,SAM/D9C,GAAa9M,EAAIC,GAAQwM,OAAO,CAAEhJ,SAN6B,OAOrEgE,EAASoO,GAAY7V,EAAIC,IAP4C,gDASrEwH,EAASM,EAAa2F,GAAoB,EAAD,MAT4B,yDAA/C,sDAe1B,IAAIoC,GAAmB,KAEhB,MAAM+F,GAAc,CAAC7V,EAAYC,IAAb,uCAA6C,WACtEwH,EACA4G,GAFsE,mBAAA3J,EAAA,2DAMlE2J,KADO5N,EAL2D,EAKpEgC,MAAShC,OAEEA,EAAKT,KAAOA,EAP6C,wBAQpEyH,EAASqO,MAR2D,SAUlE1U,QAAQC,MAAM,qBAAsB,CAAErB,KAAIC,WACpC8V,EAAUjJ,GAAa9M,GAXqC,KAYlEyH,EAZkE,KAYzDiO,GAZyD,KAYjDK,EAZiD,UAYlCA,EAAQtK,OAZ0B,4DAalEhE,EAASkO,GAAc3V,EAAIC,IAC3B6P,GAAelE,IACb,MAAMqE,EAAUrE,EAASE,MACzBrE,EAASiO,GAAQK,EAAS9F,KAE5B8F,EAAQ/J,cAAc8D,IAlB4C,kDAoBlErI,EAASM,EAAa2F,GAAoB,EAAD,MACzCjG,EAASkO,GAAc,GAAI,KArBuC,0DAA7C,wDA0BdG,GAAiB,2CAAmB,WAAOrO,EAAU4G,GAAjB,iBAAA3J,EAAA,wDAG3C2J,KADO5N,EAFoC,EAE7CgC,MAAShC,QAGTW,QAAQC,MAAM,yBACdZ,EAAK6L,gBAAgBwD,IACrBA,GAAc,KACd4F,GAAQ,KAAM,MACdjO,EAASkO,GAAc,GAAI,MATkB,2CAAnB,wDAajBK,GAAgB,2CAAmB,WAAOvO,EAAU4G,GAAjB,qBAAA3J,EAAA,wDAK1C2J,IAL0C,IAE5C5L,MACE/B,YAAeV,EAH2B,EAG3BA,GAAIC,EAHuB,EAGvBA,OAGnBD,GAAMC,IACRmB,QAAQC,MAAM,uBAAwB,CAAErB,KAAIC,WAC5CwH,EAASoO,GAAY7V,EAAIC,KARmB,2CAAnB,wDC5Dd+H,mBAjBOrG,IAAD,CACnBsT,WAAYtT,EAAMc,MAAM/B,YAAYV,GACpCS,KAAMgV,GAAY9T,KAGK8F,IAAD,CACtBpB,UAAW,CAACW,EAAkBC,KAC5BQ,EAASV,EAAaC,EAAUC,KAElCiO,aAAc,IAAMzN,EAASb,EAAU,CAAE/E,KAAM,aAAcqB,MAAO,QACpEiS,cAAe,IAAM1N,EAASb,EAAU,CAAE/E,KAAM,aAAcqB,MAAO,QACrEsS,iBAAkB,IAAM/N,EAASqO,QAMpB9N,CAAuCgN,I,SCXtD,MAAMiB,WAAclT,YAAkD,eAAD,oBAC5DC,OAAS,KAAO,MAAD,EAUhBC,KAAKC,MARPgT,EAFkB,EAElBA,SACA/S,EAHkB,EAGlBA,UACAI,EAJkB,EAIlBA,MACA4S,EALkB,EAKlBA,WACAC,EANkB,EAMlBA,QACAC,EAPkB,EAOlBA,MACAC,EARkB,EAQlBA,eACAlS,EATkB,EASlBA,EAEF,OACE,0BAAMjB,UAAWK,IAAW,QAASL,GAAYoT,SAAUtT,KAAKsT,UAC9D,yBAAKpT,UAAU,aACb,kBAAC,EAAD,CACEY,KAAK,UACLZ,UAAWK,IAAW,gBAAiB,CACrCgT,QAASF,IAEXjT,KAAK,aACLE,MAAM,OACNS,QAASqS,IAEX,yBAAKlT,UAAU,cAAcI,GAC7B,kBAAC,EAAD,CACEQ,KAAK,UACLZ,UAAU,iBACVa,QAASoS,EACT7S,MAAOa,EAAE,UACTf,KAAK,WAGT,yBAAKF,UAAU,aAAa+S,GAC5B,yBAAK/S,UAAU,aAAagT,GAAcA,OAlCmB,KAuC3DI,SAAYE,IAClBA,EAAMC,iBACFzT,KAAKC,MAAMqT,UACbtT,KAAKC,MAAMqT,aAKFjS,qBAAkB2R,IC5ClBjO,mBAZUrG,IAAD,CACtB2U,eAAgB3U,EAAMS,OAAO1C,MAAM8J,OAAS,IAGlB/B,IAAD,CACzB2O,QAAS,IAAM3O,EAASX,KACxBuP,MAAO,IAAM5O,EAASX,OAMTkB,CAA6CiO,I,MCL5D,MAAMU,WAAkB5T,YAAkB,eAAD,oBAChCC,OAAS,KAAO,MAAD,EAC4CC,KAAKC,MAA7DgT,EADY,EACZA,SAAU/S,EADE,EACFA,UAAWyT,EADT,EACSA,cAAerT,EADxB,EACwBA,MAAOgT,EAD/B,EAC+BA,SACnD,OACE,kBAAC,GAAD,CACEpT,UAAWK,IAAW,YAAaL,GACnCI,MAAOA,EACP4S,WAAYS,EACZL,SAAUA,GAETL,KAMMS,UChBf,MAAME,WAAqB9T,YAExB,eAAD,oBACOC,OAAS,KAAO,MAAD,EACIC,KAAKC,MAArB8D,EADY,EACZA,SAAU5C,EADE,EACFA,EAClB,OACE,kBAAC,GAAD,CACEb,MAAOa,EAAE,WACTmS,SAAUtT,KAAKC,MAAM+D,YACrB2P,cAAe3T,KAAK2T,eAEnB5P,IATP,KAcQ4P,cAAgB,KAAO,MACrBxS,EAAMnB,KAAKC,MAAXkB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,UACTL,KAAK,UACLV,KAAK,OACLxB,KAAK,WAEP,kBAACwC,EAAD,CAAcL,QAASf,KAAKC,MAAM4T,cAM3BxS,qBAAkBuS,ICjBlB7O,mBAnBOrG,IACb,IAGe,CACtB8F,EACAiN,KAFsB,CAItBoC,SAAU,KACRrP,EAASX,KACL4N,EAASxN,YACXwN,EAASxN,gBAQAc,CAAuC6O,IChBtD,MAAME,WAAyBhU,YAAiD,eAAD,oBACrEiU,MAAqCC,sBADgC,KAG7DtV,MAAe,CAC7B3B,GAAI,GACJC,OAAQ,IALmE,KActE+C,OAAS,KAAO,MACboB,EAAMnB,KAAKC,MAAXkB,EADY,EAEGnB,KAAKtB,MAApB3B,EAFY,EAEZA,GAAIC,EAFQ,EAERA,OACZ,OACE,kBAAC,GAAD,CACEsD,MAAOa,EAAE,oBACTmS,SAAUtT,KAAKiU,UACfN,cAAe3T,KAAK2T,eAEpB,yBAAKzT,UAAU,cACb,2BAAOgU,QAAQ,YAAY/S,EAAE,kBAC7B,2BACEpE,GAAG,WACH6B,KAAK,OACLuV,YAAahT,EAAE,wBACfiT,UAAW,GACXC,UAAW,GACXC,UAAU,EACV9S,MAAOzE,EACPyK,IAAKxH,KAAK+T,MACVQ,SAAWC,IACTxU,KAAKyU,SAAS,CAAE1X,GAAIyX,EAAE5O,OAAOpE,YAInC,yBAAKtB,UAAU,cACb,2BAAOgU,QAAQ,gBAAgB/S,EAAE,iBACjC,2BACEpE,GAAG,eACH6B,KAAK,WACLuV,YAAahT,EAAE,4BACfiT,UAAW,GACXC,UAAW,GACXC,UAAU,EACV9S,MAAOxE,EACPuX,SAAWC,IACTxU,KAAKyU,SAAS,CAAEzX,OAAQwX,EAAE5O,OAAOpE,cAlDgC,KA0DrEmS,cAAgB,KAAO,MACrBxS,EAAMnB,KAAKC,MAAXkB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,iBACTL,KAAK,UACLV,KAAK,UACLxB,KAAK,WAEP,kBAACwC,EAAD,CAAcL,QAASf,KAAKC,MAAMkT,UAClC,kBAAC,EAAD,CACE7S,MAAOa,EAAE,gBACTL,KAAK,UACLV,KAAK,OACLW,QAASf,KAAKC,MAAMyU,aAzEiD,KA+ErET,UAAY,KAAO,MAAD,EACgBjU,KAAKC,MAArCkT,EADgB,EAChBA,QAASc,EADO,EACPA,UAAWU,EADJ,EACIA,QADJ,EAED3U,KAAKtB,MAApB3B,EAFgB,EAEhBA,GAAIC,EAFY,EAEZA,OACa,IAArBD,EAAG6X,OAAOrO,OAIe,IAAzBvJ,EAAO4X,OAAOrO,QAIlB0N,EAAUlX,EAAIC,GACdmW,KAJEwB,EAAQ,2BAJRA,EAAQ,wBA3ELvD,oBACDpR,KAAK+T,MAAMc,SACb7U,KAAK+T,MAAMc,QAAQC,SAqFVzT,qBAAkByS,ICpFlB/O,mBAdOrG,IACb,IAGgB8F,IAAD,CACtB2O,QAAS,IAAM3O,EAASX,KACxBoQ,UAAW,CAAClX,EAAYC,IAAmBwH,EAASoO,GAAY7V,EAAIC,IACpE2X,QAAU3P,GAAoBR,EAASM,EAAaE,IACpD0P,SAAU,IAAMlQ,EAASb,EAAU,CAAE/E,KAAM,aAAcqB,MAAO,UAMnD8E,CAAuC+O,ICRtD,MAAMiB,WAAoBjV,YAAkD,eAAD,iCAClEC,OAAS,KAAO,MAAD,EACgCC,KAAKC,MAAjDlD,EADY,EACZA,GAAIiY,EADQ,EACRA,MAAOT,EADC,EACDA,SAAUJ,EADT,EACSA,YAAa3S,EADtB,EACsBA,MAC1C,OACE,yBAAKtB,UAAU,cACb,2BAAOgU,QAASnX,GAAKiY,GACrB,yBACEvU,MAAO,CACLwU,QAAS,OACTC,cAAe,MACfC,eAAgB,kBAGlB,2BACE1U,MAAO,CACL2U,SAAU,EACVC,YAAa,UAEftY,GAAIA,EACJ6B,KAAK,WACLuV,YAAaA,EACbC,UAAW,GACXC,UAAW,GACXC,UAAU,EACV9S,MAAOA,EACP+S,SAAWC,GAAMD,EAASC,EAAE5O,OAAOpE,SAErC,kBAAC,EAAD,CACEpB,KAAK,YACLW,QAASf,KAAKsV,kBACdjV,KAAK,IACLC,MAAK,yBA/B0D,KAsCjEgV,kBAtCiE,sBAsC7C,kCAAA7T,EAAA,+DACM,EAAKxB,MAA7B+C,EADkB,EAClBA,UAAWxB,EADO,EACPA,MAAOL,EADA,EACAA,EADA,SAEpBI,EAAgBC,GAFI,OAG1BwB,EAAU7B,EAAE,+BAHc,4CAOfE,qBAAkB0T,IC7ClBhQ,mBATUrG,IAAD,IAEI8F,IAAD,CACzBxB,UAAYgC,GAAoBR,EAASH,EAAe,OAAQW,MAMnDD,CAA6CgQ,ICN5D,IAAIQ,GAAe,EASnB,MAAMC,WAAwB1V,YAAiD,eAAD,oBACpE2V,QAAuCzB,sBAD6B,KAG5DtV,MAAe,CAC7B8B,KAAM,GACNxD,OAAQ2P,gBALkE,KAiBrE5M,OAAS,KAAO,MACboB,EAAMnB,KAAKC,MAAXkB,EADY,EAEKnB,KAAKtB,MAAtB8B,EAFY,EAEZA,KAAMxD,EAFM,EAENA,OACd,OACE,kBAAC,GAAD,CACEsD,MAAOa,EAAE,uBACTmS,SAAUtT,KAAK0V,SACf/B,cAAe3T,KAAK2T,eAEpB,yBAAKzT,UAAU,cACb,2BAAOgU,QAAQ,cAAc/S,EAAE,eAC/B,2BACEpE,GAAG,aACH6B,KAAK,OACLuV,YAAahT,EAAE,0BACfiT,UAAW,IACXC,UAAW,EACXC,UAAU,EACV9S,MAAOhB,EACPgH,IAAKxH,KAAKyV,QACVlB,SAAWC,GAAMxU,KAAKyU,SAAS,CAAEjU,KAAMgU,EAAE5O,OAAOpE,WAGpD,kBAAC,GAAD,CACEzE,GAAG,eACHiY,MAAO7T,EAAE,aACTgT,YAAahT,EAAE,yBACfK,MAAOxE,EACPuX,SAAWhM,GAAcvI,KAAKyU,SAAS,CAAEzX,OAAQuL,QA7CmB,KAmDpEoL,cAAgB,KAAO,MACrBxS,EAAMnB,KAAKC,MAAXkB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,gBACTL,KAAK,UACLV,KAAK,OACLxB,KAAK,WAEP,kBAACwC,EAAD,CAAcL,QAASf,KAAKC,MAAMkT,YA7DoC,KAkEpEuC,SAAW,KAAO,MAAD,EACgB1V,KAAKC,MAApCkT,EADe,EACfA,QAASuC,EADM,EACNA,SAAUf,EADJ,EACIA,QADJ,EAEE3U,KAAKtB,MAAtB8B,EAFe,EAEfA,KAAMxD,EAFS,EAETA,OACa,IAAvBwD,EAAKoU,OAAOrO,OAIa,IAAzBvJ,EAAO4X,OAAOrO,QAIlBmP,EAASlV,EAAMxD,GACfmW,IACAoC,MALEZ,EAAQ,2BAJRA,EAAQ,0BA9DLvD,oBACLpR,KAAKyU,SAAS,CACZjU,KAAK,GAAD,OAAKR,KAAKC,MAAMkB,EAAE,cAAlB,YAAmCoU,MAErCvV,KAAKyV,QAAQZ,SACf7U,KAAKyV,QAAQZ,QAAQC,SAsEZzT,qBAAkBmU,IC9ElBzQ,mBAdOrG,IACb,IAGgB8F,IAAD,CACtB2O,QAAS,IAAM3O,EAASX,KACxB6R,SAAU,CAAClV,EAAcxD,IACvBwH,EAASkI,GAAWlM,EAAMxD,IAC5B2X,QAAU3P,GAAoBR,EAASM,EAAaE,MAMvCD,CAAuCyQ,ICdtD,IAAIG,GAAe,EASnB,MAAMC,WAAwB9V,YAAiD,eAAD,oBACpE2V,QAAuCzB,sBAD6B,KAG5DtV,MAAe,CAC7B8B,KAAM,GACNxD,OAAQ2P,gBALkE,KAiBrE5M,OAAS,KAAO,MACboB,EAAMnB,KAAKC,MAAXkB,EADY,EAEKnB,KAAKtB,MAAtB8B,EAFY,EAEZA,KAAMxD,EAFM,EAENA,OACd,OACE,kBAAC,GAAD,CACEsD,MAAOa,EAAE,uBACTmS,SAAUtT,KAAK0V,SACf/B,cAAe3T,KAAK2T,eAEpB,yBAAKzT,UAAU,cACb,2BAAOgU,QAAQ,cAAc/S,EAAE,eAC/B,2BACEpE,GAAG,aACH6B,KAAK,OACLuV,YAAahT,EAAE,0BACfiT,UAAW,IACXC,UAAW,EACXC,UAAU,EACV9S,MAAOhB,EACPgH,IAAKxH,KAAKyV,QACVlB,SAAWC,GAAMxU,KAAKyU,SAAS,CAAEjU,KAAMgU,EAAE5O,OAAOpE,WAGpD,kBAAC,GAAD,CACEzE,GAAG,eACHiY,MAAO7T,EAAE,gBACTgT,YAAahT,EAAE,4BACfK,MAAOxE,EACPuX,SAAWhM,GAAcvI,KAAKyU,SAAS,CAAEzX,OAAQuL,QA7CmB,KAmDpEoL,cAAgB,KAAO,MACrBxS,EAAMnB,KAAKC,MAAXkB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,gBACTL,KAAK,UACLV,KAAK,OACLxB,KAAK,WAEP,kBAACwC,EAAD,CAAcL,QAASf,KAAKC,MAAMkT,UAClC,kBAAC,EAAD,CACE7S,MAAOa,EAAE,iBACTL,KAAK,UACLV,KAAK,UACLW,QAASf,KAAKC,MAAMyU,aAlEgD,KAwEpEgB,SAAW,KAAO,MAAD,EACgB1V,KAAKC,MAApCkT,EADe,EACfA,QAASuC,EADM,EACNA,SAAUf,EADJ,EACIA,QADJ,EAEE3U,KAAKtB,MAAtB8B,EAFe,EAEfA,KAAMxD,EAFS,EAETA,OACa,IAAvBwD,EAAKoU,OAAOrO,OAIa,IAAzBvJ,EAAO4X,OAAOrO,QAIlBmP,EAASlV,EAAMxD,GACfmW,IACAwC,MALEhB,EAAQ,2BAJRA,EAAQ,0BApELvD,oBACLpR,KAAKyU,SAAS,CACZjU,KAAK,GAAD,OAAKR,KAAKC,MAAMkB,EAAE,cAAlB,YAAmCwU,MAErC3V,KAAKyV,QAAQZ,SACf7U,KAAKyV,QAAQZ,QAAQC,SA4EZzT,qBAAkBuU,ICnFlB7Q,mBAfOrG,IACb,IAGgB8F,IAAD,CACtB2O,QAAS,IAAM3O,EAASX,KACxB6R,SAAU,CAAClV,EAAcxD,IACvBwH,EAASmO,GAAWnS,EAAMxD,IAC5B2X,QAAU3P,GAAoBR,EAASM,EAAaE,IACpD0P,SAAU,IAAMlQ,EAASb,EAAU,CAAE/E,KAAM,cAAeqB,MAAO,UAMpD8E,CAAuC6Q,I,oBCXtD,MAwEMC,GAAgBxZ,IAAD,CACnByJ,OAAQ,CACN/I,GAAIV,EAAMyJ,OAAO/I,GAAG+Y,WACpBtV,KAAMnE,EAAMyJ,OAAOtF,KACnBmF,KAAK,iCAAD,OAAmCtJ,EAAMyJ,OAAO/I,IACpDgZ,YAAa1Z,EAAMyJ,OAAOiQ,YAC1BhQ,cAAe1J,EAAMyJ,OAAOC,eAE9BiQ,UAAW3Z,EAAM2Z,UACjBtQ,YAAarJ,EAAMqJ,YACnB3I,GAAIV,EAAMU,GAAG+Y,WACbnQ,KAAK,gCAAD,OAAkCtJ,EAAMU,IAC5CuD,MAAOjE,EAAMiE,MACbgM,YACmB,IAAjBjQ,EAAMiQ,OACFjQ,EAAMiQ,OAAO3B,KAAKnE,IAAKjK,GAAU0Z,GAAa1Z,EAAOF,SACrD,EACNuC,KAAM,UAGFsX,GAAkB,CACtB5Z,EACAkB,KAFsB,CAItBT,GAAIT,EAASS,GAAG+Y,WAChBnQ,KAAK,mCAAD,OAAqCrJ,EAASS,IAClDgZ,YAAazZ,EAASyZ,YACtBhQ,cAAezJ,EAASyJ,cACxBoQ,OAAQ7Z,EAAS6Z,OACjB7V,MAAOhE,EAASgE,MAChBgM,YACsB,IAApBhQ,EAASgQ,OACLhQ,EAASgQ,OAAO3B,KAAKnE,IAAKjK,GAAU0Z,GAAa1Z,EAAOA,EAAMF,aAC9D,EACNuC,KAAM,WACNpB,KAAM,CACJT,GAAIS,EAAKT,GAAG+Y,WACZtV,KAAMhD,EAAKgD,KACXmF,KAAK,kCAAD,OAAoCnI,EAAKT,OAI3CkZ,GAAe,CACnB1Z,EACAF,KAFmB,CAInBA,MAAO,CACLU,GAAIV,EAAMU,GAAG+Y,WACbnQ,KAAK,gCAAD,OAAkCtJ,EAAMU,IAC5CuD,MAAOjE,EAAMiE,MACb0V,UAAW3Z,EAAM2Z,UACjBtQ,YAAarJ,EAAMqJ,aAErBI,OAAQ,CACN/I,GAAIR,EAAMuJ,OAAO/I,GAAG+Y,WACpBtV,KAAMjE,EAAMuJ,OAAOtF,KACnBmF,KAAK,iCAAD,OAAmCpJ,EAAMuJ,OAAO/I,IACpDgZ,YAAaxZ,EAAMuJ,OAAOiQ,YAC1BhQ,cAAexJ,EAAMuJ,OAAOC,eAE9BxB,SAAUhI,EAAMgI,SAChBxH,GAAIR,EAAMQ,GAAG+Y,WACbnQ,KAAK,gCAAD,OAAkCpJ,EAAMQ,IAC5CoO,QAAS5O,EAAM4O,QACfiL,SAAU7Z,EAAM6Z,SAChB9V,MAAO/D,EAAM+D,MACb1B,KAAM,UAoIKyX,GA/HY,MACvB,MAEMC,EAAkB7H,GACtB,IAAI/M,QAAQ,CAACC,EAAS8G,KACpB8N,KAAM9H,OAAK,EAAQ,CAACpQ,EAAKsM,KACnBtM,EACFoK,EAAO,IAAIK,MAAMzK,EAAI2G,UAErBrD,EAAQgJ,OAKV6L,EAAK,uCAAG,WAAUC,EAAc/E,GAAxB,eAAAjQ,EAAA,6DAENiV,EAAWhF,EAAE,UAfJ,yBAeI,YACA+E,EADA,YACQ/E,EADR,qCAfJ,yBAeI,YAEA+E,EAFA,2BAFP,SAKCH,EAAeI,GALhB,mFAAH,wDAQLC,EAAU,CAAI/X,EAAiBgY,IACnCJ,EAAK,iBACO5X,GADP,YAEEiY,mBAAmBD,KAGtBE,EAAQ,CACZlY,EACAmY,IAEArV,QAAQ8O,IACNuG,EAAIvQ,IAAJ,uCAAQ,WAAOzJ,GAAP,eAAA0E,EAAA,sEACc+U,EAAK,UAAO5X,EAAP,YAAe7B,IADlC,cACAgC,EADA,yBAECA,EAAM5C,MAAQ,KAAO4C,GAFtB,2CAAR,wDAMEiY,EAAc,uCAAG,WACrBpY,EACAmY,GAFqB,uBAAAtV,EAAA,sDAIjBwV,GAAQ,EACN7a,EAA0B2a,EAAIvQ,IAAI,IAAM,MALzB,WAMdpK,EAAO8a,SAAS,MANF,oBAObC,EAAmB,GACnBC,EAAuB,GAC7Bhb,EAAOyR,QAAQ,CAAC9O,EAAO0H,KAChB1H,IACHoY,EAAO7T,KAAKyT,EAAItQ,IAChB2Q,EAAW9T,KAAKmD,MAGfwQ,EAfc,wBAgBjB9Y,QAAQC,MAAR,uCAAsD,CAAE+Y,WAhBvC,UAiBXlQ,GAvMW,KAsLA,yBAmBK6P,EAASlY,EAAMuY,GAnBpB,QAmBbE,EAnBa,OAoBnBD,EAAWvJ,QAAQ,CAACpH,EAAO6Q,KACzBlb,EAAOqK,GAAS4Q,EAAUC,KAE5BL,GAAQ,EAvBW,gDAyBd7a,GAzBc,4CAAH,wDA4Bdmb,EAAgBX,GAAkBD,EAAkB,QAASC,GAE7DY,EAAmBZ,GACvBD,EAAqB,WAAYC,GAE7Ba,EAAgBb,GAAkBD,EAAkB,QAASC,GAE7Dc,EAAS,uCAAG,WAAOd,GAAP,uBAAAnV,EAAA,sEACuBC,QAAQ8O,IAAI,CACjD+G,EAAaX,GACbY,EAAgBZ,GAChBa,EAAab,KAJC,2CACTva,EADS,KACFC,EADE,KACQC,EADR,uBAMT,CAELF,MAAOA,EAAMsO,KAAKnE,IAAIqP,IACtBvZ,SAAUA,EAASqO,KAAKnE,IAAKlK,GAC3B4Z,GAAgB5Z,EAAUA,EAASkB,OAErCjB,MAAOA,EAAMoO,KAAKnE,IAAKjK,GAAU0Z,GAAa1Z,EAAOA,EAAMF,UAZ7C,2CAAH,sDAgBTsb,EAAU,uCAAG,WAAOZ,GAAP,eAAAtV,EAAA,sEACIuV,EAAyB,QAASD,GADtC,cACXa,EADW,yBAEVA,EAAOpR,IAAKnK,GAAUwZ,GAAaxZ,KAFzB,2CAAH,sDAKVwb,EAAa,uCAAG,WAAOd,GAAP,eAAAtV,EAAA,sEACIuV,EAA4B,WAAYD,GAD5C,cACde,EADc,yBAEbA,EAAUtR,IAAKlK,GACpB4Z,GAAgB5Z,EAAUA,EAASyb,WAHjB,2CAAH,sDAObpM,EAAU,uCAAG,WAAOoL,GAAP,eAAAtV,EAAA,sEACIuV,EAAyB,QAASD,GADtC,cACXzK,EADW,yBAEVA,EAAO9F,IAAKjK,GAAU0Z,GAAa1Z,EAAOA,EAAMF,SAFtC,2CAAH,sDAgBhB,MAAO,CACLqb,YACAtL,KAbQ,uCAAG,WAAOxN,EAAiBmY,GAAxB,SAAAtV,EAAA,2DACH7C,EADG,OAEJ,UAFI,OAIJ,aAJI,OAMJ,UANI,+CAGA+Y,EAAWZ,IAHX,gCAKAc,EAAcd,IALd,gCAOApL,EAAWoL,IAPX,2CAAH,wDAcRpL,eAMuBqM,GCnMdC,GAAgD,CAC3D,CACEjD,MAAO,gBACPhK,SAAU,SACVpM,KAAM,SAER,CACEoW,MAAO,mBACPhK,SAAU,SACVpM,KAAM,YAER,CACEoW,MAAO,gBACPhK,SAAU,SACVpM,KAAM,UCxEKsZ,OAtBc,EAC3BC,QACAnD,QACAhM,QAMAmP,EAAM5R,OAAS,EACb,oCACE,yBAAKrG,UAAU,cACb,+BAAQ8U,IAETmD,EAAMC,MAAM,EAlBO,GAkBe5R,IAAK6R,GACtC,yBAAK3R,IAAK2R,EAAKtb,GAAImD,UAAU,cAC3B,yBAAKA,UAAU,oBAAoB8I,EAAGqP,OAI1C,K,MCHN,MAAMC,WAAoBxY,YAAiD,eAAD,iCAChEyY,SAAwCvE,sBADwB,KAGxDtV,MAAe,CAC7B8Z,eAAgB,GAChBC,iBAAkB,QAClBzN,SAAU,SACV4L,MAAO,GACP8B,QAAS,CAEPrc,MAAO,GACPC,SAAU,GACVC,MAAO,KAZ6D,KA0BjEwD,OAAS,KAAO,MACboB,EAAMnB,KAAKC,MAAXkB,EACR,OACE,kBAAC,GAAD,CACEjB,UAAU,cACVI,MAAOa,EAAE,wBACTmS,SAAUtT,KAAKsG,SACfqN,cAAe3T,KAAK2T,eAEnB3T,KAAK2Y,eACL3Y,KAAK4Y,kBApC4D,KAyChEjF,cAAgB,KAAO,MACrBxS,EAAMnB,KAAKC,MAAXkB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,iBACTL,KAAK,UACLV,KAAK,SACLxB,KAAK,WAEP,kBAACwC,EAAD,CAAcL,QAASf,KAAKC,MAAMkT,YAnDgC,KAwDhEwF,aAAe,KAAO,MACpBxX,EAAMnB,KAAKC,MAAXkB,EACAyV,EAAU5W,KAAKtB,MAAfkY,MACR,OACE,yBAAK1W,UAAU,cACb,2BACEnD,GAAG,cACH6B,KAAK,OACLuV,YAAahT,EAAE,6BACfiT,UAAW,IACXC,UAAW,EACXC,UAAU,EACV9S,MAAOoV,EACPpP,IAAKxH,KAAKuY,SACVhE,SAAWC,IACTxU,KAAKyU,SAAS,CAAEmC,MAAOpC,EAAE5O,OAAOpE,aAvE8B,KA8EhEoX,cAAgB,KAAO,MAAD,EACI5Y,KAAKC,MAA7B4Y,EADoB,EACpBA,SAAU5S,EADU,EACVA,OAAQ9E,EADE,EACFA,EADE,EAEoCnB,KAAKtB,MAA7D8Z,EAFoB,EAEpBA,eAAgBC,EAFI,EAEJA,iBAAkBzN,EAFd,EAEcA,SAAU0N,EAFxB,EAEwBA,QACpD,OAAOT,GAAuBzR,IAAI,EAAGwO,QAAOpW,UAC1C,kBAAC,GAAD,CACE8H,IAAK9H,EACLoW,MAAO7T,EAAE6T,GACTmD,MAAOO,EAAQ9Z,GACfoK,GAAKjK,GACH,kBAAC,GAAD,CACEyG,QACGS,EAMG,KALF,kBAAC,EAAD,CACE3F,MAAOa,EAAE,cACTf,KAAK,OACLW,QAAS,IAAM8X,EAAS7N,EAAUpM,EAAMG,EAAMhC,MAIpDgC,MAAOA,EACP0G,UAAW7G,EACXsG,UAAU,EACVxI,QAAS+b,IAAqB7Z,GAAQ4Z,IAAmBzZ,EAAMhC,GAC/DqI,OAAQ,IAAMpF,KAAK8Y,eAAela,EAAMG,EAAMhC,IAC9CsI,OAAQrF,KAAK+Y,oBAtGiD,KA6GhEzS,SA7GgE,sBA6GrD,4BAAA7E,EAAA,4DACTmV,EAAU,EAAKlY,MAAfkY,OACEhC,OAAOrO,OAAS,GAFT,4BAGf,EAHe,SAGgB8P,GAAYqB,UAAUd,GAHtC,yBAGC8B,QAHD,WAGVjE,SAHU,2DA7GqD,KAoHhEqE,eAAiB,CACvBL,EACAD,KAEAxY,KAAKC,MAAMmF,OAAOpF,KAAKtB,MAAMsM,SAAUyN,EAAkBD,GACzDxY,KAAKyU,SAAS,CACZ+D,iBACAC,sBA3HoE,KA+HhEM,cAAgB,KACtB/Y,KAAKC,MAAMoF,SACXrF,KAAKyU,SAAS,CACZ+D,eAAgB,GAChBC,iBAAkB,WAnHfrH,oBACDpR,KAAKuY,SAAS1D,SAChB7U,KAAKuY,SAAS1D,QAAQC,QAInBxD,uBACLtR,KAAKC,MAAMoF,UAiHAhE,qBAAkBiX,ICtIlBvT,mBAhBOrG,IAAD,CACnBuH,OAAQxC,EAAa/E,KAGE8F,IAAD,CACtB2O,QAAS,IAAM3O,EAASX,KACxBgV,SAAU,CAAC7N,EAAwBvF,EAAsBuT,IACvDxU,EAASuG,GAAWC,EAAUvF,EAAW,CAACuT,IAAU,GAAM,IAC5D5T,OAAQ,CAAC4F,EAAwBvF,EAAsBuT,IACrDxU,EAASuG,GAAWC,EAAUvF,EAAW,CAACuT,IAAU,GAAO,IAC7D3T,OAAQ,IAAMb,EAASkL,QAMV3K,CAAuCuT,IChBtD,MAAMW,WAAwBnZ,YAAiD,eAAD,oBACpEoZ,UAAyClF,sBAD2B,KAG5DtV,MAAe,CAC7B1B,OAAQ,IAJkE,KAarE+C,OAAS,KAAO,MACboB,EAAMnB,KAAKC,MAAXkB,EACAnE,EAAWgD,KAAKtB,MAAhB1B,OACR,OACE,kBAAC,GAAD,CACEsD,MAAOa,EAAE,wBACTmS,SAAUtT,KAAK+Q,SACf4C,cAAe3T,KAAK2T,eAEpB,yBAAKzT,UAAU,cACb,2BAAOgU,QAAQ,gBAAgB/S,EAAE,cACjC,2BACEpE,GAAG,eACH6B,KAAK,WACLuV,YAAahT,EAAE,yBACfiT,UAAW,GACXC,UAAW,GACXC,UAAU,EACV9S,MAAOxE,EACPwK,IAAKxH,KAAKkZ,UACV3E,SAAWC,IACTxU,KAAKyU,SAAS,CAAEzX,OAAQwX,EAAE5O,OAAOpE,cAlC+B,KA0CpEmS,cAAgB,KAAO,MACrBxS,EAAMnB,KAAKC,MAAXkB,EACR,OACE,oCACE,kBAAC,EAAD,CACEb,MAAOa,EAAE,gBACTL,KAAK,UACLV,KAAK,SACLxB,KAAK,WAEP,kBAACwC,EAAD,CAAcL,QAASf,KAAKC,MAAMkT,YApDoC,KAyDpEpC,SAAW,KAAO,MAAD,EACO/Q,KAAKC,MAA3BkT,EADe,EACfA,SACRpC,EAFuB,EACNA,UACR/Q,KAAKtB,MAAM1B,QACpBmW,KArDK/B,oBACDpR,KAAKkZ,UAAUrE,SACjB7U,KAAKkZ,UAAUrE,QAAQC,SAuDdzT,qBAAkB4X,ICvDlBlU,mBAZOrG,IACb,IAGgB8F,IAAD,CACtB2O,QAAS,IAAM3O,EAASX,KACxBkN,SAAW/T,GAAmBwH,EAASiJ,GAAWzQ,MAMrC+H,CAAuCkU,I,MCqBtD,MAAME,WAAerZ,YAA+B,eAAD,oBACjCpB,MAAe,CAC7B0a,iBAAa,EACbC,iBAAa,GAHkC,KAM1CjI,kBAAoB,KACzBvP,SAASyX,iBAAiB,UAAWtZ,KAAKuZ,YAPK,KAU1CjI,qBAAuB,KAC5BzP,SAAS2X,oBAAoB,UAAWxZ,KAAKuZ,YAXE,KAc1CE,mBAAsBC,IAC3B,MAAMC,EAAYD,EAAU9V,OACtBgW,EAAY5Z,KAAKC,MAAM2D,OACzB+V,IAAcC,GAEhB5Z,KAAKyU,SACH,CACE2E,iBAAa,EACbC,YAAaM,GAEf,KACMC,GACFhV,WAAW,KACT5E,KAAKyU,SAAS,CACZ2E,YAAaQ,KAxDH,QA4ByB,KAqC1C7Z,OAAS,KAAO,MAAD,EACiBC,KAAKtB,MAAlC0a,EADY,EACZA,YAAaC,EADD,EACCA,YACfzV,EAASwV,GAAeC,EAC9B,IAAIQ,EAAQ,KAIZ,OAHIjW,IACFiW,EAlEmBjW,KACvB,OAAQA,EAAOhF,MACb,IAAK,UACH,OAAO,kBAAC,GAAiBgF,EAAO3D,OAClC,IAAK,cACH,OAAO,kBAAC,GAAD,MACT,IAAK,aACH,OAAO,kBAAC,GAAD,MACT,IAAK,aACH,OAAO,kBAAC,GAAD,MACT,IAAK,SACH,OAAO,kBAAC,GAAD,MACT,IAAK,aACH,OAAO,kBAAC,GAAD,QAqDC6Z,CAASlW,IAGjB,kBAAC,iBAAD,CACEmW,KAAMX,EACNY,QA3EkB,IA4ElBC,eAAe,GAEf,yBAAK/Z,UAAU,eAAea,QAASf,KAAKka,gBACzCL,GACC,yBACE3Z,UAAU,eACVia,KAAK,SACLpZ,QAASf,KAAKoa,gBAEbP,MAzDoC,KAiEzCK,eAAkB1G,IAExBA,EAAM6G,kBACNra,KAAKC,MAAMqa,gBApEoC,KAuEzCF,eAAkB5G,IAExBA,EAAM6G,mBAzEyC,KA4EzCd,UAAa/E,IACD,KAAdA,EAAE+F,SACJva,KAAKC,MAAMqa,iBAKFnB,UCxGApU,mBAdUrG,IAAD,CACtBkF,OACElF,EAAMS,OAAO1C,MAAM8J,OAAS,EACxB7H,EAAMS,OAAO1C,MAAMiC,EAAMS,OAAO1C,MAAM8J,OAAS,QAC/C,IAGoB/B,IAAD,CACzB8V,aAAc,IAAM9V,EAASX,OAMhBkB,CAA6CoU,I,OCX5D,MAAMqB,WAAiB1a,YAA0C,eAAD,oBACvDC,OAAS,IACd,yBAAKG,UAAU,YACb,kBAAC,mBAAD,KACGF,KAAKC,MAAMjB,SAASwH,IAAIxG,KAAKya,iBAJ0B,KAStDA,cAAiBzV,GACvB,kBAAC,iBAAD,CACE0B,IAAK1B,EAAQjI,GACbwD,WAAW,UACXyZ,QAAS,CAAE1P,MAAO,IAAKE,KAAM,MAE7B,yBAAKtK,UAAWK,IAAW,UAAW,WAAayE,EAAQpG,OACxDoB,KAAKC,MAAMkB,EAAE6D,EAAQV,SAMfjD,qBAAkBmZ,IC7B1B,MAAME,GAAmBhc,GAC9BA,EAAMM,SAASmO,KAAK,CAACwN,EAAIC,IAAOD,EAAGlW,MAAQmW,EAAGnW,OCYjCM,mBATUrG,IAAD,CACtBM,SAAU0b,GAAgBhc,KAGA8F,IAAD,IAKZO,CAA6CyV,I,OCL5D,MAAMK,WAAY/a,YAAwB,eAAD,iCAChCsR,kBADgC,sBACZ,sBAAA3P,EAAA,sDACzB,EAAKxB,MAAM6a,cADc,2CADY,KAKhC/a,OAAS,IAEZ,yBAAKG,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6a,OAAO,EAAMtE,KAAK,iBAAiBuE,UAAW7J,KACrD,kBAAC,IAAD,CAAO4J,OAAO,EAAMtE,KAAK,IAAIuE,UAAWjJ,KACxC,kBAAC,IAAD,CAAUI,GAAG,OAEf,kBAAC,GAAD,QAMO0I,UCdA9V,mBATOrG,IAAD,IAEI8F,IAAD,CACtBsW,YAAa,IAAMtW,EAASuO,QAMfhO,CAAuC8V,IChBtD,IAAII,GAAqC,KAEzC,MAAMC,GAAa,KACZD,KACHA,GAAgB,IAAK/W,OAAOiX,cACzBjX,OAAekX,qBAEbH,IAGHI,GAAmBC,GACvB,IAAI5Z,QAAQ,CAACC,EAAS8G,IACpByS,KAAaG,gBAAgBC,EAAe3Z,EAAS8G,IAGnD8S,GAAmB9M,GACvB,IAAI/M,QAAQ,CAACC,EAAS8G,KACpB,MAAM+S,EAAM,IAAIC,eAChBD,EAAIE,KAAK,MAAOjN,GAAK,GACrB+M,EAAIG,aAAe,cACnBH,EAAIlC,iBACF,QACA,IAAM7Q,EAAO,IAAIK,MAAM,4CACvB,GAEF0S,EAAIlC,iBACF,OADF,sBAEE,sBAAA7X,EAAA,2EAEIE,EAFJ,SAEkB0Z,GAAgBG,EAAI9Q,UAFtC,kFAIIvM,QAAQC,MAAM,+CACdqK,EAAO,EAAD,IALV,0DAQA,GAEF+S,EAAII,SAMR,MACE,MAAMC,EAAkB,KACtBha,SAAS2X,oBAAoB,QAASqC,GACtCha,SAAS2X,oBAAoB,aAAcqC,GAC3C1d,QAAQC,MAAM,2BACd,MAAM0d,EAAUZ,KAEhB,IAAIa,EAASD,EAAQE,aAAa,EAAG,EAAG,OACpCC,EAASH,EAAQI,qBACrBD,EAAOF,OAASA,EAChBE,EAAOlX,QAAQ+W,EAAQK,aACvBF,EAAOG,MAAM,IAEfva,SAASyX,iBAAiB,QAASuC,GACnCha,SAASyX,iBAAiB,aAAcuC,IAd1C,GAwBO,MAAMQ,GAAUC,IACrB,IAAIC,EAAoC,KACpCC,EAA4B,KAC5BC,EAA0B,KAC1BC,EAA8B,KAC9BC,EAAqB,GACrBC,EAA4C,KAC5CC,EAAuB,EACvBC,EAAW,GACXC,GAAkB,EAEtB,MAAMC,EAAkB,KACtB,IAAKP,EAAO,CACV,MAAMX,EAAUZ,KAChBuB,EAAQX,EAAQK,YAEhBK,EAAWV,EAAQmB,aACnBT,EAASU,KAAK1b,MAAQ,EACtBgb,EAASzX,QAAQ0X,GACjBA,EAAQD,EAERD,EAAeT,EAAQqB,iBACvBZ,EAAaa,QAAU,IAGvBb,EAAaxX,QAAQ0X,GACrBA,EAAQF,EAEV,OAAOE,GAmBHY,EAAW,uCAAG,WAAO5O,GAAP,SAAAhN,EAAA,yDAEdkb,IAAelO,EAFD,uBAGhBtQ,QAAQC,MAAM,mBAAoB,CAAEqQ,QAHpB,SAIA8M,GAAgB9M,GAJhB,OAIhBiO,EAJgB,OAKhBC,EAAalO,EALG,2CAAH,sDASX3C,EAAI,uCAAG,WACXwR,EACA7R,EACA8R,EACAC,GAJW,SAAA/b,EAAA,sEAMLgO,IANK,uBAOL4N,EAAYE,GAPP,OAQXpf,QAAQC,MAAM,oBAAqB,CAAEkf,gBAAe7R,UAAS8R,aAC7DT,EAAWrR,EACXsR,EAAiBO,EACjBV,EAAc1B,KAAagB,qBAC3BU,EAAYb,OAASW,EACrBE,EAAYa,MAAO,EACnBb,EAAYc,UAAY,EACxBd,EAAYe,QAAU,EACtBf,EAAYgB,QAAU,KACpBzf,QAAQC,MAAM,uBACdwe,EAAc,KACVN,GACFS,KAGJH,EAAYiB,aAAarc,MAAQ,EACjCob,EAAY7X,QAAQiY,KACpBJ,EAAYR,MAAM,EAAGoB,GACrBX,EAAuB3B,KAAa4C,YA1BzB,4CAAH,4DA6BJrO,EAAI,uCAAG,sBAAAhO,EAAA,+EACX,IAAIC,QAASC,IACP,OAASib,GACXze,QAAQC,MAAM,qBACdwe,EAAYgB,QAAU,KACpBzf,QAAQC,MAAM,+BACduD,KAEFib,EAAYnN,OACZmN,EAAc,KACdC,EAAuB,EACvBE,GAAkB,GAElBpb,OAbO,2CAAH,qDAiBV,MAAO,CACL4a,eACAC,WACAvM,kBAxEwB,IAAM6M,EAyE9BrM,uBApE6B,IACzBiM,GAAWE,GAEV1B,KAAa4C,YAAcjB,GAAwBH,EAAQnY,SAGzD,EA+DP4L,wBAxE8B,IAAM4M,EAyEpC3M,UA7EgB,MAAQwM,EA8ExB9Q,OACA2D,S,aCnLW,IACbsO,OAAQ,CACNC,IAAK,MACLC,aAAc,gBAEhBze,MAAO,CACL0e,OAAQ,CACNC,QAAS,mBAEX3gB,KAAM,OACN4gB,mBAAoB,uCACpBrZ,QAAS,UACTsZ,WAAY,aACZC,OAAQ,gBACRC,WAAY,aACZC,cAAe,oBACfC,cAAe,gBACfC,eAAgB,aAChBC,QAAS,UACTC,gBAAiB,kBACjBC,iBAAkB,eAClBre,KAAM,YACNse,kBAAmB,oBACnBC,mBAAoB,iBACpB/hB,OAAQ,eAEVuC,MAAO,CACL2e,OAAQ,CACNC,QAAS,kBACTlY,OAAQ,kBAEV+Y,MAAO,mBACPC,cAAe,8CACfC,aAAc,2CACdC,aAAc,0CACdC,UAAW,8BACXd,OAAQ,gBACRe,MAAO,iDACP7U,KAAM,YACN8U,gBAAiB,cACjB5Y,IAAK,WACL6Y,yBAA0B,yCAC1BC,QAAS,aACTvZ,OAAQ,2BACR2Y,gBAAiB,kBACjBa,kBAAmB,eACnBjf,KAAM,YACNkf,cAAe,gBACfC,eAAgB,iBAChB9iB,KAAM,OACNiiB,kBAAmB,oBACnBc,OAAQ,SACRC,SAAU,4BAEZzjB,OAAQ,CACN0jB,GAAI,gBACJC,IAAK,MACLxV,OAAQ,SACRoH,OAAQ,eACRqO,mBAAoB,YACpBC,cAAe,eACfrI,OAAQ,SACRE,UAAW,YACXxL,OAAQ,UAEVjN,OAAQ,CACN6e,OAAQ,CACNgC,yBAA0B,+BAE5BC,SAAU,WACVC,QAAS,UACTtU,KAAM,OACNpP,QAAS,UACT+S,KAAM,QAERpF,OAAQ,SACRgW,2BAA4B,uCC5Ef,IACbtC,OAAQ,CACNC,IAAK,MACLC,aAAc,kBAEhBze,MAAO,CACL0e,OAAQ,CACNC,QAAS,8BAEX3gB,KAAM,cACN4gB,mBAAoB,0DACpBrZ,QAAS,eACTsZ,WAAY,YACZC,OAAQ,0BACRC,WAAY,oBACZC,cAAe,+BACfC,cAAe,6BACfC,eAAgB,iBAChBC,QAAS,cACTC,gBAAiB,sBACjBC,iBAAkB,SAClBre,KAAM,MACNse,kBAAmB,yBACnBC,mBAAoB,YACpB/hB,OAAQ,UAEVuC,MAAO,CACL2e,OAAQ,CACNC,QAAS,wBACTlY,OAAQ,+BAEV+Y,MAAO,8BACPC,cAAe,kEACfC,aAAc,uDACdC,aAAc,2DACdC,UAAW,mDACXd,OAAQ,qBACRe,MAAO,gEACP7U,KAAM,mBACN8U,gBAAiB,UACjB5Y,IAAK,OACL8Y,QAAS,gBACTD,yBACE,iEACFtZ,OAAQ,iDACR2Y,gBAAiB,sBACjBa,kBAAmB,SACnBjf,KAAM,MACNkf,cAAe,0BACfC,eAAgB,gCAChB9iB,KAAM,QACNiiB,kBAAmB,wBACnBc,OAAQ,mBACRC,SAAU,kDAEZzjB,OAAQ,CACN0jB,GAAI,iBACJC,IAAK,UACLxV,OAAQ,YACRoH,OAAQ,yBACRqO,mBAAoB,eACpBC,cAAe,yBACfrI,OAAQ,SACRE,UAAW,YACXxL,OAAQ,UAEVjN,OAAQ,CACN6e,OAAQ,CACNgC,yBAA0B,iDAE5BC,SAAU,yBACVC,QAAS,iBACTtU,KAAM,OACNpP,QAAS,sBACT+S,KAAM,cAERpF,OAAQ,UACRgW,2BAA4B,wDCrEvB,MAKMC,GAAW,uCAAG,sBAAA7e,EAAA,+EACzB,IAAIC,QAAQ,CAACC,EAAS8G,KACpBtK,QAAQ6N,IAAI,4BACZuU,KAAQC,IAAIC,KAAkBC,KAC5B,CACEC,YAAa,KACbC,IAAKC,UAAUC,UAAaD,UAAkBE,aAC9CC,UAAW,CACT,QAAS,CAAEC,YAAaC,IACxB,QAAS,CAAED,YAAaE,KAE1BC,cAAe,CACbC,aAAa,EACbC,OAAQ,CAAC9f,EAAO8f,EAAQV,IAGfpf,IAIZrF,IACKA,GAAOsM,EAAOtM,GAClBwF,SAtBmB,2CAAH,qD,QCId,uCAAG,oCAAAF,EAAA,6DACL8f,EAC+DC,UAE/DnW,EAASgL,GACTpH,EAAcoN,IAAO,GACrB/Q,EAAgB+Q,IAAO,GAC7BiE,KAEMmB,EAAQC,sBACZljB,EACA+iB,EACEI,0BACEC,IAAMC,kBAAkB,CAAExW,SAAQ4D,cAAa3D,qBAb1C,kBAoBJmW,GApBI,2CAAH,qDAyBVf,GAAOoB,KAAML,IACXM,SACE,gBAAC,IAAD,CAAUN,MAAOA,GACf,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAOhL,KAAK,IAAIuE,UAAWH,OAG/BhZ,SAASmgB,eAAe,Y","file":"static/js/main.86645d11.chunk.js","sourcesContent":["import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { MediasAction } from \"../actions/medias\";\nimport { Track, Album, Playlist } from \"../utils/medias\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  medias: {\n    // keys are MediaType\n    album: { [id: string]: Album };\n    playlist: { [id: string]: Playlist };\n    track: { [id: string]: Track };\n  };\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  medias: {\n    // keys are MediaType\n    album: {},\n    playlist: {},\n    track: {},\n  },\n};\n\n// ------------------------------------------------------------------\n\nexport const mediasReducer: Reducer<State, MediasAction> = (\n  state = INITIAL_STATE,\n  action: MediasAction\n): State => {\n  switch (action.type) {\n    case \"medias/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null,\n      };\n    case \"medias/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null,\n      };\n    }\n    case \"medias/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    case \"medias/SET\": {\n      const copy = {\n        ...state,\n        medias: {\n          album: { ...state.medias.album },\n          playlist: { ...state.medias.playlist },\n          track: { ...state.medias.track },\n        },\n      };\n      for (const media of action.payload) {\n        copy.medias[media.type][media.id] = media;\n      }\n      return copy;\n    }\n    case \"medias/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { MessagesAction } from \"../actions/messages\";\nimport { Message } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type State = Message[];\n\nexport const INITIAL_STATE: State = [];\n\n// ------------------------------------------------------------------\n\nexport const messagesReducer: Reducer<State, MessagesAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"message/ADD\":\n      return [action.payload, ...state];\n    case \"message/REMOVE\":\n      return state.filter(other => other.id !== action.payload);\n    case \"message/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { ModalsAction, ModalPrereq } from \"../actions/modals\";\n\n// ------------------------------------------------------------------\n\nexport type ModalsState = {\n  stack: ModalPrereq[];\n};\n\n// ------------------------------------------------------------------\n\nexport const initialState: ModalsState = {\n  stack: []\n};\n\n// ------------------------------------------------------------------\n\nexport const modalsReducer: Reducer<ModalsState, ModalsAction> = (\n  state = initialState,\n  action\n): ModalsState => {\n  switch (action.type) {\n    case \"modals/OPEN\":\n      return {\n        ...state,\n        stack: [action.payload]\n      };\n    case \"modals/CLOSE\":\n      return {\n        ...state,\n        stack: []\n      };\n    case \"modals/PUSH\":\n      return {\n        ...state,\n        stack: [...state.stack, action.payload]\n      };\n    case \"modals/POP\":\n      const copy = [...state.stack];\n      copy.pop();\n      return {\n        ...state,\n        stack: copy\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { PlayerAction } from \"../actions/player\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  playing: boolean;\n  track_percent: number;\n};\n\nexport const INITIAL_STATE: State = {\n  playing: false,\n  track_percent: 0\n};\n\n// ------------------------------------------------------------------\n\nexport const playerReducer: Reducer<State, PlayerAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"player/START\":\n      return { ...state, playing: true };\n    case \"player/STOP\":\n      return { ...state, playing: false };\n    case \"player/SET_TRACK_PERCENT\":\n      return { ...state, track_percent: action.payload };\n    case \"player/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { QueueAction } from \"../actions/queue\";\nimport { MediaAccess } from \"../utils/medias\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  medias: MediaAccess[];\n  playing: boolean;\n  position: number;\n};\n\nexport const INITIAL_STATE: State = {\n  medias: [],\n  playing: false,\n  position: 0,\n};\n\n// ------------------------------------------------------------------\n\nexport const queueReducer: Reducer<State, QueueAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"queue/SET\":\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { RoomsAction } from \"../actions/rooms\";\nimport { RoomAccess, RoomInfo } from \"../utils/rooms\";\nimport { CombinedColor } from \"../utils/colorpicker\";\nimport { FirebaseRoom } from \"../utils/firebase\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  room: ReturnType<typeof FirebaseRoom> | null;\n  room_access: RoomAccess;\n  room_color: CombinedColor;\n  room_info: RoomInfo | null;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  room: null,\n  room_access: { id: \"\", secret: \"\" },\n  room_color: { fg: { r: 0, g: 0, b: 0 }, bg: { r: 255, g: 255, b: 255 } },\n  room_info: null,\n};\n\n// ------------------------------------------------------------------\n\nexport const roomsReducer: Reducer<State, RoomsAction> = (\n  state = INITIAL_STATE,\n  action: RoomsAction\n): State => {\n  switch (action.type) {\n    case \"rooms/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null,\n      };\n    case \"rooms/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null,\n      };\n    }\n    case \"rooms/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    case \"rooms/SET_ROOM\": {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case \"rooms/SET_ROOM_ACCESS\": {\n      return {\n        ...state,\n        room_access: action.payload,\n      };\n    }\n    case \"rooms/SET_ROOM_COLOR\": {\n      return {\n        ...state,\n        room_color: action.payload,\n      };\n    }\n    case \"rooms/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { UsersAction } from \"../actions/users\";\nimport {\n  saveUserAccess,\n  loadUserAccess,\n  UserAccess,\n  UserInfo,\n} from \"../utils/users\";\nimport { FirebaseUser } from \"../utils/firebase\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  user: ReturnType<typeof FirebaseUser> | null;\n  user_access: UserAccess;\n  user_info: UserInfo | null;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  user: null,\n  user_access: loadUserAccess(),\n  user_info: null,\n};\n\n// ------------------------------------------------------------------\n\nexport const usersReducer: Reducer<State, UsersAction> = (\n  state = INITIAL_STATE,\n  action: UsersAction\n): State => {\n  switch (action.type) {\n    case \"users/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null,\n      };\n    case \"users/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null,\n      };\n    }\n    case \"users/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload,\n      };\n    case \"users/SET_USER\": {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case \"users/SET_USER_ACCESS\": {\n      saveUserAccess(action.payload);\n      return {\n        ...state,\n        user_access: action.payload,\n      };\n    }\n    case \"users/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","export type UserInfo = {\n  name: string;\n  online: boolean;\n  room_id: string;\n  status: string;\n  timestamp: number;\n};\n\nexport type UserAccess = {\n  id: string;\n  secret: string;\n};\n\n// ------------------------------------------------------------------\n\nexport const loadUserAccess = (): UserAccess => {\n  const res: UserAccess = {\n    id: \"\",\n    secret: \"\"\n  };\n  const s = localStorage.getItem(\"U\");\n  if (s) {\n    try {\n      const d = JSON.parse(atob(s));\n      if (typeof d.i === \"string\" && typeof d.s === \"string\") {\n        res.id = d.i;\n        res.secret = d.s;\n        console.debug(\"Loaded user access: \", res);\n      }\n    } catch (err) {}\n  }\n  return res;\n};\n\nexport const saveUserAccess = ({ id, secret }: UserAccess) => {\n  localStorage.setItem(\n    \"U\",\n    btoa(\n      JSON.stringify({\n        i: id,\n        s: secret\n      })\n    )\n  );\n};\n","import { combineReducers } from \"redux\";\nimport { mediasReducer as medias } from \"./medias\";\nimport { messagesReducer as messages } from \"./messages\";\nimport { modalsReducer as modals } from \"./modals\";\nimport { playerReducer as player } from \"./player\";\nimport { queueReducer as queue } from \"./queue\";\nimport { roomsReducer as rooms } from \"./rooms\";\nimport { usersReducer as users } from \"./users\";\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const rootReducer = combineReducers({\n  medias,\n  messages,\n  modals,\n  player,\n  queue,\n  rooms,\n  users,\n});\n","import React, { Component } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport classNames from \"classnames\";\n//\nimport \"./Icon.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  icon: string;\n  size?: \"S\" | \"M\" | \"L\";\n  title?: string;\n};\n\nclass Icon extends Component<Props> {\n  public render = () => {\n    const { className, color, icon, size = \"M\", title } = this.props;\n    return (\n      <FontAwesome\n        className={classNames(\"Icon\", className, size)}\n        name={icon}\n        style={{ color }}\n        title={title}\n      />\n    );\n  };\n}\n\nexport default Icon;\n\n// ------------------------------------------------------------------\n\nexport const LoadingIcon = ({ size }: { size?: \"S\" | \"M\" | \"L\" }) => (\n  <Icon\n    className=\"rotating\"\n    icon=\"circle-o-notch\"\n    size={size}\n    title=\"Loading\"\n  />\n);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"./Icon\";\nimport \"./IconButton.scss\";\n\n// ------------------------------------------------------------------\n\ntype ButtonType = \"button\" | \"submit\";\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  disabled?: boolean;\n  displayTitle?: boolean;\n  icon: string;\n  kind?: \"default\" | \"primary\" | \"danger\" | \"special\";\n  onClick?: () => void;\n  size?: \"S\" | \"M\" | \"L\";\n  title: string;\n  type?: ButtonType;\n};\n\nclass IconButton extends Component<Props> {\n  public render = () => {\n    const {\n      className,\n      color,\n      disabled = false,\n      displayTitle = false,\n      icon,\n      kind = \"default\",\n      onClick,\n      size,\n      title,\n      type = \"button\",\n    } = this.props;\n    return (\n      <button\n        type={type}\n        aria-label={title}\n        className={classNames(\"IconButton\", className, kind, size, {\n          clickable: !disabled && (!!onClick || type === \"submit\"),\n        })}\n        onClick={disabled ? void 0 : onClick}\n        title={title}\n      >\n        <Icon color={color} icon={icon} size={size} />\n        {displayTitle && (\n          <div className={classNames(\"IconButtonTitle\", size)}>{title}</div>\n        )}\n      </button>\n    );\n  };\n}\n\nexport default IconButton;\n\n// ------------------------------------------------------------------\n\ntype CancelButtonProps = {\n  onClick: () => void;\n};\n\nclass _CancelButton extends Component<CancelButtonProps & WithTranslation> {\n  public render = () => {\n    const { onClick, t } = this.props;\n    return (\n      <IconButton\n        onClick={onClick}\n        title={t(\"cancel\")}\n        kind=\"default\"\n        icon=\"ban\"\n      />\n    );\n  };\n}\n\nexport const CancelButton = withTranslation()(_CancelButton);\n","import { createHashHistory } from \"history\";\n\nexport default createHashHistory();\n","// https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\nexport const copyToClipboard = async (value: string): Promise<void> =>\n  await new Promise(resolve => {\n    const elem = document.createElement(\"textarea\");\n    elem.value = value;\n    elem.setAttribute(\"readonly\", \"\");\n    elem.style.position = \"absolute\";\n    elem.style.left = \"-9999px\";\n\n    document.body.appendChild(elem);\n    const selection = document.getSelection();\n    if (selection !== null) {\n      const selected =\n        selection.rangeCount > 0 ? selection.getRangeAt(0) : false;\n      elem.select();\n      document.execCommand(\"copy\");\n      if (selected !== false) {\n        selection.removeAllRanges();\n        selection.addRange(selected);\n      }\n    }\n    document.body.removeChild(elem);\n    resolve();\n  });\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Room/Head\";\nimport history from \"../../utils/history\";\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport \"./Head.scss\";\n\n// ------------------------------------------------------------------\n\nclass Head extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const { room, t } = this.props;\n    return (\n      <div className=\"Head\">\n        <div className=\"RoomLink\">\n          <IconButton\n            icon=\"link\"\n            onClick={this.onCopyLink}\n            size=\"M\"\n            title={t(\"rooms.copy_link\")}\n          />\n        </div>\n        <div className=\"RoomName\">{room ? room.name : \"\"}</div>\n        <div className=\"RoomExit\">\n          <IconButton\n            onClick={this.onExit}\n            icon=\"sign-out\"\n            size=\"M\"\n            title={t(\"rooms.exit\")}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyLink = async () => {\n    const { onMessage, t } = this.props;\n    await copyToClipboard(document.location.href.split(\"?\")[0]);\n    onMessage(t(\"rooms.link_copied_to_clipboard\"));\n  };\n\n  private onExit = () => {\n    const { onConfirm, t } = this.props;\n    onConfirm(t(\"rooms.confirm_exit\"), () => {\n      history.push(\"/\");\n    });\n  };\n}\n\nexport default withTranslation()(Head);\n","import { RootState } from \"../reducers\";\n\nexport const extractRoom = (state: RootState) => state.rooms.room_info;\n\nexport const isRoomLoaded = (state: RootState) => !!state.rooms.room;\n\nexport const isRoomLocked = (state: RootState) =>\n  !state.rooms.room_access.secret;\n","import { AnyAction } from \"redux\";\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../reducers\";\nimport { Player } from \"../utils/player\";\nimport { DeezerApi } from \"../utils/deezer\";\n\n// ------------------------------------------------------------------\n\nexport type Action<T extends string> = {\n  type: T;\n};\n\nexport type ActionWithPayload<T extends string, P> = {\n  type: T;\n  payload: P;\n};\n\nexport type Extended = {\n  deezer: ReturnType<typeof DeezerApi>;\n  previewPlayer: ReturnType<typeof Player>;\n  queuePlayer: ReturnType<typeof Player>;\n};\n\nexport type Dispatch = ThunkDispatch<RootState, Extended, AnyAction>;\n\nexport type AsyncAction = ThunkAction<void, RootState, Extended, AnyAction>;\n\nexport function createAction<T extends string>(type: T): Action<T>;\n\nexport function createAction<T extends string, P>(\n  type: T,\n  payload: P\n): ActionWithPayload<T, P>;\n\nexport function createAction<T extends string, P>(type: T, payload?: P) {\n  return payload === void 0 ? { type } : { type, payload };\n}\n","import { createAction, AsyncAction } from \".\";\nimport { ConfirmModalProps } from \"../components/Modals/ConfirmModal\";\n\n// ------------------------------------------------------------------\n\nexport type ModalPrereqT<T extends string, P> = {\n  type: T;\n  props: P;\n};\n\nexport type ModalPrereq =\n  | ModalPrereqT<\"Confirm\", ConfirmModalProps>\n  | ModalPrereqT<\"ConnectUser\", null>\n  | ModalPrereqT<\"CreateRoom\", null>\n  | ModalPrereqT<\"CreateUser\", null>\n  | ModalPrereqT<\"Search\", null>\n  | ModalPrereqT<\"UnlockRoom\", null>;\n\n// ------------------------------------------------------------------\n\nexport type ModalsAction =\n  | ReturnType<typeof closeModal>\n  | ReturnType<typeof openModal>\n  | ReturnType<typeof popModal>\n  | ReturnType<typeof pushModal>;\n\n// ------------------------------------------------------------------\n\nexport const openModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/OPEN\", prereq);\n\nexport const closeModal = () => createAction(\"modals/CLOSE\");\n\n// ------------------------------------------------------------------\n\nexport const pushModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/PUSH\", prereq);\n\nexport const popModal = () => createAction(\"modals/POP\");\n\n// ------------------------------------------------------------------\n\nexport const confirmModal = (\n  question: string,\n  onConfirmed: () => void,\n  onCanceled?: () => void\n): AsyncAction => async () => {\n  // TODO: open custom ConfirmModal instead of system popup\n  if (window.confirm(question)) {\n    onConfirmed();\n  } else if (onCanceled) {\n    onCanceled();\n  }\n};\n","import { createAction, AsyncAction } from \".\";\nimport { Message, MessageType } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type MessagesAction =\n  | ReturnType<typeof addMessage>\n  | ReturnType<typeof clearMessages>\n  | ReturnType<typeof removeMessage>;\n\nconst addMessage = (message: Message) => createAction(\"message/ADD\", message);\n\nconst removeMessage = (id: number) => createAction(\"message/REMOVE\", id);\n\nconst clearMessages = () => createAction(\"message/RESET\");\n\n// ------------------------------------------------------------------\n\nlet MESSAGE_ID_GENERATOR: number = 0;\n\nexport const displayMessage = (\n  type: MessageType,\n  text: string,\n  duration: number = 5000\n): AsyncAction => (dispatch): any => {\n  const id = MESSAGE_ID_GENERATOR++;\n  dispatch(addMessage({ id, stamp: new Date().getTime(), text, type }));\n  setTimeout(() => dispatch(removeMessage(id)), duration);\n};\n\nexport const displayError = (text: string): AsyncAction => (dispatch): any => {\n  dispatch(displayMessage(\"error\", text, 3000));\n};\n\nexport const displayInfo = (text: string) => displayMessage(\"info\", text, 3000);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Head from \"../../components/Room/Head\";\nimport { extractRoom } from \"../../selectors/rooms\";\nimport { confirmModal } from \"../../actions/modals\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  room: extractRoom(state),\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onConfirm: (question: string, onConfirmed: () => void) => {\n    dispatch(confirmModal(question, onConfirmed));\n  },\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message)),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Head);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"../Common/Icon\";\nimport \"./Cover.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  image: string;\n  onPlay: () => void;\n  onStop: () => void;\n  playable: boolean;\n  playing: boolean;\n};\n\nclass Cover extends Component<Props & WithTranslation> {\n  public render = () => {\n    const { playable, playing, image, onPlay, onStop, t } = this.props;\n    if (playable) {\n      return (\n        <div\n          className={classNames(\"Cover\", { playable, playing })}\n          style={image ? { backgroundImage: `url('${image}')` } : {}}\n          onClick={!playing ? onPlay : onStop}\n        >\n          {!playing ? (\n            <Icon icon=\"play\" title={t(\"player.play\")} />\n          ) : (\n            <Icon icon=\"pause\" title={t(\"player.stop\")} />\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={classNames(\"Cover\", { playing })}\n          style={image ? { backgroundImage: `url('${image}')` } : {}}\n        >\n          {playing ? <Icon icon=\"music\" title={t(\"player.playing\")} /> : null}\n        </div>\n      );\n    }\n  };\n}\n\nexport default withTranslation()(Cover);\n","import React, { ReactNode, Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport Cover from \"./Cover\";\nimport { LoadingIcon } from \"../Common/Icon\";\nimport {\n  Album,\n  Playlist,\n  Track,\n  Media as MediaData,\n  MediaType,\n} from \"../../utils/medias\";\nimport \"./Medias.scss\";\n\n// ------------------------------------------------------------------\n\ntype MediaProps = {\n  actions?: ReactNode;\n  media: MediaData | null;\n  mediaType: MediaType;\n  playable: boolean;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n};\n\n// ------------------------------------------------------------------\n\nclass _Media extends Component<MediaProps & WithTranslation> {\n  public render = () => {\n    const {\n      actions,\n      media,\n      mediaType,\n      playable,\n      playing,\n      onPlay,\n      onStop,\n      t,\n    } = this.props;\n    if (!media) {\n      return (\n        <div className=\"Media\">\n          {actions}\n          <Cover\n            playable={playable}\n            playing={playing}\n            image={\"\"}\n            onPlay={onPlay}\n            onStop={onStop}\n          />\n          <div className=\"Metas\">\n            <LoadingIcon size=\"M\" />\n          </div>\n        </div>\n      );\n    } else if (mediaType === \"album\") {\n      const album = media as Album;\n      return (\n        <div className=\"Media Album\">\n          {actions}\n          <Cover\n            playable={playable}\n            playing={playing}\n            image={album.cover_small}\n            onPlay={onPlay}\n            onStop={onStop}\n          />\n          <div className=\"Metas\">\n            <div className=\"Meta AlbumTitle\">\n              <a href={album.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {album.title}\n              </a>\n            </div>\n            <div className=\"Meta AlbumArtist\">\n              <a\n                href={album.artist.link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"medias.by\", { artist: album.artist.name })}\n              </a>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (mediaType === \"playlist\") {\n      const playlist = media as Playlist;\n      return (\n        <div className=\"Media Playlist\">\n          {actions}\n          <Cover\n            playable={playable}\n            playing={playing}\n            image={playlist.picture_small}\n            onPlay={onPlay}\n            onStop={onStop}\n          />\n          <div className=\"Metas\">\n            <div className=\"Meta PlaylistTitle\">\n              <a href={media.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {media.title}\n              </a>\n            </div>\n            <div className=\"Meta PlaylistCreator\">\n              <a\n                href={playlist.user.link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"medias.by\", { artist: playlist.user.name })}\n              </a>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (mediaType === \"track\") {\n      const track = media as Track;\n      return (\n        <div className=\"Media Track\">\n          {actions}\n          <Cover\n            playable={playable}\n            playing={playing}\n            image={track.album.cover_small}\n            onPlay={onPlay}\n            onStop={onStop}\n          />\n          <div className=\"Metas\">\n            <div className=\"Meta TrackTitle\">\n              <a href={track.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {track.title}\n              </a>\n            </div>\n            <div className=\"Meta TrackArtist\">\n              <a\n                href={track.artist.link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {t(\"medias.by\", { artist: track.artist.name })}\n              </a>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n}\n\nexport default withTranslation()(_Media);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport Media from \"./Medias\";\nimport IconButton from \"../Common/IconButton\";\nimport { Media as MediaData, MediaType } from \"../../utils/medias\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  locked: boolean;\n  media: MediaData | null; // if null : stiil loading or cannot be loaded or to reload later because of rate limit\n  mediaType: MediaType;\n  playing: boolean;\n  onPlay: () => void;\n  onRemove: () => void;\n  onStop: () => void;\n};\n\nclass QueueItem extends Component<Props & WithTranslation> {\n  public render = () => {\n    const {\n      locked,\n      media,\n      mediaType,\n      playing,\n      onPlay,\n      onRemove,\n      onStop,\n      t,\n    } = this.props;\n    return (\n      <div className=\"QueueItem\">\n        <Media\n          media={media}\n          mediaType={mediaType}\n          playable={!!media && !locked}\n          playing={playing}\n          onPlay={onPlay}\n          onStop={onStop}\n          actions={\n            !locked ? (\n              <IconButton\n                title={t(\"medias.remove\")}\n                icon=\"trash\"\n                onClick={onRemove}\n              />\n            ) : null\n          }\n        />\n      </div>\n    );\n  };\n}\n\nexport default withTranslation()(QueueItem);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Room/Queue\";\nimport IconButton from \"../Common/IconButton\";\nimport { LoadingIcon } from \"../Common/Icon\";\nimport QueueItem from \"./QueueItem\";\nimport \"./Queue.scss\";\n\n// ------------------------------------------------------------------\n\nclass Queue extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      loaded,\n      locked,\n      medias,\n      playing,\n      playingIndex,\n      onPlay,\n      onRemove,\n      onSearch,\n      onStop,\n      t,\n    } = this.props;\n    return (\n      <div className=\"Queue\">\n        {medias.length > 0 ? (\n          medias.map((media, index) => (\n            <QueueItem\n              key={index}\n              locked={locked}\n              playing={playing && playingIndex === index}\n              media={media}\n              mediaType=\"track\"\n              onPlay={() => onPlay(index)}\n              onRemove={() => onRemove(index)}\n              onStop={onStop}\n            />\n          ))\n        ) : (\n          <div className=\"QueueEmpty\">\n            {loaded ? (\n              <>\n                <IconButton\n                  title=\"...\"\n                  icon=\"shower\"\n                  onClick={onSearch}\n                  size=\"L\"\n                />\n                <span onClick={onSearch}>{t(\"rooms.empty\")}</span>\n              </>\n            ) : (\n              <>\n                <LoadingIcon size=\"L\" />\n                <span>{t(\"rooms.loading\")}</span>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n}\n\nexport default withTranslation()(Queue);\n","import { RootState } from \"../reducers\";\nimport { Media, MediaAccess } from \"../utils/medias\";\n\n// ------------------------------------------------------------------\n\nexport const extractMedias = (\n  state: RootState,\n  mediaAccesses: MediaAccess[]\n) => {\n  const res: Array<Media | null> = [];\n  const {\n    medias: { medias },\n  } = state;\n  for (const mediaAccess of mediaAccesses) {\n    const media = medias[mediaAccess.type][mediaAccess.id];\n    if (!!media) {\n      res.push(media);\n    } else {\n      res.push(null); // Stiil loading or cannot be loaded or to reload later because of rate limit\n    }\n  }\n  return res;\n};\n","const config = {\n  databaseURL: process.env.REACT_APP_FIREBASE_URL\n};\n\nconsole.debug(config);\n\nexport default config;\n","export const sleep = (delay: number) =>\n  new Promise(resolve => setTimeout(resolve, delay));\n","import * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n//\nimport firebaseConfig from \"../config/firebase\";\nimport { RoomInfo } from \"./rooms\";\nimport { UserInfo } from \"./users\";\nimport { sleep } from \".\";\n\n// ------------------------------------------------------------------\n\ntype FirebaseCB = (eventType: firebase.database.DataSnapshot) => void;\n\n// ------------------------------------------------------------------\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseDatabase = firebase.database(firebaseApp);\n\n// ------------------------------------------------------------------\n\nconst MEMBERS = firebaseDatabase.ref(\"members\");\nconst ROOMS = firebaseDatabase.ref(\"rooms\");\nconst USERS = firebaseDatabase.ref(\"users\");\n\n// ------------------------------------------------------------------\n\nexport const FirebaseRoom = (id: string, secret?: string) => {\n  const _room = ROOMS.child(id);\n  const _info = _room.child(\"info\");\n  const _members = MEMBERS.child(id);\n  let _secret = secret || \"\";\n  console.debug(\"INIT SECRET\", _secret);\n  let _values: RoomInfo = {\n    name: \"dummy\",\n    playing: false,\n    queue: {},\n    queue_position: 0,\n    timestamp: 0,\n    type: \"dj\",\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    console.debug(\"SETTING SECRET\", newSecret);\n    _secret = newSecret;\n  };\n\n  const wait = async (): Promise<RoomInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", (snapshot) => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"rooms.errors.invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const subscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.on(\"child_added\", cbAdded);\n    _members.on(\"child_removed\", cbRemoved);\n  };\n\n  const unsubscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.off(\"child_added\", cbAdded);\n    _members.off(\"child_removed\", cbRemoved);\n  };\n\n  const update = async ({\n    name,\n    playing,\n    queue,\n    queue_position,\n  }: Partial<\n    Pick<RoomInfo, \"name\" | \"playing\" | \"queue\" | \"queue_position\">\n  >) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (playing !== void 0) {\n      _values.playing = playing;\n    }\n    if (queue !== void 0) {\n      _values.queue = queue;\n    }\n    if (queue_position !== void 0) {\n      _values.queue_position = queue_position;\n    }\n    await _room.set({\n      info: {\n        ..._values,\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n  };\n\n  return {\n    getInfo,\n    id,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    subscribeMembers,\n    unsubscribeInfo,\n    unsubscribeMembers,\n    update,\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const FirebaseUser = (id: string, secret?: string) => {\n  const _user = USERS.child(id);\n  const _info = _user.child(\"info\");\n  let _membership: firebase.database.Reference | null = null;\n  let _secret = secret || \"\";\n  let _values: UserInfo = {\n    name: \"dummy\",\n    online: false,\n    room_id: \"\",\n    status: \"\",\n    timestamp: 0,\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    _secret = newSecret;\n  };\n\n  const wait = async (): Promise<UserInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", (snapshot) => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"users.errors.invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const update = async ({\n    name,\n    room_id,\n  }: Partial<Pick<UserInfo, \"name\" | \"room_id\">>) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (room_id !== void 0) {\n      _values.room_id = room_id;\n    }\n    await _user.set({\n      info: {\n        ..._values,\n        online: true,\n        status: \"online\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n    installDisconnect();\n  };\n\n  const installDisconnect = () => {\n    _user.onDisconnect().cancel();\n    _user.onDisconnect().set({\n      info: {\n        ..._values,\n        online: false,\n        room_id: \"\",\n        status: \"disconnected\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP,\n      },\n      secret: _secret,\n    });\n  };\n\n  const enter = async (room: ReturnType<typeof FirebaseRoom>) => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: room.id,\n    });\n    _membership = MEMBERS.child(room.id).child(id);\n    _membership.onDisconnect().remove();\n    await _membership.set({\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n    });\n  };\n\n  const exit = async () => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: \"\",\n    });\n  };\n\n  return {\n    id,\n    enter,\n    exit,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    unsubscribeInfo,\n    update,\n    getInfo,\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const FirebaseParty = (\n  id: string,\n  room: ReturnType<typeof FirebaseRoom>\n) => {\n  const _members: string[] = [];\n  const _users: { [id: string]: ReturnType<typeof FirebaseUser> } = {};\n  let _info: RoomInfo = {\n    name: \"\",\n    playing: false,\n    queue: {},\n    queue_position: 0,\n    timestamp: 0,\n    type: \"dj\",\n  };\n\n  const _onAdded = (added: firebase.database.DataSnapshot) => {\n    const userId = added.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index === -1) {\n        _members.push(userId);\n        _users[userId] = FirebaseUser(userId);\n        _log();\n      }\n    }\n  };\n\n  const _onRemoved = (removed: firebase.database.DataSnapshot) => {\n    const userId = removed.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index !== -1) {\n        _members.splice(index, 1);\n        delete _users[userId];\n        _log();\n      }\n    }\n  };\n\n  const _onRoomInfo = (snapshot: firebase.database.DataSnapshot) => {\n    const newValues = snapshot.val() as RoomInfo | null;\n    if (newValues) {\n      _info = newValues;\n      _log();\n    }\n  };\n\n  const _log = () => {\n    console.debug(\"PARTY\", {\n      _info,\n      _members,\n    });\n  };\n\n  const init = () => {\n    room.subscribeInfo(_onRoomInfo);\n    room.subscribeMembers(_onAdded, _onRemoved);\n  };\n\n  const terminate = () => {\n    room.unsubscribeInfo(_onRoomInfo);\n    room.unsubscribeMembers(_onAdded, _onRemoved);\n  };\n\n  return {\n    init,\n    terminate,\n  };\n};\n\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n\nexport const testRoom = async () => {\n  const room = FirebaseRoom(\"r1\", \"rs1\");\n  await room.update({ name: \"R1\" });\n  room.subscribeInfo((info) => console.debug(\"ROOM\", info.val()));\n  room.subscribeMembers(\n    (members) => console.debug(\"ADDED\", members.key),\n    (members) => console.debug(\"REMOVED\", members.key)\n  );\n  await room.update({ name: \"R1\" });\n  await sleep(1000);\n  await room.update({\n    name: \"R1b\",\n    queue: {},\n    queue_position: 0,\n  });\n};\n\nexport const testUser = async () => {\n  const user = FirebaseUser(\"u1\", \"us1\");\n  user.subscribeInfo((info) => console.debug(\"USER\", info.val()));\n  await user.update({ name: \"U1\" });\n  await sleep(1000);\n  await user.update({ name: \"U1b\" });\n};\n\nexport const testParty = async () => {\n  const room1 = FirebaseRoom(\"r1\", \"rs1\");\n  await room1.update({ name: \"R1\" });\n  const room2 = FirebaseRoom(\"r2\", \"rs2\");\n  await room2.update({ name: \"R2\" });\n  const user1 = FirebaseUser(\"u1\", \"us1\");\n  await user1.update({ name: \"U1\" });\n  const user2 = FirebaseUser(\"u2\", \"us2\");\n  await user2.update({ name: \"U2\" });\n\n  await sleep(2000);\n\n  const party1 = FirebaseParty(\"P1\", room1);\n  await party1.init();\n  const party2 = FirebaseParty(\"P2\", room2);\n  await party2.init();\n\n  await sleep(1000);\n  user1.enter(room1);\n  await sleep(1000);\n  user2.enter(room1);\n  await sleep(1000);\n  user1.enter(room2);\n  await sleep(1000);\n  user1.exit();\n  await sleep(1000);\n  user1.enter(room1);\n};\n\nexport const test = () => {\n  // testRoom();\n  // testUser();\n  // testParty();\n};\n","export type MessageType = \"error\" | \"info\";\n\nexport type Message = {\n  id: number;\n  stamp: number;\n  text: string;\n  type: MessageType;\n};\n\nexport const extractErrorMessage = (err: any) =>\n  err.response && err.response.data && err.response.data.message\n    ? err.response.data.message\n    : err.message;\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { appendInQueue } from \"./queue\";\nimport { Media, MediaType, ProviderType, Track } from \"../utils/medias\";\nimport { extractErrorMessage } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type MediasAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof set>;\n\nconst fetching = () => createAction(\"medias/FETCHING\");\nconst success = () => createAction(\"medias/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"medias/ERROR\", error);\nconst reset = () => createAction(\"medias/RESET\");\nconst set = (medias: Media[]) => createAction(\"medias/SET\", medias);\n\n// ------------------------------------------------------------------\n\nconst onlyUnique = (value: string, index: number, self: string[]) =>\n  self.indexOf(value) === index;\n\n// ------------------------------------------------------------------\n\nexport const loadMedias = (\n  provider: ProviderType,\n  mediaType: MediaType,\n  mediaIds: string[],\n  enqueue: boolean,\n  preview: boolean\n): AsyncAction => async (dispatch, getState, { deezer, previewPlayer }) => {\n  if (mediaIds.length > 0) {\n    const {\n      medias: { medias },\n    } = getState();\n    try {\n      if (mediaType === \"track\") {\n        // TRACK\n        const { track: oldTracks } = medias;\n        const newTrackIds: string[] = mediaIds\n          .filter((trackId) => !oldTracks[trackId])\n          .filter(onlyUnique);\n        let newTracks: Track[] = [];\n        if (newTrackIds.length > 0) {\n          console.debug(\"Loading tracks...\", { mediaIds: newTrackIds });\n          newTracks = await deezer.loadTracks(newTrackIds);\n          dispatch(set(newTracks));\n        }\n        if (enqueue) {\n          console.debug(\"Enqueuing tracks...\", { mediaIds });\n          dispatch(appendInQueue(provider, mediaIds));\n        }\n        if (preview) {\n          const trackId = mediaIds[0];\n          const track =\n            oldTracks[trackId] ||\n            newTracks.find((track) => track.id === trackId);\n          console.debug(\"Previewing track...\", { track, trackId });\n          await previewPlayer.play(0, track.id, track.preview, 0);\n        }\n      } else {\n        // CONTAINERS\n        const { [mediaType]: oldContainers } = medias;\n        console.log(\"TITI\", medias);\n        const newContainerIds: string[] = mediaIds\n          .filter((containerId) => !oldContainers[containerId])\n          .filter(onlyUnique);\n        let newContainers: Media[] = [];\n        if (newContainerIds.length > 0) {\n          console.debug(\"Loading containers...\", { mediaIds: newContainerIds });\n          newContainers = await deezer.load(mediaType, newContainerIds);\n          dispatch(set(newContainers));\n        }\n        if (enqueue) {\n          console.debug(\"Enqueuing containers tracks...\", { mediaIds });\n          for (const containerId of mediaIds) {\n            const container =\n              oldContainers[containerId] ||\n              newContainers.find((container) => container.id === containerId);\n            dispatch(\n              appendInQueue(\n                provider,\n                container.tracks!.map((track) => track.id)\n              )\n            );\n          }\n        }\n        if (preview) {\n          let track: Track | null = null;\n          for (const containerId of mediaIds) {\n            const container =\n              oldContainers[containerId] ||\n              newContainers.find((container) => container.id === containerId);\n            if (container.tracks && container.tracks.length > 0) {\n              track = container.tracks[0];\n            }\n          }\n          if (track) {\n            console.debug(\"Previewing container first track...\");\n            dispatch(loadMedias(provider, \"track\", [track.id], false, true));\n          } else {\n            console.debug(\"No container track found to preview...\");\n          }\n        }\n      }\n    } catch (err) {\n      dispatch(displayError(extractErrorMessage(err)));\n    }\n  }\n};\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { RoomInfo } from \"../utils/rooms\";\nimport { FirebaseRoom } from \"../utils/firebase\";\nimport { loadMedias } from \"./medias\";\nimport { MediaAccess } from \"../utils/medias\";\nimport { CombinedColor } from \"../utils/colorpicker\";\nimport history from \"../utils/history\";\nimport { setQueue } from \"./queue\";\nimport { extractErrorMessage } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type RoomsAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setRoom>\n  | ReturnType<typeof setRoomAccess>\n  | ReturnType<typeof setRoomColor>;\n\nconst fetching = () => createAction(\"rooms/FETCHING\");\nconst success = () => createAction(\"rooms/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"rooms/ERROR\", error);\nconst reset = () => createAction(\"rooms/RESET\");\nconst setRoom = (\n  room: ReturnType<typeof FirebaseRoom> | null,\n  info: RoomInfo | null\n) => createAction(\"rooms/SET_ROOM\", { room, room_info: info });\nconst setRoomAccess = (id: string, secret: string) =>\n  createAction(\"rooms/SET_ROOM_ACCESS\", { id, secret });\nexport const setRoomColor = (color: CombinedColor) =>\n  createAction(\"rooms/SET_ROOM_COLOR\", color);\n\n// ------------------------------------------------------------------\n\nexport const createRoom = (name: string, secret: string): AsyncAction => async (\n  dispatch\n) => {\n  try {\n    const id = v4();\n    console.debug(\"Creating room...\", { id, secret });\n    await FirebaseRoom(id, secret).update({ name });\n    dispatch(enterRoom(id, secret));\n  } catch (err) {\n    dispatch(displayError(extractErrorMessage(err)));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_CB: any = null;\n\nexport const enterRoom = (id: string, secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: { room },\n  } = getState();\n  if (!room || room.id !== id) {\n    dispatch(exitRoom());\n    try {\n      console.debug(\"Entering room...\", { id, secret });\n      const newRoom = FirebaseRoom(id, secret);\n      dispatch(setRoom(newRoom, await newRoom.wait()));\n      dispatch(setRoomAccess(id, secret));\n      FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n        const newInfo = snapshot.val() as RoomInfo;\n        let mediaAccesses: MediaAccess[] = [];\n        if (newInfo.queue) {\n          mediaAccesses = Object.entries(newInfo.queue)\n            .sort((media1, media2) => Number(media1[0]) - Number(media2[0]))\n            .map((media) => media[1]);\n          dispatch(\n            loadMedias(\n              \"deezer\",\n              \"track\",\n              mediaAccesses.map((media) => media.id),\n              false,\n              false\n            )\n          );\n        }\n        console.log(\"TOTO\", newInfo);\n        dispatch(\n          setQueue(mediaAccesses, newInfo.playing, newInfo.queue_position)\n        );\n        dispatch(setRoom(newRoom, newInfo));\n      };\n      newRoom.subscribeInfo(FIREBASE_CB);\n      history.push(`/room/${id}?key=${secret}`); // TODO: should push only if we're not already in it\n    } catch (err) {\n      dispatch(displayError(extractErrorMessage(err)));\n    }\n  }\n};\n\nexport const exitRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: { room },\n  } = getState();\n  if (room) {\n    console.debug(\"Exiting room...\");\n    room.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_CB = null;\n    dispatch(setRoom(null, null));\n    dispatch(setRoomAccess(\"\", \"\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const lockRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: {\n      room,\n      room_access: { id },\n    },\n  } = getState();\n  if (room && room.id === id) {\n    console.debug(\"Locking room...\", { id });\n    room.setSecret(\"\");\n    dispatch(setRoomAccess(id, \"\"));\n  }\n};\n\nexport const unlockRoom = (secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: {\n      room,\n      room_access: { id },\n    },\n  } = getState();\n  if (room && room.id === id) {\n    console.debug(\"Unlocking room...\", { id, secret });\n    room.setSecret(secret);\n    dispatch(setRoomAccess(id, secret));\n  }\n};\n","import { createAction, AsyncAction } from \".\";\nimport { RoomQueue } from \"../utils/rooms\";\nimport { displayError } from \"./messages\";\nimport { lockRoom } from \"./rooms\";\nimport { MediaAccess, ProviderType } from \"../utils/medias\";\nimport { extractErrorMessage } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type QueueAction = ReturnType<typeof setQueue>;\n\nexport const setQueue = (\n  medias: MediaAccess[],\n  playing: boolean,\n  position: number\n) => createAction(\"queue/SET\", { medias, playing, position });\n\n// ------------------------------------------------------------------\n\nexport const clearQueue = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: { room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    try {\n      console.debug(\"Clearing queue...\");\n      await room.update({ queue: {}, queue_position: 0 });\n    } catch (err) {\n      dispatch(displayError(extractErrorMessage(err)));\n      dispatch(lockRoom());\n    }\n  } else {\n    dispatch(displayError(\"rooms.error.locked\"));\n  }\n};\n\nexport const appendInQueue = (\n  provider: ProviderType,\n  trackIds: string[]\n): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: { room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    if (trackIds.length > 0) {\n      const {\n        queue: { medias: queueMedias },\n      } = getState();\n      try {\n        console.debug(\"Appending queue...\", { trackIds });\n        const queue: RoomQueue = {};\n        [...queueMedias.map((media) => media.id), ...trackIds].forEach(\n          (id, index) => {\n            queue[index] = {\n              id,\n              provider,\n              type: \"track\",\n            };\n          }\n        );\n        await room.update({ queue });\n      } catch (err) {\n        dispatch(displayError(extractErrorMessage(err)));\n        dispatch(lockRoom());\n      }\n    }\n  } else {\n    dispatch(displayError(\"rooms.error.locked\"));\n  }\n};\n\nexport const removeFromQueue = (index: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    queue: { medias: queueMedias, position },\n    rooms: { room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    if (index < queueMedias.length) {\n      try {\n        console.debug(\"Removing from queue...\", { index });\n        const oldIndex = position % queueMedias.length;\n        const queue: RoomQueue = {};\n        const copy = [...queueMedias];\n        copy.splice(index, 1);\n        copy.forEach((mediaAccess, index) => {\n          queue[index] = mediaAccess;\n        });\n        await room.update({\n          queue,\n          queue_position: index < oldIndex ? position - 1 : position,\n        });\n      } catch (err) {\n        dispatch(displayError(extractErrorMessage(err)));\n        dispatch(lockRoom());\n      }\n    }\n  } else {\n    dispatch(displayError(\"rooms.error.locked\"));\n  }\n};\n\nexport const setQueuePosition = (newPosition: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    queue: { position: oldPosition },\n    rooms: { room },\n  } = getState();\n  if (room && !room.isLocked()) {\n    if (oldPosition !== newPosition) {\n      try {\n        console.debug(\"Set queue position...\", {\n          oldPosition,\n          newPosition,\n        });\n        await room.update({ queue_position: newPosition });\n      } catch (err) {\n        dispatch(displayError(extractErrorMessage(err)));\n        dispatch(lockRoom());\n      }\n    }\n  } else {\n    dispatch(displayError(\"rooms.error.locked\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const moveBackward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { medias: queueMedias, position },\n  } = getState();\n  if (queueMedias.length > 0) {\n    console.debug(\"Moving backward...\");\n    dispatch(\n      setQueuePosition(position > 0 ? position - 1 : queueMedias.length - 1)\n    );\n  }\n};\n\nexport const moveForward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { medias: queueMedias, position },\n  } = getState();\n  if (queueMedias.length > 0) {\n    console.debug(\"Moving forward...\");\n    dispatch(setQueuePosition(position + 1));\n  }\n};\n","import * as jimp from \"jimp\";\n\n// ------------------------------------------------------------------\n\nexport type Color = {\n  r: number;\n  g: number;\n  b: number;\n};\n\nexport type CombinedColor = {\n  bg: Color;\n  fg: Color;\n};\n\nconst CACHE: { [url: string]: CombinedColor } = {};\n\nconst DEFAULT_COLOR = {\n  bg: { r: 255, g: 255, b: 255 },\n  fg: { r: 0, g: 0, b: 0 },\n};\n\n// ------------------------------------------------------------------\n\n// https://stackoverflow.com/questions/3942878/how-to-decide-font-color-in-white-or-black-depending-on-background-color\nexport const pickColor = async (url: string) => {\n  let res = DEFAULT_COLOR;\n  if (url) {\n    res = CACHE[url];\n    if (!res) {\n      try {\n        const image = await jimp.read(url);\n        const pixel = await image.resize(1, 1).getPixelColor(0, 0);\n        const bg = jimp.intToRGBA(pixel);\n        CACHE[url] = res = {\n          bg,\n          fg:\n            bg.r * 0.299 + bg.g * 0.587 + bg.b * 0.114 > 186\n              ? { r: 0, g: 0, b: 0 }\n              : { r: 255, g: 255, b: 255 },\n        };\n      } catch (err) {\n        console.debug(\"An error prevented colorpicking\", err);\n      }\n    }\n  }\n  return res;\n};\n","import { AsyncAction, createAction, Dispatch } from \".\";\nimport { setRoomColor } from \"./rooms\";\nimport { pickColor } from \"../utils/colorpicker\";\nimport { setQueuePosition } from \"./queue\";\nimport { Player } from \"../utils/player\";\nimport { RootState } from \"../reducers\";\nimport { MediaAccess } from \"../utils/medias\";\n\n// ------------------------------------------------------------------\n\nexport type PlayerAction =\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setPlayerTrackPercent>\n  | ReturnType<typeof start>\n  | ReturnType<typeof stop>;\n\nconst reset = () => createAction(\"player/RESET\");\nconst setPlayerTrackPercent = (percent: number) =>\n  createAction(\"player/SET_TRACK_PERCENT\", percent);\nconst start = () => createAction(\"player/START\");\nconst stop = () => createAction(\"player/STOP\");\n\n// ------------------------------------------------------------------\n\nexport const startPlayer = (): AsyncAction => async (\n  dispatch,\n  getState,\n  { queuePlayer }\n) => {\n  if (!PLAYER_TIMER1 && !PLAYER_TIMER2) {\n    _installTimer1(dispatch, getState, queuePlayer);\n    _installTimer2(dispatch, getState, queuePlayer);\n    dispatch(start());\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPlayer = (): AsyncAction => async (\n  dispatch,\n  _,\n  { queuePlayer }\n) => {\n  if (PLAYER_TIMER1 && PLAYER_TIMER2) {\n    clearTimeout(PLAYER_TIMER1);\n    PLAYER_TIMER1 = null;\n    clearTimeout(PLAYER_TIMER2);\n    PLAYER_TIMER2 = null;\n    await queuePlayer.stop();\n    dispatch(stop());\n    dispatch(setPlayerTrackPercent(0));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPreview = (): AsyncAction => async (\n  _1,\n  _2,\n  { previewPlayer }\n) => {\n  console.debug(\"Stop previewing...\");\n  await previewPlayer.stop();\n};\n\n// ------------------------------------------------------------------\n\nlet PLAYER_TIMER1: NodeJS.Timeout | null = null;\nlet PLAYER_TIMER2: NodeJS.Timeout | null = null;\n\nconst _computeNextPosition = (\n  queuePlayer: ReturnType<typeof Player>,\n  queueTrackPosition: number,\n  medias: MediaAccess[]\n) => {\n  let nextPosition = -1;\n  const playingTrackID = queuePlayer.getPlayingTrackID();\n  const playingTrackPosition = queuePlayer.getPlayingTrackPosition();\n  if (playingTrackPosition !== queueTrackPosition) {\n    if (queuePlayer.isPlaying()) {\n      // User has clicked an other track or added/removed a track in queue\n      nextPosition = queueTrackPosition;\n    } else {\n      // Not playing which means previous track has terminated\n      nextPosition =\n        playingTrackPosition >= 0 ? playingTrackPosition : queueTrackPosition;\n    }\n  } else if (playingTrackID !== medias[queueTrackPosition % medias.length].id) {\n    // User has deleted playing track\n    nextPosition = queueTrackPosition;\n  }\n  return nextPosition;\n};\n\nconst _installTimer1 = (\n  dispatch: Dispatch,\n  getState: () => RootState,\n  queuePlayer: ReturnType<typeof Player>\n) => {\n  // Don't use setInterval because a step could be triggered before previous one terminated\n  PLAYER_TIMER1 = setTimeout(async () => {\n    const {\n      queue: { medias: queueMedias, position },\n      medias: {\n        medias: { track: tracks },\n      },\n    } = getState();\n    if (queueMedias.length > 0) {\n      // Detect and apply change to queue and player\n      const nextTrackPosition = _computeNextPosition(\n        queuePlayer,\n        position,\n        queueMedias\n      );\n      if (nextTrackPosition >= 0) {\n        const nextIndex = nextTrackPosition % queueMedias.length;\n        const nextTrack = tracks[queueMedias[nextIndex].id];\n        console.debug(\"Detected play change...\", {\n          nextIndex,\n          nextTrack,\n          nextTrackPosition,\n        });\n        dispatch(setQueuePosition(nextTrackPosition));\n        const [color] = await Promise.all([\n          pickColor(nextTrack.album.cover_small),\n          queuePlayer.play(\n            nextTrackPosition,\n            nextTrack.id,\n            nextTrack.preview,\n            0\n          ),\n        ]);\n        dispatch(setRoomColor(color));\n      }\n\n      // Reschedule time\n      _installTimer1(dispatch, getState, queuePlayer);\n    } else {\n      // Last track has been removed from queue by user\n      console.debug(\"No more tracks in queue...\");\n      dispatch(stopPlayer());\n    }\n  }, 250);\n};\n\nconst _installTimer2 = (\n  dispatch: Dispatch,\n  getState: () => RootState,\n  queuePlayer: ReturnType<typeof Player>\n) => {\n  // Don't use setInterval because a step could be triggered before previous one terminated\n  PLAYER_TIMER2 = setTimeout(() => {\n    const {\n      queue: { medias: queueMedias },\n    } = getState();\n    if (queueMedias.length > 0) {\n      // Refresh player track percent\n      dispatch(setPlayerTrackPercent(queuePlayer.getPlayingTrackPercent()));\n\n      // Reschedule time\n      _installTimer2(dispatch, getState, queuePlayer);\n    }\n  }, 250); // Must do very few operation because called very often (if we put less it creates blink on mobile when playing & scrolling)\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Queue from \"../../components/Room/Queue\";\nimport { extractMedias } from \"../../selectors/medias\";\nimport { setQueuePosition, removeFromQueue } from \"../../actions/queue\";\nimport { stopPlayer, startPlayer } from \"../../actions/player\";\nimport { isRoomLoaded, isRoomLocked } from \"../../selectors/rooms\";\nimport { openModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  loaded: isRoomLoaded(state),\n  locked: isRoomLocked(state),\n  medias: extractMedias(state, state.queue.medias),\n  playing: state.player.playing,\n  playingIndex: state.queue.position % state.queue.medias.length,\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onPlay: (index: number) => {\n    dispatch(startPlayer());\n    dispatch(setQueuePosition(index));\n  },\n  onRemove: (index: number) => dispatch(removeFromQueue(index)),\n  onSearch: () => dispatch(openModal({ type: \"Search\", props: null })),\n  onStop: () => dispatch(stopPlayer()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Queue);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport { MappedProps } from \"../../containers/Room/Progress\";\nimport \"./Progress.scss\";\n\n// ------------------------------------------------------------------\n\nclass Progress extends Component<MappedProps> {\n  public render = () => {\n    const { playing, value } = this.props;\n    return (\n      <div className={classNames(\"Progress\", { playing })}>\n        <progress max={100} value={value * 100} />\n      </div>\n    );\n  };\n}\n\nexport default Progress;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Progress from \"../../components/Room/Progress\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  playing: state.player.playing,\n  value: state.player.track_percent\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Progress);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Room/Controls\";\nimport IconButton from \"../Common/IconButton\";\nimport Progress from \"../../containers/Room/Progress\";\nimport \"./Controls.scss\";\n\n// ------------------------------------------------------------------\n\nclass Controls extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      onMoveBackward,\n      onMoveForward,\n      onPlay,\n      onSearch,\n      onStop,\n      onUnlock,\n      tracksCount,\n      locked,\n      playing,\n      t,\n    } = this.props;\n    return (\n      <div className=\"Controls\">\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              icon=\"step-backward\"\n              onClick={onMoveBackward}\n              size=\"M\"\n              title={t(\"player.backward\")}\n            />\n          </div>\n          <div className=\"Control\">\n            {!playing ? (\n              <IconButton\n                disabled={locked || tracksCount === 0}\n                onClick={onPlay}\n                icon=\"play\"\n                size=\"L\"\n                title={t(\"player.play\")}\n              />\n            ) : (\n              <IconButton\n                disabled={locked || tracksCount === 0}\n                onClick={onStop}\n                icon=\"pause\"\n                title={t(\"player.stop\")}\n                size=\"L\"\n              />\n            )}\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              icon=\"step-forward\"\n              onClick={onMoveForward}\n              size=\"M\"\n              title={t(\"player.forward\")}\n            />\n          </div>\n        </div>\n        <Progress />\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked || tracksCount === 0}\n              onClick={this.onClear}\n              icon=\"trash\"\n              title={t(\"rooms.clear\")}\n            />\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              onClick={onSearch}\n              icon=\"search\"\n              title={t(\"medias.search\")}\n            />\n          </div>\n          <div className=\"Control\">\n            {locked ? (\n              <IconButton\n                icon=\"lock\"\n                onClick={onUnlock}\n                size=\"M\"\n                title={t(\"rooms.locked\")}\n              />\n            ) : (\n              <IconButton\n                icon=\"unlock\"\n                onClick={this.onLock}\n                size=\"M\"\n                title={t(\"rooms.unlocked\")}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  private onClear = () => {\n    const { onClear, onConfirm, t } = this.props;\n    onConfirm(t(\"rooms.confirm_clear\"), onClear);\n  };\n\n  private onLock = () => {\n    const { onConfirm, t } = this.props;\n    onConfirm(t(\"rooms.confirm_lock\"), this.props.onLock);\n  };\n}\n\nexport default withTranslation()(Controls);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Controls from \"../../components/Room/Controls\";\nimport { startPlayer, stopPlayer } from \"../../actions/player\";\nimport { openModal, confirmModal } from \"../../actions/modals\";\nimport { clearQueue, moveBackward, moveForward } from \"../../actions/queue\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\nimport { displayMessage } from \"../../actions/messages\";\nimport { lockRoom } from \"../../actions/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  tracksCount: state.queue.medias.length,\n  locked: isRoomLocked(state),\n  playing: state.player.playing,\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClear: () => {\n    dispatch(clearQueue());\n    dispatch(stopPlayer());\n  },\n  onConfirm: (question: string, onConfirmed: () => void) => {\n    dispatch(confirmModal(question, onConfirmed));\n  },\n  onLock: () => dispatch(lockRoom()),\n  onUnlock: () => dispatch(openModal({ type: \"UnlockRoom\", props: null })),\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message)),\n  onMoveBackward: () => dispatch(moveBackward()),\n  onMoveForward: () => dispatch(moveForward()),\n  onPlay: () => dispatch(startPlayer()),\n  onSearch: () => dispatch(openModal({ type: \"Search\", props: null })),\n  onStop: () => dispatch(stopPlayer()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Controls);\n","import React, { Component } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/Room\";\nimport Head from \"../../containers/Room/Head\";\nimport Queue from \"../../containers/Room/Queue\";\nimport Controls from \"../../containers/Room/Controls\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = RouteComponentProps<{\n  room_id: string;\n}>;\n\nclass Room extends Component<Props & MappedProps> {\n  public componentDidMount = () => {\n    this.props.onEnter();\n  };\n\n  public componentWillUnmount = () => {\n    this.props.onExit();\n  };\n\n  public render = () => {\n    const {\n      color: { fg, bg }\n    } = this.props;\n    return (\n      <div\n        className=\"Room\"\n        style={{\n          color: `rgb(${fg.r}, ${fg.g}, ${fg.b})`,\n          backgroundColor: `rgb(${bg.r}, ${bg.g}, ${bg.b})`\n        }}\n      >\n        <Head />\n        <Queue />\n        <Controls />\n      </div>\n    );\n  };\n}\n\nexport default withRouter(Room);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport * as qs from \"qs\";\n//\nimport { RootState } from \"../../reducers\";\nimport Room, { Props } from \"../../components/Room\";\nimport { enterRoom, exitRoom } from \"../../actions/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState, ownProps: Props) => ({\n  color: state.rooms.room_color\n});\n\nconst dispatchToProps = (\n  dispatch: ThunkDispatch<RootState, any, any>,\n  ownProps: Props\n) => {\n  const { key } = qs.parse(ownProps.location.search.substr(1)) as {\n    key?: string;\n  };\n  return {\n    onEnter: () =>\n      dispatch(enterRoom(ownProps.match.params.room_id, key || \"\")),\n    onExit: () => dispatch(exitRoom())\n  };\n};\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Room);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Splash\";\nimport IconButton from \"../Common/IconButton\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass Splash extends Component<MappedProps & WithTranslation> {\n  public render = () => {\n    const { loggedIn, onCreateRoom, onConnectUser, t } = this.props;\n    return (\n      <div className=\"Splash\">\n        <div className=\"Top\">\n          <div className=\"Logo\">\n            <Link to=\"/\">Party</Link>\n          </div>\n          <div className=\"PoweredWith\">\n            <span>{t(\"splash.powered_with\")}</span>\n            <a\n              href=\"https://www.deezer.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                src=\"/images/deezer.svg\"\n                height=\"20px\"\n                title=\"Deezer\"\n                alt=\"Deezer Logo\"\n              />\n            </a>\n          </div>\n        </div>\n        <div className=\"Middle\">\n          <div className=\"Menu\">\n            {loggedIn ? (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"plus\"\n                  onClick={onCreateRoom}\n                  size=\"L\"\n                  title={t(\"rooms.create\")}\n                />\n              </div>\n            ) : (\n              <>\n                <div className=\"MenuItem\">\n                  <IconButton\n                    displayTitle={true}\n                    onClick={onConnectUser}\n                    icon=\"sign-in\"\n                    size=\"L\"\n                    title={t(\"users.connect\")}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n        <div className=\"Bottom\">\n          <div className=\"Menu\">\n            {loggedIn ? (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"sign-out\"\n                  onClick={this.onDisconnect}\n                  size=\"M\"\n                  title={t(\"users.disconnect\")}\n                />\n              </div>\n            ) : (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"info\"\n                  onClick={() => {}}\n                  size=\"M\"\n                  title={t(\"splash.CGU\")}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  onDisconnect = () => {\n    const { onConfirm, onDisconnectUser, t } = this.props;\n    onConfirm(t(\"users.confirm_disconnect\"), onDisconnectUser);\n  };\n}\n\nexport default withTranslation()(Splash);\n","import { RootState } from \"../reducers\";\n\nexport const extractUser = (state: RootState) => state.users.user_info;\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { UserInfo } from \"../utils/users\";\nimport { FirebaseUser } from \"../utils/firebase\";\nimport { displayError } from \"./messages\";\nimport { extractErrorMessage } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type UsersAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setUser>\n  | ReturnType<typeof setUserAccess>;\n\nconst fetching = () => createAction(\"users/FETCHING\");\nconst success = () => createAction(\"users/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"users/ERROR\", error);\nconst reset = () => createAction(\"users/RESET\");\nconst setUser = (\n  user: ReturnType<typeof FirebaseUser> | null,\n  info: UserInfo | null\n) => createAction(\"users/SET_USER\", { user, user_info: info });\nconst setUserAccess = (id: string, secret: string) =>\n  createAction(\"users/SET_USER_ACCESS\", { id, secret });\n\n// ------------------------------------------------------------------\n\nexport const createUser = (name: string, secret: string): AsyncAction => async (\n  dispatch\n) => {\n  try {\n    console.debug(\"Creating user...\");\n    const id = v4();\n    await FirebaseUser(id, secret).update({ name });\n    dispatch(connectUser(id, secret));\n  } catch (err) {\n    dispatch(displayError(extractErrorMessage(err)));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_CB: any = null;\n\nexport const connectUser = (id: string, secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    users: { user },\n  } = getState();\n  if (!user || user.id !== id) {\n    dispatch(disconnectUser());\n    try {\n      console.debug(\"Connection user...\", { id, secret });\n      const newUser = FirebaseUser(id);\n      dispatch(setUser(newUser, await newUser.wait()));\n      dispatch(setUserAccess(id, secret));\n      FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n        const newInfo = snapshot.val() as UserInfo;\n        dispatch(setUser(newUser, newInfo));\n      };\n      newUser.subscribeInfo(FIREBASE_CB);\n    } catch (err) {\n      dispatch(displayError(extractErrorMessage(err)));\n      dispatch(setUserAccess(\"\", \"\"));\n    }\n  }\n};\n\nexport const disconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    users: { user },\n  } = getState();\n  if (user) {\n    console.debug(\"Disconnecting user...\");\n    user.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_CB = null;\n    setUser(null, null);\n    dispatch(setUserAccess(\"\", \"\"));\n  }\n};\n\nexport const reconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    users: {\n      user_access: { id, secret },\n    },\n  } = getState();\n  if (id && secret) {\n    console.debug(\"Reconnecting user...\", { id, secret });\n    dispatch(connectUser(id, secret));\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Splash from \"../../components/Splash\";\nimport { extractUser } from \"../../selectors/users\";\nimport { openModal, confirmModal } from \"../../actions/modals\";\nimport { disconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  loggedIn: !!state.users.user_access.id,\n  user: extractUser(state),\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onConfirm: (question: string, onConfirmed: () => void) => {\n    dispatch(confirmModal(question, onConfirmed));\n  },\n  onCreateRoom: () => dispatch(openModal({ type: \"CreateRoom\", props: null })),\n  onConnectUser: () => dispatch(openModal({ type: \"CreateUser\", props: null })),\n  onDisconnectUser: () => dispatch(disconnectUser()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Splash);\n","import React, { Component, FormEvent, ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { MappedProps } from \"../../containers/Modals/Modal\";\nimport IconButton from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n  className?: string;\n  title: string;\n  renderFoot?: () => React.ReactNode;\n  onSubmit?: () => void;\n};\n\nclass Modal extends Component<Props & MappedProps & WithTranslation> {\n  public render = () => {\n    const {\n      children,\n      className,\n      title,\n      renderFoot,\n      onClose,\n      onPop,\n      has_prev_modal,\n      t,\n    } = this.props;\n    return (\n      <form className={classNames(\"Modal\", className)} onSubmit={this.onSubmit}>\n        <div className=\"ModalHead\">\n          <IconButton\n            kind=\"special\"\n            className={classNames(\"ModalHeadBack\", {\n              hidden: !has_prev_modal,\n            })}\n            icon=\"angle-left\"\n            title=\"Back\"\n            onClick={onPop}\n          />\n          <div className=\"ModalTitle\">{title}</div>\n          <IconButton\n            kind=\"special\"\n            className=\"ModalHeadClose\"\n            onClick={onClose}\n            title={t(\"cancel\")}\n            icon=\"times\"\n          />\n        </div>\n        <div className=\"ModalBody\">{children}</div>\n        <div className=\"ModalFoot\">{renderFoot && renderFoot()}</div>\n      </form>\n    );\n  };\n\n  private onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  };\n}\n\nexport default withTranslation()(Modal);\n","import { connect } from \"react-redux\";\n//\nimport Modal from \"../../components/Modals/Modal\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  has_prev_modal: state.modals.stack.length > 1\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onClose: () => dispatch(popModal()),\n  onPop: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport Modal from \"../../containers/Modals/Modal\";\nimport \"./FormModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  className?: string;\n  onSubmit: () => void;\n  renderButtons: () => React.ReactNode;\n  title: string;\n};\n\nclass FormModal extends Component<Props> {\n  public render = () => {\n    const { children, className, renderButtons, title, onSubmit } = this.props;\n    return (\n      <Modal\n        className={classNames(\"FormModal\", className)}\n        title={title}\n        renderFoot={renderButtons}\n        onSubmit={onSubmit}\n      >\n        {children}\n      </Modal>\n    );\n  };\n}\n\nexport default FormModal;\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Modals/ConfirmModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\nexport type ConfirmModalProps = {\n  question: string;\n  onCanceled?: () => void;\n  onConfirmed: () => void;\n};\n\nclass ConfirmModal extends Component<\n  ConfirmModalProps & MappedProps & WithTranslation\n> {\n  public render = () => {\n    const { question, t } = this.props;\n    return (\n      <FormModal\n        title={t(\"confirm\")}\n        onSubmit={this.props.onConfirmed}\n        renderButtons={this.renderButtons}\n      >\n        {question}\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"cancel\")}\n          kind=\"primary\"\n          icon=\"plus\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onCancel} />\n      </>\n    );\n  };\n}\n\nexport default withTranslation()(ConfirmModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport ConfirmModal, {\n  ConfirmModalProps,\n} from \"../../components/Modals/ConfirmModal\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (\n  dispatch: ThunkDispatch<RootState, any, any>,\n  ownProps: ConfirmModalProps\n) => ({\n  onCancel: () => {\n    dispatch(popModal());\n    if (ownProps.onCanceled) {\n      ownProps.onCanceled();\n    }\n  },\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(ConfirmModal);\n","import React, { Component, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/ConnectUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  id: string;\n  secret: string;\n};\n\nclass ConnectUserModal extends Component<MappedProps & WithTranslation, State> {\n  private idRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    id: \"\",\n    secret: \"\",\n  };\n\n  public componentDidMount() {\n    if (this.idRef.current) {\n      this.idRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { id, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"users.connection\")}\n        onSubmit={this.onConnect}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-id\">{t(\"users.user_id\")}</label>\n          <input\n            id=\"modal-id\"\n            type=\"text\"\n            placeholder={t(\"users.id_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={id}\n            ref={this.idRef}\n            onChange={(e) => {\n              this.setState({ id: e.target.value });\n            }}\n          />\n        </div>\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">{t(\"users.secret\")}</label>\n          <input\n            id=\"modal-secret\"\n            type=\"password\"\n            placeholder={t(\"users.secret_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            onChange={(e) => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"users.connect\")}\n          kind=\"primary\"\n          icon=\"sign-in\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n        <IconButton\n          title={t(\"users.create\")}\n          kind=\"default\"\n          icon=\"plus\"\n          onClick={this.props.onToggle}\n        />\n      </>\n    );\n  };\n\n  private onConnect = () => {\n    const { onClose, onConnect, onError } = this.props;\n    const { id, secret } = this.state;\n    if (id.trim().length === 0) {\n      onError(\"users.id_is_invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"users.secret_is_invalid\");\n      return;\n    }\n    onConnect(id, secret);\n    onClose();\n  };\n}\n\nexport default withTranslation()(ConnectUserModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport ConnectUserModal from \"../../components/Users/ConnectUserModal\";\nimport { connectUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onConnect: (id: string, secret: string) => dispatch(connectUser(id, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"CreateUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(ConnectUserModal);\n","import React, { Component } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  id: string;\n  label: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  value: string;\n};\n\nclass SecretField extends Component<Props & MappedProps & WithTranslation> {\n  public render = () => {\n    const { id, label, onChange, placeholder, value } = this.props;\n    return (\n      <div className=\"ModalField\">\n        <label htmlFor={id}>{label}</label>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <input\n            style={{\n              flexGrow: 1,\n              marginRight: \"0.5rem\",\n            }}\n            id={id}\n            type=\"password\"\n            placeholder={placeholder}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n          />\n          <IconButton\n            icon=\"clipboard\"\n            onClick={this.onCopyToClipboard}\n            size=\"M\"\n            title={`Copy to Clipboard`}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyToClipboard = async () => {\n    const { onMessage, value, t } = this.props;\n    await copyToClipboard(value);\n    onMessage(t(\"secret_copied_to_clipboard\"));\n  };\n}\n\nexport default withTranslation()(SecretField);\n","import { connect } from \"react-redux\";\n//\nimport SecretField from \"../../components/Modals/SecretField\";\nimport { RootState } from \"../../reducers\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message))\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretField);\n","import React, { Component, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/CreateRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\nlet ROOM_COUNTER = 1;\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateRoomModal extends Component<MappedProps & WithTranslation, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4(),\n  };\n\n  public componentDidMount() {\n    this.setState({\n      name: `${this.props.t(\"rooms.room\")} ${ROOM_COUNTER}`,\n    });\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"rooms.room_creation\")}\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">{t(\"rooms.name\")}</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder={t(\"rooms.name_placeholder\")}\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label={t(\"rooms.key\")}\n          placeholder={t(\"rooms.key_placeholder\")}\n          value={secret}\n          onChange={(newSecret) => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"rooms.create\")}\n          kind=\"primary\"\n          icon=\"plus\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </>\n    );\n  };\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(\"rooms.name_is_invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"rooms.secret_is_invalid\");\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n    ROOM_COUNTER++;\n  };\n}\n\nexport default withTranslation()(CreateRoomModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateRoomModal from \"../../components/Room/CreateRoomModal\";\nimport { createRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createRoom(name, secret)),\n  onError: (message: string) => dispatch(displayError(message))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateRoomModal);\n","import React, { Component, RefObject, createRef } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/CreateUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\nlet USER_COUNTER = 1;\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateUserModal extends Component<MappedProps & WithTranslation, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4(),\n  };\n\n  public componentDidMount() {\n    this.setState({\n      name: `${this.props.t(\"users.user\")} ${USER_COUNTER}`,\n    });\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"users.user_creation\")}\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">{t(\"users.name\")}</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder={t(\"users.name_placeholder\")}\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={(e) => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label={t(\"users.secret\")}\n          placeholder={t(\"users.secret_placeholder\")}\n          value={secret}\n          onChange={(newSecret) => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"users.create\")}\n          kind=\"primary\"\n          icon=\"plus\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n        <IconButton\n          title={t(\"users.connect\")}\n          kind=\"default\"\n          icon=\"sign-in\"\n          onClick={this.props.onToggle}\n        />\n      </>\n    );\n  };\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(\"users.name_is_invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"users.secret_is_invalid\");\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n    USER_COUNTER++;\n  };\n}\n\nexport default withTranslation()(CreateUserModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateUserModal from \"../../components/Users/CreateUserModal\";\nimport { createUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createUser(name, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"ConnectUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateUserModal);\n","// import Axios from \"axios\";\nimport jsonp from \"jsonp\";\n//\nimport {\n  SearchAllResults,\n  Album,\n  Playlist,\n  Track,\n  MediaType,\n  Media,\n} from \"./medias\";\nimport { sleep } from \".\";\n\n// ------------------------------------------------------------------\n\nconst RATE_LIMIT_DELAY = 5000; // ms\n\n// ------------------------------------------------------------------\n\nexport type ApiError = {\n  code: number;\n  message: string;\n  type: string;\n};\n\nexport type ApiAlbum = {\n  error?: ApiError;\n  artist: {\n    id: number;\n    name: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  available: boolean;\n  cover_big: string;\n  cover_small: string;\n  id: number;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n};\n\nexport type ApiPlaylist = {\n  error?: ApiError;\n  creator?: {\n    id: number;\n    name: string;\n  };\n  id: number;\n  picture_big: string;\n  picture_small: string;\n  public: true;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  user?: {\n    id: number;\n    name: string;\n  };\n};\n\nexport type ApiTrack = {\n  error?: ApiError;\n  album: {\n    cover_big: string;\n    cover_small: string;\n    id: number;\n    title: string;\n  };\n  artist: {\n    id: number;\n    name: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  duration: number;\n  id: number;\n  preview: string;\n  readable: boolean;\n  title: string;\n};\n\nexport type ApiSearchResult<T> = {\n  data: T[];\n  total: number;\n};\n\n// ------------------------------------------------------------------\n\nconst ConvertAlbum = (album: ApiAlbum): Album => ({\n  artist: {\n    id: album.artist.id.toString(),\n    name: album.artist.name,\n    link: `https://www.deezer.com/artist/${album.artist.id}`,\n    picture_big: album.artist.picture_big,\n    picture_small: album.artist.picture_small,\n  },\n  cover_big: album.cover_big,\n  cover_small: album.cover_small,\n  id: album.id.toString(),\n  link: `https://www.deezer.com/album/${album.id}`,\n  title: album.title,\n  tracks:\n    album.tracks !== void 0\n      ? album.tracks.data.map((track) => ConvertTrack(track, album))\n      : void 0,\n  type: \"album\",\n});\n\nconst ConvertPlaylist = (\n  playlist: ApiPlaylist,\n  user: { id: number; name: string }\n): Playlist => ({\n  id: playlist.id.toString(),\n  link: `https://www.deezer.com/playlist/${playlist.id}`,\n  picture_big: playlist.picture_big,\n  picture_small: playlist.picture_small,\n  public: playlist.public,\n  title: playlist.title,\n  tracks:\n    playlist.tracks !== void 0\n      ? playlist.tracks.data.map((track) => ConvertTrack(track, track.album))\n      : void 0,\n  type: \"playlist\",\n  user: {\n    id: user.id.toString(),\n    name: user.name,\n    link: `https://www.deezer.com/profile/${user.id}`,\n  },\n});\n\nconst ConvertTrack = (\n  track: ApiTrack,\n  album: { id: number; title: string; cover_big: string; cover_small: string }\n): Track => ({\n  album: {\n    id: album.id.toString(),\n    link: `https://www.deezer.com/album/${album.id}`,\n    title: album.title,\n    cover_big: album.cover_big,\n    cover_small: album.cover_small,\n  },\n  artist: {\n    id: track.artist.id.toString(),\n    name: track.artist.name,\n    link: `https://www.deezer.com/artist/${track.artist.id}`,\n    picture_big: track.artist.picture_big,\n    picture_small: track.artist.picture_small,\n  },\n  duration: track.duration,\n  id: track.id.toString(),\n  link: `https://www.deezer.com/track/${track.id}`,\n  preview: track.preview,\n  readable: track.readable,\n  title: track.title,\n  type: \"track\",\n});\n\n// ------------------------------------------------------------------\n\nexport const DeezerApi = () => {\n  const API_BASE = \"https://api.deezer.com\";\n\n  const _asyncJsonp = <T>(url: string): Promise<T> =>\n    new Promise((resolve, reject) => {\n      jsonp(url, void 0, (err, data) => {\n        if (err) {\n          reject(new Error(err.message));\n        } else {\n          resolve(data);\n        }\n      });\n    });\n\n  const _call = async <T>(path: string, qs?: string) => {\n    // We have to rely on jsonp because the Deezer api is CORS restricted\n    const fullpath = qs\n      ? `${API_BASE}/${path}?${qs}&output=jsonp&callback=`\n      : `${API_BASE}/${path}?output=jsonp&callback=`;\n    return await _asyncJsonp<T>(fullpath);\n  };\n\n  const _search = <T>(type: MediaType, query: string) =>\n    _call<ApiSearchResult<T>>(\n      `search/${type}`,\n      `q=${encodeURIComponent(query)}`\n    );\n\n  const _load = <T extends { error?: ApiError }>(\n    type: MediaType,\n    ids: string[]\n  ) =>\n    Promise.all(\n      ids.map(async (id) => {\n        const media = await _call<T>(`${type}/${id}`);\n        return media.error ? null : media;\n      })\n    );\n\n  const _loadWithRetry = async <T extends { error?: ApiError }>(\n    type: MediaType,\n    ids: string[]\n  ) => {\n    let first = true;\n    const medias: Array<T | null> = ids.map(() => null);\n    while (medias.includes(null)) {\n      const subIds: string[] = [];\n      const subIndexes: number[] = [];\n      medias.forEach((media, index) => {\n        if (!media) {\n          subIds.push(ids[index]);\n          subIndexes.push(index);\n        }\n      });\n      if (!first) {\n        console.debug(`Handling rate limit delayed batch...`, { subIds });\n        await sleep(RATE_LIMIT_DELAY);\n      }\n      const subMedias = await _load<T>(type, subIds);\n      subIndexes.forEach((index, subIndex) => {\n        medias[index] = subMedias[subIndex];\n      });\n      first = false;\n    }\n    return medias as T[];\n  };\n\n  const searchAlbums = (query: string) => _search<ApiAlbum>(\"album\", query);\n\n  const searchPlaylists = (query: string) =>\n    _search<ApiPlaylist>(\"playlist\", query);\n\n  const searchTracks = (query: string) => _search<ApiTrack>(\"track\", query);\n\n  const searchAll = async (query: string): Promise<SearchAllResults> => {\n    const [album, playlist, track] = await Promise.all([\n      searchAlbums(query),\n      searchPlaylists(query),\n      searchTracks(query),\n    ]);\n    return {\n      // keys are MediaType\n      album: album.data.map(ConvertAlbum),\n      playlist: playlist.data.map((playlist) =>\n        ConvertPlaylist(playlist, playlist.user!)\n      ),\n      track: track.data.map((track) => ConvertTrack(track, track.album)),\n    };\n  };\n\n  const loadAlbums = async (ids: string[]): Promise<Album[]> => {\n    const albums = await _loadWithRetry<ApiAlbum>(\"album\", ids);\n    return albums.map((album) => ConvertAlbum(album));\n  };\n\n  const loadPlaylists = async (ids: string[]): Promise<Playlist[]> => {\n    const playlists = await _loadWithRetry<ApiPlaylist>(\"playlist\", ids);\n    return playlists.map((playlist) =>\n      ConvertPlaylist(playlist, playlist.creator!)\n    );\n  };\n\n  const loadTracks = async (ids: string[]): Promise<Track[]> => {\n    const tracks = await _loadWithRetry<ApiTrack>(\"track\", ids);\n    return tracks.map((track) => ConvertTrack(track, track.album));\n  };\n\n  const load = async (type: MediaType, ids: string[]): Promise<Media[]> => {\n    switch (type) {\n      case \"album\":\n        return loadAlbums(ids);\n      case \"playlist\":\n        return loadPlaylists(ids);\n      case \"track\":\n        return loadTracks(ids);\n    }\n  };\n\n  return {\n    searchAll,\n    load,\n    loadTracks,\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const DEFAULT_API = DeezerApi();\n","export type MediaAccess = {\n  id: string;\n  provider: ProviderType;\n  type: MediaType;\n};\n\nexport type MediaType = \"album\" | \"playlist\" | \"track\";\n\nexport type MediaTypeDefinition = {\n  label: string;\n  provider: ProviderType;\n  type: MediaType;\n};\n\nexport type ProviderType = \"deezer\";\n\nexport type TrackType = \"track\";\n\n// ------------------------------------------------------------------\n\nexport type Album = {\n  artist: {\n    id: string;\n    link: string;\n    name: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  cover_big: string;\n  cover_small: string;\n  id: string;\n  link: string;\n  title: string;\n  tracks?: Track[];\n  type: \"album\";\n};\n\nexport type Playlist = {\n  id: string;\n  link: string;\n  picture_big: string;\n  picture_small: string;\n  public: true;\n  title: string;\n  tracks?: Track[];\n  type: \"playlist\";\n  user: {\n    id: string;\n    link: string;\n    name: string;\n  };\n};\n\nexport type Track = {\n  album: {\n    cover_big: string;\n    cover_small: string;\n    id: string;\n    link: string;\n    title: string;\n  };\n  artist: {\n    id: string;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  duration: number;\n  id: string;\n  link: string;\n  preview: string;\n  readable: boolean;\n  title: string;\n  type: \"track\";\n};\n\nexport type Media = Album | Playlist | Track;\n\n// ------------------------------------------------------------------\n\nexport type SearchAllResults = {\n  // keys are MediaType\n  album: Album[];\n  playlist: Playlist[];\n  track: Track[];\n};\n\n// ------------------------------------------------------------------\n\nexport const MEDIA_TYPE_DEFINITIONS: MediaTypeDefinition[] = [\n  {\n    label: \"medias.albums\",\n    provider: \"deezer\",\n    type: \"album\",\n  },\n  {\n    label: \"medias.playlists\",\n    provider: \"deezer\",\n    type: \"playlist\",\n  },\n  {\n    label: \"medias.tracks\",\n    provider: \"deezer\",\n    type: \"track\",\n  },\n];\n","import React, { ReactNode } from \"react\";\n//\nimport { Media } from \"../../utils/medias\";\n\n// ------------------------------------------------------------------\n\nconst MAX_RESULTS_COUNT = 5;\n\n// ------------------------------------------------------------------\n\nconst SearchResultCategory = ({\n  items,\n  label,\n  cb,\n}: {\n  items: Media[];\n  label: string;\n  cb: (item: Media) => ReactNode;\n}) =>\n  items.length > 0 ? (\n    <>\n      <div className=\"ModalField\">\n        <label>{label}</label>\n      </div>\n      {items.slice(0, MAX_RESULTS_COUNT).map((item) => (\n        <div key={item.id} className=\"ModalField\">\n          <div className=\"SearchResultItem\">{cb(item)}</div>\n        </div>\n      ))}\n    </>\n  ) : null;\n\nexport default SearchResultCategory;\n","import React, { Component, createRef, RefObject } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/SearchModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport { DEFAULT_API } from \"../../utils/deezer\";\nimport Media from \"./Medias\";\nimport {\n  MEDIA_TYPE_DEFINITIONS,\n  MediaType,\n  ProviderType,\n  SearchAllResults,\n} from \"../../utils/medias\";\nimport SearchResultCategory from \"./SearchResultCategory\";\nimport \"./SearchModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  playingMediaId: string;\n  playingMediaType: MediaType;\n  provider: ProviderType;\n  query: string;\n  results: SearchAllResults;\n};\n\nclass SearchModal extends Component<MappedProps & WithTranslation, State> {\n  private queryRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    playingMediaId: \"\",\n    playingMediaType: \"track\",\n    provider: \"deezer\",\n    query: \"\",\n    results: {\n      // keys are MediaType\n      album: [],\n      playlist: [],\n      track: [],\n    },\n  };\n\n  public componentDidMount() {\n    if (this.queryRef.current) {\n      this.queryRef.current.focus();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.props.onStop();\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    return (\n      <FormModal\n        className=\"SearchModal\"\n        title={t(\"medias.medias_search\")}\n        onSubmit={this.onSearch}\n        renderButtons={this.renderButtons}\n      >\n        {this.renderInputs()}\n        {this.renderResults()}\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"medias.search\")}\n          kind=\"primary\"\n          icon=\"search\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </>\n    );\n  };\n\n  private renderInputs = () => {\n    const { t } = this.props;\n    const { query } = this.state;\n    return (\n      <div className=\"ModalField\">\n        <input\n          id=\"modal-query\"\n          type=\"text\"\n          placeholder={t(\"medias.search_placeholder\")}\n          maxLength={100}\n          minLength={2}\n          required={true}\n          value={query}\n          ref={this.queryRef}\n          onChange={(e) => {\n            this.setState({ query: e.target.value });\n          }}\n        />\n      </div>\n    );\n  };\n\n  private renderResults = () => {\n    const { onSelect, locked, t } = this.props;\n    const { playingMediaId, playingMediaType, provider, results } = this.state;\n    return MEDIA_TYPE_DEFINITIONS.map(({ label, type }) => (\n      <SearchResultCategory\n        key={type}\n        label={t(label)}\n        items={results[type]}\n        cb={(media) => (\n          <Media\n            actions={\n              !locked ? (\n                <IconButton\n                  title={t(\"medias.add\")}\n                  icon=\"plus\"\n                  onClick={() => onSelect(provider, type, media.id)}\n                />\n              ) : null\n            }\n            media={media}\n            mediaType={type}\n            playable={true}\n            playing={playingMediaType === type && playingMediaId === media.id}\n            onPlay={() => this.onStartPreview(type, media.id)}\n            onStop={this.onStopPreview}\n          />\n        )}\n      />\n    ));\n  };\n\n  private onSearch = async () => {\n    const { query } = this.state;\n    if (query.trim().length > 0) {\n      this.setState({ results: await DEFAULT_API.searchAll(query) });\n    }\n  };\n\n  private onStartPreview = (\n    playingMediaType: MediaType,\n    playingMediaId: string\n  ) => {\n    this.props.onPlay(this.state.provider, playingMediaType, playingMediaId);\n    this.setState({\n      playingMediaId,\n      playingMediaType,\n    });\n  };\n\n  private onStopPreview = () => {\n    this.props.onStop();\n    this.setState({\n      playingMediaId: \"\",\n      playingMediaType: \"track\",\n    });\n  };\n}\n\nexport default withTranslation()(SearchModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport SearchModal from \"../../components/Room/SearchModal\";\nimport { popModal } from \"../../actions/modals\";\nimport { loadMedias } from \"../../actions/medias\";\nimport { stopPreview } from \"../../actions/player\";\nimport { ProviderType, MediaType } from \"../../utils/medias\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onSelect: (provider: ProviderType, mediaType: MediaType, mediaId: string) =>\n    dispatch(loadMedias(provider, mediaType, [mediaId], true, false)),\n  onPlay: (provider: ProviderType, mediaType: MediaType, mediaId: string) =>\n    dispatch(loadMedias(provider, mediaType, [mediaId], false, true)),\n  onStop: () => dispatch(stopPreview()),\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(SearchModal);\n","import React, { Component, createRef, RefObject } from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/UnlockRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  secret: string;\n};\n\nclass UnlockRoomModal extends Component<MappedProps & WithTranslation, State> {\n  private secretRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    secret: \"\",\n  };\n\n  public componentDidMount() {\n    if (this.secretRef.current) {\n      this.secretRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { t } = this.props;\n    const { secret } = this.state;\n    return (\n      <FormModal\n        title={t(\"rooms.room_unlocking\")}\n        onSubmit={this.onUnlock}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">{t(\"rooms.key\")}</label>\n          <input\n            id=\"modal-secret\"\n            type=\"password\"\n            placeholder={t(\"rooms.key_placeholder\")}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            ref={this.secretRef}\n            onChange={(e) => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => {\n    const { t } = this.props;\n    return (\n      <>\n        <IconButton\n          title={t(\"rooms.unlock\")}\n          kind=\"primary\"\n          icon=\"unlock\"\n          type=\"submit\"\n        />\n        <CancelButton onClick={this.props.onClose} />\n      </>\n    );\n  };\n\n  private onUnlock = () => {\n    const { onClose, onUnlock } = this.props;\n    onUnlock(this.state.secret);\n    onClose();\n  };\n}\n\nexport default withTranslation()(UnlockRoomModal);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport UnlockRoomModal from \"../../components/Room/UnlockRoomModal\";\nimport { unlockRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onUnlock: (secret: string) => dispatch(unlockRoom(secret))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(UnlockRoomModal);\n","import React, { Component, MouseEvent } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/Modals\";\nimport { ModalPrereq } from \"../../actions/modals\";\nimport ConfirmModal from \"../../containers/Modals/ConfirmModal\";\nimport ConnectUserModal from \"../../containers/Users/ConnectUserModal\";\nimport CreateRoomModal from \"../../containers/Room/CreateRoomModal\";\nimport CreateUserModal from \"../../containers/Users/CreateUserModal\";\nimport SearchModal from \"../../containers/Room/SearchModal\";\nimport UnlockRoomModal from \"../../containers/Room/UnlockRoomModal\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst TransitionTimeout = 300;\n\n// ------------------------------------------------------------------\n\nexport const getModal = (prereq: ModalPrereq) => {\n  switch (prereq.type) {\n    case \"Confirm\":\n      return <ConfirmModal {...prereq.props} />;\n    case \"ConnectUser\":\n      return <ConnectUserModal />;\n    case \"CreateRoom\":\n      return <CreateRoomModal />;\n    case \"CreateUser\":\n      return <CreateUserModal />;\n    case \"Search\":\n      return <SearchModal />;\n    case \"UnlockRoom\":\n      return <UnlockRoomModal />;\n  }\n};\n\n// ------------------------------------------------------------------\n\ntype State = {\n  curr_prereq?: ModalPrereq;\n  prev_prereq?: ModalPrereq; // Keeping prev modal prereq for modal fadeout\n};\n\nclass Modals extends Component<MappedProps, State> {\n  public readonly state: State = {\n    curr_prereq: void 0,\n    prev_prereq: void 0,\n  };\n\n  public componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentDidUpdate = (prevProps: MappedProps) => {\n    const oldPrereq = prevProps.prereq;\n    const newPrereq = this.props.prereq;\n    if (oldPrereq !== newPrereq) {\n      // Hide current modal before showing new one (if there is a new one)\n      this.setState(\n        {\n          curr_prereq: void 0,\n          prev_prereq: oldPrereq,\n        },\n        () => {\n          if (newPrereq) {\n            setTimeout(() => {\n              this.setState({\n                curr_prereq: newPrereq,\n              });\n            }, TransitionTimeout);\n          }\n        }\n      );\n    }\n  };\n\n  public render = () => {\n    const { curr_prereq, prev_prereq } = this.state;\n    const prereq = curr_prereq || prev_prereq;\n    let modal = null;\n    if (prereq) {\n      modal = getModal(prereq);\n    }\n    return (\n      <CSSTransition\n        in={!!curr_prereq}\n        timeout={TransitionTimeout}\n        unmountOnExit={true}\n      >\n        <div className=\"ModalOverlay\" onClick={this.onClickOverlay}>\n          {modal && (\n            <div\n              className=\"ModalWrapper\"\n              role=\"dialog\"\n              onClick={this.onClickWrapper}\n            >\n              {modal}\n            </div>\n          )}\n        </div>\n      </CSSTransition>\n    );\n  };\n\n  private onClickOverlay = (event: MouseEvent) => {\n    // Clicking overlay will close current modal\n    event.stopPropagation();\n    this.props.onCloseModal();\n  };\n\n  private onClickWrapper = (event: MouseEvent) => {\n    // Clicking wrapper modal will not progagate to overlay which would close current modal\n    event.stopPropagation();\n  };\n\n  private onKeyDown = (e: KeyboardEvent) => {\n    if (e.keyCode === 27) {\n      this.props.onCloseModal();\n    }\n  };\n}\n\nexport default Modals;\n","import { connect } from \"react-redux\";\n//\nimport Modals from \"../../components/Modals\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  prereq:\n    state.modals.stack.length > 0\n      ? state.modals.stack[state.modals.stack.length - 1]\n      : void 0\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onCloseModal: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modals);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/App/Messages\";\nimport { Message } from \"../../utils/messages\";\nimport \"./Messages.scss\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\n\n// ------------------------------------------------------------------\n\nclass Messages extends Component<MappedProps & WithTranslation> {\n  public render = () => (\n    <div className=\"Messages\">\n      <TransitionGroup>\n        {this.props.messages.map(this.renderMessage)}\n      </TransitionGroup>\n    </div>\n  );\n\n  private renderMessage = (message: Message) => (\n    <CSSTransition\n      key={message.id}\n      classNames=\"Message\"\n      timeout={{ enter: 200, exit: 200 }}\n    >\n      <div className={classNames(\"Message\", \"Message-\" + message.type)}>\n        {this.props.t(message.text)}\n      </div>\n    </CSSTransition>\n  );\n}\n\nexport default withTranslation()(Messages);\n","import { RootState } from \"../reducers\";\n\n// ------------------------------------------------------------------\n\nexport const extractMessages = (state: RootState) =>\n  state.messages.sort((m1, m2) => m1.stamp - m2.stamp);\n","import { connect } from \"react-redux\";\n//\nimport { RootState } from \"../../reducers\";\nimport Messages from \"../../components/App/Messages\";\nimport { extractMessages } from \"../../selectors/messages\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  messages: extractMessages(state),\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages);\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/App\";\nimport Room from \"../../containers/Room\";\nimport Splash from \"../../containers/Splash\";\nimport Modals from \"../../containers/Modals\";\nimport Messages from \"../../containers/App/Messages\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass App extends Component<MappedProps> {\n  public componentDidMount = async () => {\n    this.props.onReconnect();\n  };\n\n  public render = () => {\n    return (\n      <div className=\"App\">\n        <Modals />\n        <Switch>\n          <Route exact={true} path=\"/room/:room_id\" component={Room} />\n          <Route exact={true} path=\"/\" component={Splash} />\n          <Redirect to=\"/\" />\n        </Switch>\n        <Messages />\n      </div>\n    );\n  };\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport App from \"../../components/App\";\nimport { reconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onReconnect: () => dispatch(reconnectUser())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(App);\n","// ------------------------------------------------------------------\n\nlet AUDIO_CONTEXT: AudioContext | null = null;\n\nconst getContext = () => {\n  if (!AUDIO_CONTEXT) {\n    AUDIO_CONTEXT = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n  }\n  return AUDIO_CONTEXT;\n};\n\nconst decodeAudioData = (encodedBuffer: ArrayBuffer): Promise<AudioBuffer> =>\n  new Promise((resolve, reject) =>\n    getContext().decodeAudioData(encodedBuffer, resolve, reject)\n  );\n\nconst loadAudioBuffer = (url: string): Promise<AudioBuffer> =>\n  new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest();\n    req.open(\"GET\", url, true);\n    req.responseType = \"arraybuffer\";\n    req.addEventListener(\n      \"error\",\n      () => reject(new Error(\"player.errors.cannot_load_audio_buffer\")),\n      false\n    );\n    req.addEventListener(\n      \"load\",\n      async () => {\n        try {\n          resolve(await decodeAudioData(req.response as ArrayBuffer));\n        } catch (error) {\n          console.debug(\"An error occurred while decoding audio data\");\n          reject(error);\n        }\n      },\n      false\n    );\n    req.send();\n  });\n\n// ------------------------------------------------------------------\n\n// Fix Safari and iOS Audio Context\n(() => {\n  const fixAudioContext = () => {\n    document.removeEventListener(\"click\", fixAudioContext);\n    document.removeEventListener(\"touchstart\", fixAudioContext);\n    console.debug(\"Fixing audio context...\");\n    const context = getContext();\n    // Create empty buffer, connect to output, play sound\n    var buffer = context.createBuffer(1, 1, 22050);\n    var source = context.createBufferSource();\n    source.buffer = buffer;\n    source.connect(context.destination);\n    source.start(0);\n  };\n  document.addEventListener(\"click\", fixAudioContext);\n  document.addEventListener(\"touchstart\", fixAudioContext);\n})();\n\n// ------------------------------------------------------------------\n\nexport type PlayerCallbacks = {\n  onStart: () => void;\n  onStop: () => void;\n};\n\nexport const Player = (chainPlay: boolean) => {\n  let analyserNode: AnalyserNode | null = null;\n  let gainNode: GainNode | null = null;\n  let _node: AudioNode | null = null;\n  let _buffer: AudioBuffer | null = null;\n  let _bufferUrl: string = \"\";\n  let _sourceNode: AudioBufferSourceNode | null = null;\n  let _sourceNodeStartTime = 0;\n  let _trackId = \"\";\n  let _trackPosition = -1;\n\n  const getOrCreateNode = () => {\n    if (!_node) {\n      const context = getContext();\n      _node = context.destination;\n\n      gainNode = context.createGain();\n      gainNode.gain.value = 1.0;\n      gainNode.connect(_node);\n      _node = gainNode;\n\n      analyserNode = context.createAnalyser();\n      analyserNode.fftSize = 128;\n      // analyserNode.minDecibels = -90;\n      // analyserNode.maxDecibels = -10;\n      analyserNode.connect(_node);\n      _node = analyserNode;\n    }\n    return _node;\n  };\n\n  const isPlaying = () => !!_sourceNode;\n\n  const getPlayingTrackID = () => _trackId;\n\n  const getPlayingTrackPosition = () => _trackPosition;\n\n  // Percentage [0, 1]\n  const getPlayingTrackPercent = () => {\n    if (_buffer && _sourceNode) {\n      return (\n        (getContext().currentTime - _sourceNodeStartTime) / _buffer.duration\n      );\n    }\n    return 0;\n  };\n\n  const _loadBuffer = async (url: string) => {\n    // TODO: cache N last audio buffers\n    if (_bufferUrl !== url) {\n      console.debug(\"Loading audio...\", { url });\n      _buffer = await loadAudioBuffer(url);\n      _bufferUrl = url;\n    }\n  };\n\n  const play = async (\n    trackPosition: number,\n    trackId: string,\n    trackUrl: string,\n    offset: number\n  ) => {\n    await stop();\n    await _loadBuffer(trackUrl); // TODO: warning if loadBuffer takes long for some reason and user clicks stop before end, next part of this function will continue after stop have been requested\n    console.debug(\"Starting audio...\", { trackPosition, trackId, trackUrl });\n    _trackId = trackId;\n    _trackPosition = trackPosition;\n    _sourceNode = getContext().createBufferSource();\n    _sourceNode.buffer = _buffer;\n    _sourceNode.loop = false;\n    _sourceNode.loopStart = 0;\n    _sourceNode.loopEnd = 0;\n    _sourceNode.onended = () => {\n      console.debug(\"Audio terminated...\");\n      _sourceNode = null;\n      if (chainPlay) {\n        _trackPosition++;\n      }\n    };\n    _sourceNode.playbackRate.value = 1.0;\n    _sourceNode.connect(getOrCreateNode());\n    _sourceNode.start(0, offset); // A new BufferSource must be created for each start\n    _sourceNodeStartTime = getContext().currentTime;\n  };\n\n  const stop = async (): Promise<void> =>\n    new Promise((resolve) => {\n      if (null !== _sourceNode) {\n        console.debug(\"Stopping audio...\");\n        _sourceNode.onended = () => {\n          console.debug(\"Forced audio termination...\");\n          resolve();\n        };\n        _sourceNode.stop();\n        _sourceNode = null;\n        _sourceNodeStartTime = 0;\n        _trackPosition = -1;\n      } else {\n        resolve();\n      }\n    });\n\n  return {\n    analyserNode,\n    gainNode,\n    getPlayingTrackID,\n    getPlayingTrackPercent,\n    getPlayingTrackPosition,\n    isPlaying,\n    play,\n    stop,\n  };\n};\n","export default {\n  splash: {\n    CGU: \"CGU\",\n    powered_with: \"Powered with\",\n  },\n  users: {\n    errors: {\n      invalid: \"User is invalid\",\n    },\n    user: \"User\",\n    confirm_disconnect: \"Are you sure you want to disconnect?\",\n    connect: \"Connect\",\n    connection: \"Connection\",\n    create: \"Create a user\",\n    disconnect: \"Disconnect\",\n    user_creation: \"User Registration\",\n    id_is_invalid: \"ID is invalid\",\n    id_placeholder: \"User ID...\",\n    user_id: \"User ID\",\n    name_is_invalid: \"Name is invalid\",\n    name_placeholder: \"User Name...\",\n    name: \"User Name\",\n    secret_is_invalid: \"Secret is invalid\",\n    secret_placeholder: \"User Secret...\",\n    secret: \"User Secret\",\n  },\n  rooms: {\n    errors: {\n      invalid: \"Room is invalid\",\n      locked: \"Room is locked\",\n    },\n    clear: \"Clear all tracks\",\n    confirm_clear: \"Are you sure you want to remove all tracks?\",\n    confirm_exit: \"Are you sure you want to leave the room?\",\n    confirm_lock: \"Are you sure you want to lock the room?\",\n    copy_link: \"Copy Room Link to Clipboard\",\n    create: \"Create a room\",\n    empty: \"It's empty here, you should add some tracks...\",\n    exit: \"Exit Room\",\n    key_placeholder: \"Room Key...\",\n    key: \"Room Key\",\n    link_copied_to_clipboard: \"Room link has been copied to clipboard\",\n    loading: \"Loading...\",\n    locked: \"Locked (click to unlock)\",\n    name_is_invalid: \"Name is invalid\",\n    name_placeholderl: \"Room Name...\",\n    name: \"Room Name\",\n    room_creation: \"Room Creation\",\n    room_unlocking: \"Room Unlocking\",\n    room: \"Room\",\n    secret_is_invalid: \"Secret is invalid\",\n    unlock: \"Unlock\",\n    unlocked: \"Unlocked (click to lock)\",\n  },\n  medias: {\n    by: \"by {{artist}}\",\n    add: \"Add\",\n    remove: \"Remove\",\n    search: \"Search Media\",\n    search_placeholder: \"Search...\",\n    medias_search: \"Media Search\",\n    albums: \"Albums\",\n    playlists: \"Playlists\",\n    tracks: \"Tracks\",\n  },\n  player: {\n    errors: {\n      cannot_load_audio_buffer: \"Audio buffer loading failed\",\n    },\n    backward: \"Backward\",\n    forward: \"Forward\",\n    play: \"Play\",\n    playing: \"Playing\",\n    stop: \"Stop\",\n  },\n  cancel: \"Cancel\",\n  secret_copied_to_clipboard: \"Secret has been copied to clipboard\",\n};\n","export default {\n  splash: {\n    CGU: \"CGU\",\n    powered_with: \"boosté avec\",\n  },\n  users: {\n    errors: {\n      invalid: \"L'utilisateur est invalide\",\n    },\n    user: \"Utilisateur\",\n    confirm_disconnect: \"Êtes-vous sûr(e) de vouloir vous déconnecter ?\",\n    connect: \"Se connecter\",\n    connection: \"Connexion\",\n    create: \"Créer un utilisateur\",\n    disconnect: \"Se déconnecter\",\n    user_creation: \"Création d'un utilisateur\",\n    id_is_invalid: \"L'identifiant est invalide\",\n    id_placeholder: \"Identifiant...\",\n    user_id: \"Identifiant\",\n    name_is_invalid: \"Le nom est invalide\",\n    name_placeholder: \"Nom...\",\n    name: \"Nom\",\n    secret_is_invalid: \"Le secret est invalide\",\n    secret_placeholder: \"Secret...\",\n    secret: \"Secret\",\n  },\n  rooms: {\n    errors: {\n      invalid: \"La salle est invalide\",\n      locked: \"La salle est verrouillée\",\n    },\n    clear: \"Supprimer toutes les pistes\",\n    confirm_clear: \"Êtes-vous sûr(e) de vouloir supprimer toutes les pistes ?\",\n    confirm_exit: \"Êtes-vous sûr(e) de vouloir quitter la salle ?\",\n    confirm_lock: \"Êtes-vous sûr(e) de vouloir verrouiller la salle ?\",\n    copy_link: \"Copier le lien de la salle dans le presse-papier\",\n    create: \"Créer une salle\",\n    empty: \"Cette salle est vide, vous devriez ajouter quelques pistes...\",\n    exit: \"Quitter la salle\",\n    key_placeholder: \"Clef...\",\n    key: \"Clef\",\n    loading: \"Chargement...\",\n    link_copied_to_clipboard:\n      \"Le lien de la salle a été copié dans le presse-papier\",\n    locked: \"Verrouillée (cliquer pour déverrouiller)\",\n    name_is_invalid: \"Le nom est invalide\",\n    name_placeholderl: \"Nom...\",\n    name: \"Nom\",\n    room_creation: \"Création d'une salle\",\n    room_unlocking: \"Déverrouillage de la salle\",\n    room: \"Salle\",\n    secret_is_invalid: \"Le secret is invalide\",\n    unlock: \"Déverrouiller\",\n    unlocked: \"Déverrouillée (cliquer pour verrouiller)\",\n  },\n  medias: {\n    by: \"par {{artist}}\",\n    add: \"Ajouter\",\n    remove: \"Supprimer\",\n    search: \"Chercher des médias\",\n    search_placeholder: \"Recherche...\",\n    medias_search: \"Recherche de médias\",\n    albums: \"Albums\",\n    playlists: \"Playlists\",\n    tracks: \"Pistes\",\n  },\n  player: {\n    errors: {\n      cannot_load_audio_buffer: \"Le buffer Audio ne peut pas être chargé\",\n    },\n    backward: \"Piste précédente\",\n    forward: \"Piste suivante\",\n    play: \"Lire\",\n    playing: \"En cours de lecture\",\n    stop: \"Arrêter\",\n  },\n  cancel: \"Annuler\",\n  secret_copied_to_clipboard: \"Le secret a été copié dans le presse-papier\",\n};\n","import i18next from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n//\nimport en from \"../locales/en\";\nimport fr from \"../locales/fr\";\n\n// --------------------------------------------------------------\n\nexport const changeLanguage = (language: string) =>\n  i18next.changeLanguage(language);\n\n// --------------------------------------------------------------\n\nexport const initLocales = async (): Promise<void> =>\n  new Promise((resolve, reject) => {\n    console.log(\"Initializing language...\");\n    i18next.use(initReactI18next).init(\n      {\n        fallbackLng: \"en\",\n        lng: navigator.language || (navigator as any).userLanguage,\n        resources: {\n          \"en-US\": { translation: en },\n          \"fr-FR\": { translation: fr },\n        },\n        interpolation: {\n          escapeValue: false, // react is already safe from xss\n          format: (value, format, lng) => {\n            // if (format === \"uppercase\") return value.toUpperCase();\n            // if (value instanceof Date) return moment(value).format(format);\n            return value;\n          },\n        },\n      },\n      (error) => {\n        if (error) reject(error);\n        resolve();\n      }\n    );\n  });\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n//\nimport { rootReducer } from \"./reducers\";\nimport App from \"./containers/App\";\nimport { DEFAULT_API } from \"./utils/deezer\";\nimport { Player } from \"./utils/player\";\nimport { initLocales } from \"./utils/i18n\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst init = async () => {\n  const composeEnhancers =\n    process.env.NODE_ENV === \"development\" ? composeWithDevTools({}) : compose;\n\n  const deezer = DEFAULT_API;\n  const queuePlayer = Player(true);\n  const previewPlayer = Player(false);\n  initLocales();\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(\n        thunk.withExtraArgument({ deezer, queuePlayer, previewPlayer })\n      )\n    )\n  );\n\n  // const dispatch: Dispatch = store.dispatch.bind(store);\n\n  return store;\n};\n\n// ------------------------------------------------------------------\n\ninit().then((store) => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <Route path=\"/\" component={App} />\n      </HashRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n"],"sourceRoot":""}