{"version":3,"sources":["reducers/containers.ts","reducers/messages.ts","reducers/modals.ts","reducers/player.ts","reducers/queue.ts","reducers/rooms.ts","reducers/tracks.ts","reducers/users.ts","utils/users.ts","reducers/index.ts","components/Common/Icon.tsx","components/Common/IconButton.tsx","utils/clipboard.ts","components/Room/Head.tsx","selectors/rooms.ts","actions/index.ts","actions/modals.ts","actions/messages.ts","utils/messages.ts","config/firebase.ts","utils/index.ts","utils/firebase.ts","actions/queue.ts","actions/tracks.ts","actions/containers.ts","utils/history.ts","actions/rooms.ts","containers/Room/Head.ts","components/Room/Cover.tsx","components/Room/Medias.tsx","components/Room/Queue.tsx","selectors/tracks.ts","utils/colorpicker.ts","actions/player.ts","containers/Room/Queue.ts","components/Room/Progress.tsx","containers/Room/Progress.ts","components/Room/Controls.tsx","containers/Room/Controls.ts","components/Room/index.tsx","containers/Room/index.ts","components/Splash/Menu.tsx","actions/users.ts","containers/Splash/Menu.ts","components/Splash/index.tsx","containers/Splash/index.ts","components/Modals/Modal.tsx","containers/Modals/Modal.ts","components/Modals/FormModal.tsx","components/Users/ConnectUserModal.tsx","containers/Users/ConnectUserModal.ts","components/Modals/SecretField.tsx","containers/Modals/SecretField.ts","components/Room/CreateRoomModal.tsx","containers/Room/CreateRoomModal.ts","components/Users/CreateUserModal.tsx","containers/Users/CreateUserModal.ts","utils/api.ts","components/Room/SearchResultCategory.tsx","components/Room/SearchModal.tsx","containers/Room/SearchModal.ts","components/Room/UnlockRoomModal.tsx","containers/Room/UnlockRoomModal.ts","components/Modals/index.tsx","containers/Modals/index.ts","components/App/Messages.tsx","containers/App/Messages.ts","components/App/index.tsx","containers/App/index.ts","utils/player.ts","index.tsx"],"names":["INITIAL_STATE","fetching","error","containers","initialState","stack","playing","position","trackIds","room_access","id","secret","room_color","fg","r","g","b","bg","rooms","tracks","user_access","res","s","localStorage","getItem","d","JSON","parse","atob","i","console","log","err","loadUserAccess","users","rootReducer","combineReducers","state","action","type","payload","copy","container","messages","filter","other","modals","pop","player","queue","splice","track","setItem","btoa","stringify","saveUserAccess","Icon","Component","render","this","props","className","color","icon","size","title","classNames","name","style","IconButton","disabled","kind","onClick","aria-label","clickable","CancelButton","copyToClipboard","value","a","Promise","resolve","elem","document","createElement","setAttribute","left","body","appendChild","selection","getSelection","selected","rangeCount","getRangeAt","select","execCommand","removeAllRanges","addRange","removeChild","Head","locked","room","onLock","onUnlock","onCopyLink","location","href","onMessage","extractRoom","isRoomLocked","createAction","openModal","prereq","popModal","MESSAGE_ID_GENERATOR","displayMessage","text","duration","dispatch","stamp","Date","getTime","setTimeout","removeMessage","displayError","response","data","message","config","databaseURL","process","firebaseApp","firebase","firebaseConfig","firebaseDatabase","MEMBERS","ref","ROOMS","USERS","CURRENT_ROOM","getCurrentRoom","setCurrentRoom","Room","_room","child","_info","_members","_secret","_values","queue_position","timestamp","init","values","subscribeInfo","snapshot","newValues","val","update","wait","reject","once","Error","cb","on","set","info","ServerValue","TIMESTAMP","getInfo","isLocked","setSecret","newSecret","subscribeMembers","cbAdded","cbRemoved","unsubscribeInfo","off","unsubscribeMembers","User","_user","_membership","online","room_id","status","installDisconnect","onDisconnect","cancel","enter","remove","exit","_appendInQueue","_removeFromQueue","_setQueuePosition","clearQueue","getState","appendInQueue","forEach","index","removeFromQueue","setQueuePosition","moveBackward","length","moveForward","setTracks","loadTrack","trackId","enqueue","play","api","previewPlayer","preview","loadContainer","containerType","containerId","containerTypeId","loadAlbum","loadPlaylist","map","toString","previewContainer","createHashHistory","setRoomAccess","setRooms","setRoomColor","createRoom","v4","FirebaseRoom","enterRoom","FIREBASE_CB","exitRoom","history","push","lockRoom","unlockRoom","queueTracks","connect","Cover","image","onPlay","onStop","backgroundImage","Album","actions","album","cover_small","link","target","rel","artist","Playlist","playlist","picture_small","Track","Queue","playingPosition","onRemove","key","extractTracks","CACHE","pickColor","url","jimp","resize","getPixelColor","pixel","setPlayerPosition","PLAYER_TIMER","PLAYER_PLAYING_TRACK","PLAYER_PLAYING_TRACK_INDEX","startPlayer","queuePlayer","setInterval","isPlaying","nextPosition","getPosition","stopPlayer","_","clearInterval","stop","startPreview","stopPreview","_1","_2","Progress","max","Controls","onMoveBackward","onMoveForward","onSearch","playable","onClear","onExit","window","confirm","componentDidMount","onEnter","componentWillUnmount","backgroundColor","withRouter","ownProps","qs","search","substr","match","params","Menu","loggedIn","onCreateRoom","onConnectUser","onDisconnectUser","setUserAccess","setUsers","createUser","FirebaseUser","connectUser","FIREBASE_USER","disconnectUser","user","reconnectUser","Splash","to","Modal","children","renderFoot","onClose","onPop","has_prev_modal","onSubmit","hidden","event","preventDefault","FormModal","renderButtons","ConnectUserModal","idRef","createRef","onConnect","htmlFor","placeholder","maxLength","minLength","required","onChange","e","setState","onToggle","onError","trim","current","focus","SecretField","label","display","flexDirection","justifyContent","flexGrow","marginRight","readOnly","onCopyToClipboard","CreateRoomModal","nameRef","onCreate","CreateUserModal","DEFAULT_API","asyncJsonp","jsonp","call","path","fullpath","query","encodeURIComponent","load","searchAlbums","searchPlaylists","searchTracks","searchAll","all","albums","playlists","Api","SearchResultCategory","items","slice","item","SearchModal","queryRef","mediaId","mediaType","results","total","renderInputs","renderResults","onSelect","onStartPreview","onStopPreview","UnlockRoomModal","secretRef","Modals","curr_prereq","prev_prereq","addEventListener","onKeyDown","removeEventListener","componentDidUpdate","prevProps","oldPrereq","newPrereq","modal","getModal","in","timeout","unmountOnExit","onClickOverlay","role","onClickWrapper","stopPropagation","onCloseModal","keyCode","Messages","React","renderMessage","sort","m1","m2","App","onReconnect","exact","component","AUDIO_CONTEXT","getContext","AudioContext","webkitAudioContext","decodeAudioData","encodedBuffer","fixAudioContext","context","buffer","createBuffer","source","createBufferSource","destination","start","Player","analyserNode","gainNode","node","getNode","createGain","gain","createAnalyser","fftSize","bufferUrl","sourceNode","sourceNodeStartTime","playCount","loadAudioBuffer","req","XMLHttpRequest","open","responseType","send","offset","loop","loopStart","loopEnd","onended","playbackRate","currentTime","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","withExtraArgument","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5d1b119d.chunk.js","sourcesContent":["import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { ContainersAction } from \"../actions/containers\";\nimport { Containers } from \"../utils/containers\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  containers: Containers;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  containers: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const containersReducer: Reducer<State, ContainersAction> = (\n  state = INITIAL_STATE,\n  action: ContainersAction\n): State => {\n  switch (action.type) {\n    case \"containers/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"containers/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"containers/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"containers/SET_CONTAINERS\": {\n      const copy = { ...state, containers: { ...state.containers } };\n      for (const container of action.payload) {\n        copy.containers[`${container.type}|${container.id}`] = container;\n      }\n      return copy;\n    }\n    case \"containers/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { MessagesAction } from \"../actions/messages\";\nimport { Message } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type State = Message[];\n\nexport const INITIAL_STATE: State = [];\n\n// ------------------------------------------------------------------\n\nexport const messagesReducer: Reducer<State, MessagesAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"message/ADD\":\n      return [action.payload, ...state];\n    case \"message/REMOVE\":\n      return state.filter(other => other.id !== action.payload);\n    case \"message/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { ModalsAction, ModalPrereq } from \"../actions/modals\";\n\n// ------------------------------------------------------------------\n\nexport type ModalsState = {\n  stack: ModalPrereq[];\n};\n\n// ------------------------------------------------------------------\n\nexport const initialState: ModalsState = {\n  stack: []\n};\n\n// ------------------------------------------------------------------\n\nexport const modalsReducer: Reducer<ModalsState, ModalsAction> = (\n  state = initialState,\n  action\n): ModalsState => {\n  switch (action.type) {\n    case \"modals/OPEN\":\n      return {\n        ...state,\n        stack: [action.payload]\n      };\n    case \"modals/CLOSE\":\n      return {\n        ...state,\n        stack: []\n      };\n    case \"modals/PUSH\":\n      return {\n        ...state,\n        stack: [...state.stack, action.payload]\n      };\n    case \"modals/POP\":\n      const copy = [...state.stack];\n      copy.pop();\n      return {\n        ...state,\n        stack: copy\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { PlayerAction } from \"../actions/player\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  playing: boolean;\n  position: number;\n};\n\nexport const INITIAL_STATE: State = {\n  playing: false,\n  position: 0\n};\n\n// ------------------------------------------------------------------\n\nexport const playerReducer: Reducer<State, PlayerAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"player/START\":\n      return { ...state, playing: true };\n    case \"player/STOP\":\n      return { ...state, playing: false };\n    case \"player/SET_POSITION\":\n      return { ...state, position: action.payload };\n    case \"player/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { QueueAction } from \"../actions/queue\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  position: number;\n  trackIds: string[];\n};\n\nexport const INITIAL_STATE: State = {\n  position: -1,\n  trackIds: []\n};\n\n// ------------------------------------------------------------------\n\nexport const queueReducer: Reducer<State, QueueAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"queue/PUSH\":\n      return { ...state, trackIds: [...state.trackIds, ...action.payload] };\n    case \"queue/REMOVE\":\n      const copy = [...state.trackIds];\n      copy.splice(action.payload, 1);\n      return {\n        ...state,\n        position:\n          action.payload < state.position ? state.position - 1 : state.position,\n        trackIds: copy\n      };\n    case \"queue/SET_POSITION\":\n      return {\n        ...state,\n        position: action.payload\n      };\n    case \"queue/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { RoomsAction } from \"../actions/rooms\";\nimport { Rooms, RoomAccess } from \"../utils/rooms\";\nimport { CombinedColor } from \"../utils/colorpicker\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  room_access: RoomAccess;\n  room_color: CombinedColor;\n  rooms: Rooms;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  room_access: { id: \"\", secret: \"\" },\n  room_color: { fg: { r: 0, g: 0, b: 0 }, bg: { r: 255, g: 255, b: 255 } },\n  rooms: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const roomsReducer: Reducer<State, RoomsAction> = (\n  state = INITIAL_STATE,\n  action: RoomsAction\n): State => {\n  switch (action.type) {\n    case \"rooms/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"rooms/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"rooms/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"rooms/SET_ROOM_ACCESS\": {\n      return {\n        ...state,\n        room_access: action.payload\n      };\n    }\n    case \"rooms/SET_ROOMS\": {\n      return {\n        ...state,\n        rooms: { ...state.rooms, ...action.payload }\n      };\n    }\n    case \"rooms/SET_ROOM_COLOR\": {\n      return {\n        ...state,\n        room_color: action.payload\n      };\n    }\n    case \"rooms/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { TracksAction } from \"../actions/tracks\";\nimport { Tracks } from \"../utils/tracks\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  tracks: Tracks;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  tracks: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const tracksReducer: Reducer<State, TracksAction> = (\n  state = INITIAL_STATE,\n  action: TracksAction\n): State => {\n  switch (action.type) {\n    case \"tracks/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"tracks/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"tracks/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"tracks/SET_TRACKS\": {\n      const copy = { ...state, tracks: { ...state.tracks } };\n      for (const track of action.payload) {\n        copy.tracks[track.id] = track;\n      }\n      return copy;\n    }\n    case \"tracks/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { UsersAction } from \"../actions/users\";\nimport {\n  Users,\n  saveUserAccess,\n  loadUserAccess,\n  UserAccess\n} from \"../utils/users\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  user_access: UserAccess;\n  users: Users;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  user_access: loadUserAccess(),\n  users: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const usersReducer: Reducer<State, UsersAction> = (\n  state = INITIAL_STATE,\n  action: UsersAction\n): State => {\n  switch (action.type) {\n    case \"users/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"users/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"users/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"users/SET_USER_ACCESS\": {\n      saveUserAccess(action.payload);\n      return {\n        ...state,\n        user_access: { ...action.payload }\n      };\n    }\n    case \"users/SET_USERS\": {\n      return {\n        ...state,\n        users: { ...state.users, ...action.payload }\n      };\n    }\n    case \"users/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","export type User = {\n  name: string;\n  online: boolean;\n  room_id: string;\n  status: string;\n  timestamp: number;\n};\n\nexport type Users = { [id: string]: User };\n\nexport type UserAccess = {\n  id: string;\n  secret: string;\n};\n\n// ------------------------------------------------------------------\n\nexport const loadUserAccess = (): UserAccess => {\n  const res: UserAccess = {\n    id: \"\",\n    secret: \"\"\n  };\n  const s = localStorage.getItem(\"U\");\n  if (s) {\n    try {\n      const d = JSON.parse(atob(s));\n      if (typeof d.i === \"string\" && typeof d.s === \"string\") {\n        res.id = d.i;\n        res.secret = d.s;\n        console.log(\"Loaded user access: \", res);\n      }\n    } catch (err) {}\n  }\n  return res;\n};\n\nexport const saveUserAccess = ({ id, secret }: UserAccess) => {\n  localStorage.setItem(\n    \"U\",\n    btoa(\n      JSON.stringify({\n        i: id,\n        s: secret\n      })\n    )\n  );\n};\n","import { combineReducers } from \"redux\";\nimport { containersReducer as containers } from \"./containers\";\nimport { messagesReducer as messages } from \"./messages\";\nimport { modalsReducer as modals } from \"./modals\";\nimport { playerReducer as player } from \"./player\";\nimport { queueReducer as queue } from \"./queue\";\nimport { roomsReducer as rooms } from \"./rooms\";\nimport { tracksReducer as tracks } from \"./tracks\";\nimport { usersReducer as users } from \"./users\";\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const rootReducer = combineReducers({\n  containers,\n  messages,\n  modals,\n  player,\n  queue,\n  rooms,\n  tracks,\n  users\n});\n","import React, { Component } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport classNames from \"classnames\";\n//\nimport \"./Icon.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  icon: string;\n  size?: \"S\" | \"M\" | \"L\";\n  title?: string;\n};\n\nclass Icon extends Component<Props> {\n  public render = () => {\n    const { className, color, icon, size = \"M\", title } = this.props;\n    return (\n      <FontAwesome\n        className={classNames(\"Icon\", className, size)}\n        name={icon}\n        style={{ color }}\n        title={title}\n      />\n    );\n  };\n}\n\nexport default Icon;\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"./Icon\";\nimport \"./IconButton.scss\";\n\n// ------------------------------------------------------------------\n\ntype ButtonType = \"button\" | \"submit\";\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  disabled?: boolean;\n  icon: string;\n  kind?: \"default\" | \"primary\" | \"danger\" | \"special\";\n  onClick?: () => void;\n  size?: \"S\" | \"M\" | \"L\";\n  title: string;\n  type?: ButtonType;\n};\n\nclass IconButton extends Component<Props> {\n  public render = () => {\n    const {\n      className,\n      color,\n      disabled = false,\n      icon,\n      kind = \"default\",\n      onClick,\n      size,\n      title,\n      type = \"button\"\n    } = this.props;\n    return (\n      <button\n        type={type}\n        aria-label={title}\n        className={classNames(\"IconButton\", className, kind, size, {\n          clickable: !disabled && (!!onClick || type === \"submit\")\n        })}\n        onClick={disabled ? void 0 : onClick}\n        title={title}\n      >\n        <Icon color={color} icon={icon} size={size} />\n      </button>\n    );\n  };\n}\n\nexport const CancelButton = ({ onClick }: { onClick: () => void }) => (\n  <IconButton onClick={onClick} title=\"Cancel\" kind=\"default\" icon=\"ban\" />\n);\n\nexport default IconButton;\n","// https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\nexport const copyToClipboard = async (value: string): Promise<void> =>\n  await new Promise(resolve => {\n    const elem = document.createElement(\"textarea\");\n    elem.value = value;\n    elem.setAttribute(\"readonly\", \"\");\n    elem.style.position = \"absolute\";\n    elem.style.left = \"-9999px\";\n\n    document.body.appendChild(elem);\n    const selection = document.getSelection();\n    if (selection !== null) {\n      const selected =\n        selection.rangeCount > 0 ? selection.getRangeAt(0) : false;\n      elem.select();\n      document.execCommand(\"copy\");\n      if (selected !== false) {\n        selection.removeAllRanges();\n        selection.addRange(selected);\n      }\n    }\n    document.body.removeChild(elem);\n    resolve();\n  });\n","import React, { Component } from \"react\";\n//\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Room/Head\";\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport \"./Head.scss\";\n\n// ------------------------------------------------------------------\n\nclass Head extends Component<MappedProps> {\n  public render = () => {\n    const { locked, room, onLock, onUnlock } = this.props;\n    return (\n      <div className=\"Head\">\n        <div className=\"RoomStatus\">\n          {locked ? (\n            <IconButton\n              icon=\"lock\"\n              onClick={onUnlock}\n              size=\"M\"\n              title=\"Locked (click to unlock)\"\n            />\n          ) : (\n            <IconButton\n              icon=\"unlock\"\n              onClick={onLock}\n              size=\"M\"\n              title=\"Unlocked (click to lock)\"\n            />\n          )}\n        </div>\n        <div className=\"RoomName\">{room ? room.name : \"?\"}</div>\n        <div className=\"RoomLink\">\n          <IconButton\n            icon=\"link\"\n            onClick={this.onCopyLink}\n            size=\"M\"\n            title=\"Copy Room Link to Clipboard\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyLink = async () => {\n    await copyToClipboard(document.location.href);\n    this.props.onMessage(\"Room link has been copied to clipboard\");\n  };\n}\n\nexport default Head;\n","import { RootState } from \"../reducers\";\nimport { Room } from \"../utils/rooms\";\n\nexport const extractRoom = (state: RootState, id: string): Room | null => {\n  const room = state.rooms.rooms[id];\n  if (!room) {\n    return null;\n  }\n  return room;\n};\n\nexport const isRoomLocked = (state: RootState) =>\n  !state.rooms.room_access.secret;\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"../reducers\";\nimport { Player } from \"../utils/player\";\nimport { Api } from \"../utils/api\";\n\n// ------------------------------------------------------------------\n\nexport type Action<T extends string> = {\n  type: T;\n};\n\nexport type ActionWithPayload<T extends string, P> = {\n  type: T;\n  payload: P;\n};\n\nexport type AsyncAction = ThunkAction<\n  void,\n  RootState,\n  {\n    api: ReturnType<typeof Api>;\n    previewPlayer: ReturnType<typeof Player>;\n    queuePlayer: ReturnType<typeof Player>;\n  },\n  AnyAction\n>;\n\nexport function createAction<T extends string>(type: T): Action<T>;\n\nexport function createAction<T extends string, P>(\n  type: T,\n  payload: P\n): ActionWithPayload<T, P>;\n\nexport function createAction<T extends string, P>(type: T, payload?: P) {\n  return payload === void 0 ? { type } : { type, payload };\n}\n","import { createAction } from \".\";\n\n// ------------------------------------------------------------------\n\nexport type ModalPrereqT<T extends string, P> = {\n  type: T;\n  props: P;\n};\n\nexport type ModalPrereq =\n  | ModalPrereqT<\"ConnectUser\", null>\n  | ModalPrereqT<\"CreateRoom\", null>\n  | ModalPrereqT<\"CreateUser\", null>\n  | ModalPrereqT<\"Search\", null>\n  | ModalPrereqT<\"UnlockRoom\", null>;\n\n// ------------------------------------------------------------------\n\nexport type ModalsAction =\n  | ReturnType<typeof closeModal>\n  | ReturnType<typeof openModal>\n  | ReturnType<typeof popModal>\n  | ReturnType<typeof pushModal>;\n\n// ------------------------------------------------------------------\n\nexport const openModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/OPEN\", prereq);\n\nexport const closeModal = () => createAction(\"modals/CLOSE\");\n\n// ------------------------------------------------------------------\n\nexport const pushModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/PUSH\", prereq);\n\nexport const popModal = () => createAction(\"modals/POP\");\n","import { createAction, AsyncAction } from \".\";\nimport { Message, MessageType, extractErrorMessage } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type MessagesAction =\n  | ReturnType<typeof addMessage>\n  | ReturnType<typeof clearMessages>\n  | ReturnType<typeof removeMessage>;\n\nconst addMessage = (message: Message) => createAction(\"message/ADD\", message);\n\nconst removeMessage = (id: number) => createAction(\"message/REMOVE\", id);\n\nconst clearMessages = () => createAction(\"message/RESET\");\n\n// ------------------------------------------------------------------\n\nlet MESSAGE_ID_GENERATOR: number = 0;\n\nexport const displayMessage = (\n  type: MessageType,\n  text: string,\n  duration: number = 5000\n): AsyncAction => (dispatch): any => {\n  const id = MESSAGE_ID_GENERATOR++;\n  dispatch(addMessage({ id, stamp: new Date().getTime(), text, type }));\n  setTimeout(() => dispatch(removeMessage(id)), duration);\n};\n\nexport const displayError = (text: string, error?: any): AsyncAction => (\n  dispatch\n): any => {\n  dispatch(\n    displayMessage(\n      \"error\",\n      error ? `${text}: ${extractErrorMessage(error)}` : text,\n      3000\n    )\n  );\n};\n\nexport const displayInfo = (text: string) => displayMessage(\"info\", text, 3000);\n","export type MessageType = \"error\" | \"info\";\n\nexport type Message = {\n  id: number;\n  stamp: number;\n  text: string;\n  type: MessageType;\n};\n\nexport const extractErrorMessage = (err: any) =>\n  err.response && err.response.data && err.response.data.message\n    ? err.response.data.message\n    : err.message;\n","const config = {\n  databaseURL: process.env.REACT_APP_FIREBASE_URL\n};\n\nconsole.log(config);\n\nexport default config;\n","export const sleep = (delay: number) =>\n  new Promise(resolve => setTimeout(resolve, delay));\n","import * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n//\nimport firebaseConfig from \"../config/firebase\";\nimport { Room as RoomInfo } from \"./rooms\";\nimport { User as UserInfo } from \"./users\";\nimport { sleep } from \".\";\n\n// ------------------------------------------------------------------\n\ntype FirebaseCB = (eventType: firebase.database.DataSnapshot) => void;\n\n// ------------------------------------------------------------------\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseDatabase = firebase.database(firebaseApp);\n\n// ------------------------------------------------------------------\n\nconst MEMBERS = firebaseDatabase.ref(\"members\");\nconst ROOMS = firebaseDatabase.ref(\"rooms\");\nconst USERS = firebaseDatabase.ref(\"users\");\n\n// ------------------------------------------------------------------\n\nlet CURRENT_ROOM: ReturnType<typeof Room> | null = null;\nexport const getCurrentRoom = () => CURRENT_ROOM;\nexport const setCurrentRoom = (room: ReturnType<typeof Room> | null) => {\n  CURRENT_ROOM = room;\n};\n\nexport const Room = (id: string, secret?: string) => {\n  const _room = ROOMS.child(id);\n  const _info = _room.child(\"info\");\n  const _members = MEMBERS.child(id);\n  let _secret = secret || \"\";\n  console.log(\"INIT SECRET\", _secret);\n  let _values: RoomInfo = {\n    name: \"dummy\",\n    queue: {},\n    queue_position: -1,\n    timestamp: 0\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    console.log(\"SETTING SECRET\", newSecret);\n    _secret = newSecret;\n  };\n\n  const init = async (values: Pick<RoomInfo, \"name\">) => {\n    subscribeInfo((snapshot: firebase.database.DataSnapshot) => {\n      const newValues = snapshot.val();\n      if (newValues) {\n        _values = newValues;\n      }\n    });\n    await update(values);\n  };\n\n  const wait = async (): Promise<RoomInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", snapshot => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"Room is invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const subscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.on(\"child_added\", cbAdded);\n    _members.on(\"child_removed\", cbRemoved);\n  };\n\n  const unsubscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.off(\"child_added\", cbAdded);\n    _members.off(\"child_removed\", cbRemoved);\n  };\n\n  const update = async ({\n    name,\n    queue,\n    queue_position\n  }: Partial<Pick<RoomInfo, \"name\" | \"queue\" | \"queue_position\">>) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (queue !== void 0) {\n      _values.queue = queue;\n    }\n    if (queue_position !== void 0) {\n      _values.queue_position = queue_position;\n    }\n    await _room.set({\n      info: {\n        ..._values,\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      },\n      secret: _secret\n    });\n  };\n\n  return {\n    getInfo,\n    id,\n    init,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    subscribeMembers,\n    unsubscribeInfo,\n    unsubscribeMembers,\n    update\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const User = (id: string, secret?: string) => {\n  const _user = USERS.child(id);\n  const _info = _user.child(\"info\");\n  let _membership: firebase.database.Reference | null = null;\n  let _secret = secret || \"\";\n  let _values = {\n    name: \"dummy\",\n    online: false,\n    room_id: \"\",\n    status: \"\",\n    timestamp: 0\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    _secret = newSecret;\n  };\n\n  const init = async (values: Pick<UserInfo, \"name\">) => {\n    subscribeInfo((snapshot: firebase.database.DataSnapshot) => {\n      const newValues = snapshot.val();\n      if (newValues) {\n        _values = newValues;\n      }\n    });\n    await update(values);\n  };\n\n  const wait = async (): Promise<UserInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", snapshot => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"User is invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const update = async ({\n    name,\n    room_id\n  }: Partial<Pick<UserInfo, \"name\" | \"room_id\">>) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (room_id !== void 0) {\n      _values.room_id = room_id;\n    }\n    await _user.set({\n      info: {\n        ..._values,\n        online: true,\n        status: \"online\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      },\n      secret: _secret\n    });\n    installDisconnect();\n  };\n\n  const installDisconnect = () => {\n    _user.onDisconnect().cancel();\n    _user.onDisconnect().set({\n      info: {\n        ..._values,\n        online: false,\n        room_id: \"\",\n        status: \"disconnected\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      },\n      secret: _secret\n    });\n  };\n\n  const enter = async (room: ReturnType<typeof Room>) => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: room.id\n    });\n    _membership = MEMBERS.child(room.id).child(id);\n    _membership.onDisconnect().remove();\n    await _membership.set({\n      timestamp: firebase.database.ServerValue.TIMESTAMP\n    });\n  };\n\n  const exit = async () => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: \"\"\n    });\n  };\n\n  return {\n    id,\n    enter,\n    exit,\n    init,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    unsubscribeInfo,\n    update,\n    getInfo\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const Party = (id: string, room: ReturnType<typeof Room>) => {\n  const _members: string[] = [];\n  const _users: { [id: string]: ReturnType<typeof User> } = {};\n  let _info = {\n    name: \"\",\n    queue: {},\n    queue_position: -1,\n    timestamp: 0\n  };\n\n  const _onAdded = (added: firebase.database.DataSnapshot) => {\n    const userId = added.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index === -1) {\n        _members.push(userId);\n        _users[userId] = User(userId);\n        _log();\n      }\n    }\n  };\n\n  const _onRemoved = (removed: firebase.database.DataSnapshot) => {\n    const userId = removed.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index !== -1) {\n        _members.splice(index, 1);\n        delete _users[userId];\n        _log();\n      }\n    }\n  };\n\n  const _onRoomInfo = (snapshot: firebase.database.DataSnapshot) => {\n    const newValues = snapshot.val() as RoomInfo | null;\n    if (newValues) {\n      _info = newValues;\n      _log();\n    }\n  };\n\n  const _log = () => {\n    console.log(\"PARTY\", {\n      _info,\n      _members\n    });\n  };\n\n  const init = () => {\n    room.subscribeInfo(_onRoomInfo);\n    room.subscribeMembers(_onAdded, _onRemoved);\n  };\n\n  const terminate = () => {\n    room.unsubscribeInfo(_onRoomInfo);\n    room.unsubscribeMembers(_onAdded, _onRemoved);\n  };\n\n  return {\n    init,\n    terminate\n  };\n};\n\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n\nexport const testRoom = async () => {\n  const room = Room(\"r1\", \"rs1\");\n  await room.init({ name: \"R1\" });\n  room.subscribeInfo(info => console.log(\"ROOM\", info.val()));\n  room.subscribeMembers(\n    members => console.log(\"ADDED\", members.key),\n    members => console.log(\"REMOVED\", members.key)\n  );\n  await room.init({ name: \"R1\" });\n  await sleep(1000);\n  await room.update({\n    name: \"R1b\",\n    queue: {},\n    queue_position: -1\n  });\n};\n\nexport const testUser = async () => {\n  const user = User(\"u1\", \"us1\");\n  user.subscribeInfo(info => console.log(\"USER\", info.val()));\n  await user.init({ name: \"U1\" });\n  await sleep(1000);\n  await user.update({ name: \"U1b\" });\n};\n\nexport const testParty = async () => {\n  const room1 = Room(\"r1\", \"rs1\");\n  room1.init({ name: \"R1\" });\n  const room2 = Room(\"r2\", \"rs2\");\n  room2.init({ name: \"R2\" });\n  const user1 = User(\"u1\", \"us1\");\n  user1.init({ name: \"U1\" });\n  const user2 = User(\"u2\", \"us2\");\n  user2.init({ name: \"U2\" });\n\n  await sleep(2000);\n\n  const party1 = Party(\"P1\", room1);\n  party1.init();\n  const party2 = Party(\"P2\", room2);\n  party2.init();\n\n  await sleep(1000);\n  user1.enter(room1);\n  await sleep(1000);\n  user2.enter(room1);\n  await sleep(1000);\n  user1.enter(room2);\n  await sleep(1000);\n  user1.exit();\n  await sleep(1000);\n  user1.enter(room1);\n};\n\nexport const test = () => {\n  // testRoom();\n  // testUser();\n  // testParty();\n};\n","import { createAction, AsyncAction } from \".\";\nimport { getCurrentRoom } from \"../utils/firebase\";\nimport { RoomQueue } from \"../utils/rooms\";\nimport { displayError } from \"./messages\";\n\n// ------------------------------------------------------------------\n\nexport type QueueAction =\n  | ReturnType<typeof _clearQueue>\n  | ReturnType<typeof _appendInQueue>\n  | ReturnType<typeof _removeFromQueue>\n  | ReturnType<typeof _setQueuePosition>;\n\nconst _clearQueue = () => createAction(\"queue/RESET\");\n\nconst _appendInQueue = (trackIds: string[]) =>\n  createAction(\"queue/PUSH\", trackIds);\n\nconst _removeFromQueue = (position: number) =>\n  createAction(\"queue/REMOVE\", position);\n\nconst _setQueuePosition = (position: number) =>\n  createAction(\"queue/SET_POSITION\", position);\n\n// ------------------------------------------------------------------\n\nexport const clearQueue = (): AsyncAction => async (dispatch, getState) => {\n  const room = getCurrentRoom();\n  if (room && !room.isLocked()) {\n    try {\n      await room.update({ queue: {}, queue_position: -1 });\n      dispatch(_clearQueue());\n    } catch (err) {\n      dispatch(displayError(\"Cannot clear queue\", err));\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const appendInQueue = (trackIds: string[]): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const room = getCurrentRoom();\n  if (room && !room.isLocked()) {\n    try {\n      const queue: RoomQueue = {};\n      [...getState().queue.trackIds, ...trackIds].forEach((id, index) => {\n        queue[index] = {\n          id,\n          type: \"deezer\"\n        };\n      });\n      await room.update({ queue });\n      dispatch(_appendInQueue(trackIds));\n    } catch (err) {\n      dispatch(displayError(\"Cannot append in queue\", err));\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const removeFromQueue = (position: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const room = getCurrentRoom();\n  if (room && !room.isLocked()) {\n    try {\n      const queue: RoomQueue = {};\n      const copy = [...getState().queue.trackIds];\n      copy.splice(position, 1);\n      copy.forEach((id, index) => {\n        queue[index] = {\n          id,\n          type: \"deezer\"\n        };\n      });\n      await room.update({ queue });\n      dispatch(_removeFromQueue(position));\n    } catch (err) {\n      dispatch(displayError(\"Cannot remove from queue\", err));\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const setQueuePosition = (position: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const room = getCurrentRoom();\n  if (room && !room.isLocked()) {\n    try {\n      await room.update({ queue_position: position });\n      dispatch(_setQueuePosition(position));\n    } catch (err) {\n      dispatch(displayError(\"Cannot remove from queue\", err));\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const moveBackward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { position, trackIds }\n  } = getState();\n  if (trackIds.length > 0) {\n    dispatch(\n      setQueuePosition(position > 0 ? position - 1 : trackIds.length - 1)\n    );\n  }\n};\n\nexport const moveForward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { position, trackIds }\n  } = getState();\n  if (trackIds.length > 0) {\n    dispatch(setQueuePosition((position + 1) % trackIds.length));\n  }\n};\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { appendInQueue } from \"./queue\";\nimport { ApiTrack } from \"../utils/api\";\n\n// ------------------------------------------------------------------\n\nexport type TracksAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setTracks>;\n\nconst fetching = () => createAction(\"tracks/FETCHING\");\nconst success = () => createAction(\"tracks/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"tracks/ERROR\", error);\nconst reset = () => createAction(\"tracks/RESET\");\nexport const setTracks = (tracks: ApiTrack[]) =>\n  createAction(\"tracks/SET_TRACKS\", tracks);\n\n// ------------------------------------------------------------------\n\nexport const loadTrack = (\n  trackId: string,\n  enqueue: boolean,\n  play: boolean\n): AsyncAction => async (dispatch, getState, { api, previewPlayer }) => {\n  try {\n    const state = getState();\n    let track = state.tracks.tracks[trackId];\n    if (!track) {\n      console.log(\"Loading track...\", { trackId });\n      track = await api.loadTrack(trackId);\n      dispatch(setTracks([track]));\n    }\n    if (enqueue) {\n      console.log(\"Enqueuing track...\");\n      dispatch(appendInQueue([trackId]));\n    }\n    if (play) {\n      console.log(\"Previewing track...\");\n      await previewPlayer.play(track.preview, 0);\n    }\n  } catch (err) {\n    dispatch(displayError(\"Cannot load track\", err));\n  }\n};\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { Container, ContainerType } from \"../utils/containers\";\nimport { displayError } from \"./messages\";\nimport { appendInQueue } from \"./queue\";\nimport { loadTrack, setTracks } from \"./tracks\";\n\n// ------------------------------------------------------------------\n\nexport type ContainersAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setContainers>;\n\nconst fetching = () => createAction(\"containers/FETCHING\");\nconst success = () => createAction(\"containers/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"containers/ERROR\", error);\nconst reset = () => createAction(\"containers/RESET\");\nconst setContainers = (containers: Container[]) =>\n  createAction(\"containers/SET_CONTAINERS\", containers);\n\n// ------------------------------------------------------------------\n\nexport const loadContainer = (\n  containerType: ContainerType,\n  containerId: string,\n  enqueue: boolean,\n  play: boolean\n): AsyncAction => async (dispatch, getState, { api }) => {\n  try {\n    const state = getState();\n    const containerTypeId = `${containerType}|${containerId}`;\n    let container = state.containers.containers[containerTypeId];\n    if (!container) {\n      console.log(\"Loading container...\", { containerId, containerType });\n      switch (containerType) {\n        case \"album\":\n          container = await api.loadAlbum(containerId);\n          break;\n        case \"playlist\":\n          container = await api.loadPlaylist(containerId);\n          break;\n      }\n    }\n    if (container) {\n      dispatch(setContainers([container]));\n      if (container.tracks && container.tracks.data.length > 0) {\n        dispatch(setTracks(container.tracks.data));\n        if (enqueue) {\n          console.log(\"Enqueuing container...\");\n          dispatch(\n            appendInQueue(\n              container.tracks.data.map(track => track.id.toString())\n            )\n          );\n        }\n        if (play) {\n          console.log(\"Playing container...\");\n          dispatch(\n            loadTrack(container.tracks.data[0].id.toString(), false, true)\n          );\n        }\n      }\n    }\n  } catch (err) {\n    dispatch(displayError(\"Cannot load container\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const previewContainer = (\n  containerType: ContainerType,\n  containerId: string\n): AsyncAction => async dispatch => {\n  console.log(\"Previewing container...\", { containerType, containerId });\n  dispatch(loadContainer(containerType, containerId, false, true));\n};\n","import { createHashHistory } from \"history\";\n\nexport default createHashHistory();\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { Rooms, Room } from \"../utils/rooms\";\nimport {\n  Room as FirebaseRoom,\n  getCurrentRoom,\n  setCurrentRoom\n} from \"../utils/firebase\";\nimport { loadTrack } from \"./tracks\";\nimport { loadContainer } from \"./containers\";\nimport { ContainerType } from \"../utils/containers\";\nimport { CombinedColor } from \"../utils/colorpicker\";\nimport history from \"../utils/history\";\n\n// ------------------------------------------------------------------\n\nexport type RoomsAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setRoomAccess>\n  | ReturnType<typeof setRooms>\n  | ReturnType<typeof setRoomColor>;\n\nconst fetching = () => createAction(\"rooms/FETCHING\");\nconst success = () => createAction(\"rooms/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"rooms/ERROR\", error);\nconst reset = () => createAction(\"rooms/RESET\");\nconst setRoomAccess = (id: string, secret: string) =>\n  createAction(\"rooms/SET_ROOM_ACCESS\", { id, secret });\nconst setRooms = (rooms: Rooms) => createAction(\"rooms/SET_ROOMS\", rooms);\nexport const setRoomColor = (color: CombinedColor) =>\n  createAction(\"rooms/SET_ROOM_COLOR\", color);\n\n// ------------------------------------------------------------------\n\nexport const createRoom = (\n  name: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  try {\n    const id = v4();\n    console.log(\"Creating room...\", { id, secret });\n    await FirebaseRoom(id, secret).init({ name });\n    dispatch(enterRoom(id, secret));\n  } catch (err) {\n    dispatch(displayError(\"Cannot create room\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_CB: any = null;\n\nexport const enterRoom = (\n  id: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  let room = getCurrentRoom();\n  if (!room || room.id !== id) {\n    dispatch(exitRoom());\n    try {\n      console.log(\"Entering room...\", { id, secret });\n      room = FirebaseRoom(id, secret);\n      dispatch(setRooms({ [id]: await room.wait() }));\n      dispatch(setRoomAccess(id, secret));\n      FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n        dispatch(setRooms({ [id]: snapshot.val() as Room }));\n      };\n      setCurrentRoom(room);\n      room.subscribeInfo(FIREBASE_CB);\n      history.push(`/room/${id}?key=${secret}`); // TODO: should push only if we're not already in it\n    } catch (err) {\n      dispatch(displayError(\"Cannot join room\", err));\n    }\n  }\n};\n\nexport const exitRoom = (): AsyncAction => async dispatch => {\n  const room = getCurrentRoom();\n  if (room) {\n    console.log(\"Exiting room...\");\n    room.unsubscribeInfo(FIREBASE_CB);\n    setCurrentRoom(null);\n    FIREBASE_CB = null;\n    dispatch(setRoomAccess(\"\", \"\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const lockRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: {\n      room_access: { id }\n    }\n  } = getState();\n  const room = getCurrentRoom();\n  if (room && room.id === id) {\n    console.log(\"Locking room...\", { id });\n    room.setSecret(\"\");\n    dispatch(setRoomAccess(id, \"\"));\n  }\n};\n\nexport const unlockRoom = (secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: {\n      room_access: { id }\n    }\n  } = getState();\n  const room = getCurrentRoom();\n  if (room && room.id === id) {\n    console.log(\"Unlocking room...\", { id, secret });\n    room.setSecret(secret);\n    dispatch(setRoomAccess(id, secret));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const queueTracks = (\n  containerType: ContainerType,\n  containerId: string,\n  trackId: string\n): AsyncAction => async dispatch => {\n  console.log(\"Queuing room tracks...\", {\n    containerType,\n    containerId,\n    trackId\n  });\n  if (containerId) {\n    dispatch(loadContainer(containerType, containerId, true, false));\n  }\n  if (trackId) {\n    dispatch(loadTrack(trackId, true, false));\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Head from \"../../components/Room/Head\";\nimport { extractRoom, isRoomLocked } from \"../../selectors/rooms\";\nimport { openModal } from \"../../actions/modals\";\nimport { lockRoom } from \"../../actions/rooms\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n  room: extractRoom(state, state.rooms.room_access.id)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onLock: () => dispatch(lockRoom()),\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message)),\n  onUnlock: () => dispatch(openModal({ type: \"UnlockRoom\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Head);\n","import React from \"react\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"../Common/Icon\";\nimport \"./Cover.scss\";\n\nexport const Cover = ({\n  playing,\n  image,\n  onPlay,\n  onStop\n}: {\n  image: string;\n  onPlay: () => void;\n  onStop: () => void;\n  playing: boolean;\n}) => (\n  <div\n    className={classNames(\"Cover\", { playing })}\n    style={{ backgroundImage: `url('${image}')` }}\n    onClick={!playing ? onPlay : onStop}\n  >\n    {!playing ? (\n      <Icon icon=\"play\" title=\"Play\" />\n    ) : (\n      <Icon icon=\"pause\" title=\"Stop\" />\n    )}\n  </div>\n);\n","import React, { ReactNode } from \"react\";\n//\nimport { ApiAlbum, ApiPlaylist, ApiTrack } from \"../../utils/api\";\nimport { Cover } from \"./Cover\";\nimport \"./Medias.scss\";\n\n// ------------------------------------------------------------------\n\nexport const Album = ({\n  actions,\n  album,\n  playing,\n  onPlay,\n  onStop\n}: {\n  actions?: ReactNode;\n  album: ApiAlbum;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n}) => (\n  <div className=\"Media Album\">\n    {actions}\n    <Cover\n      playing={playing}\n      image={album.cover_small}\n      onPlay={onPlay}\n      onStop={onStop}\n    />\n    <div className=\"Metas\">\n      <div className=\"Meta AlbumTitle\">\n        <a href={album.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {album.title}\n        </a>\n      </div>\n      <div className=\"Meta AlbumArtistName\">\n        by{\" \"}\n        <a href={album.artist.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {album.artist.name}\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\n// ------------------------------------------------------------------\n\nexport const Playlist = ({\n  actions,\n  playlist,\n  playing,\n  onPlay,\n  onStop\n}: {\n  actions?: ReactNode;\n  playlist: ApiPlaylist;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n}) => (\n  <div className=\"Media Playlist\">\n    {actions}\n    <Cover\n      playing={playing}\n      image={playlist.picture_small}\n      onPlay={onPlay}\n      onStop={onStop}\n    />\n    <div className=\"Metas\">\n      <div className=\"Meta PlaylistTitle\">\n        <a href={playlist.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {playlist.title}\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\n// ------------------------------------------------------------------\n\nexport const Track = ({\n  actions,\n  track,\n  playing,\n  onPlay,\n  onStop\n}: {\n  actions?: ReactNode;\n  track: ApiTrack;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n}) => (\n  <div className=\"Media Track\">\n    {actions}\n    <Cover\n      playing={playing}\n      image={track.album.cover_small}\n      onPlay={onPlay}\n      onStop={onStop}\n    />\n    <div className=\"Metas\">\n      <div className=\"Meta TrackTitle\">\n        <a href={track.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {track.title}\n        </a>\n      </div>\n      <div className=\"Meta TrackArtistName\">\n        by{\" \"}\n        <a href={track.artist.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {track.artist.name}\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React, { Component } from \"react\";\n//\nimport { MappedProps } from \"../../containers/Room/Queue\";\nimport { Track } from \"./Medias\";\nimport IconButton from \"../Common/IconButton\";\nimport \"./Queue.scss\";\n\n// ------------------------------------------------------------------\n\nclass Queue extends Component<MappedProps> {\n  public render = () => {\n    const {\n      locked,\n      playing,\n      playingPosition,\n      tracks,\n      onPlay,\n      onRemove,\n      onStop\n    } = this.props;\n    return (\n      <div className=\"Queue\">\n        {tracks.map((track, index) => (\n          <div className=\"QueueItem\" key={track.id}>\n            <Track\n              track={track}\n              playing={playing && playingPosition === index}\n              onPlay={() => onPlay(index)}\n              onStop={onStop}\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Remove\"\n                    icon=\"trash\"\n                    onClick={() => onRemove(index)}\n                  />\n                ) : null\n              }\n            />\n          </div>\n        ))}\n      </div>\n    );\n  };\n}\n\nexport default Queue;\n","import { RootState } from \"../reducers\";\nimport { ApiTrack } from \"../utils/api\";\n\nexport const extractTracks = (state: RootState, trackIds: string[]) => {\n  const res: Array<ApiTrack> = [];\n  const {\n    tracks: { tracks }\n  } = state;\n  for (const trackId of trackIds) {\n    const track = tracks[trackId];\n    if (!!track) {\n      res.push(track);\n    }\n  }\n  return res;\n};\n","import * as jimp from \"jimp\";\n\n// ------------------------------------------------------------------\n\nexport type Color = {\n  r: number;\n  g: number;\n  b: number;\n};\n\nexport type CombinedColor = {\n  bg: Color;\n  fg: Color;\n};\n\nconst CACHE: { [url: string]: CombinedColor } = {};\n\n// ------------------------------------------------------------------\n\nexport const pickColor = async (url: string) => {\n  if (!url) {\n    return {\n      bg: { r: 255, g: 255, b: 255 },\n      fg: { r: 0, g: 0, b: 0 }\n    };\n  }\n  let value = CACHE[url];\n  if (!value) {\n    const image = await jimp.read(url);\n    const pixel = await image.resize(1, 1).getPixelColor(0, 0);\n    const bg = jimp.intToRGBA(pixel);\n    // https://stackoverflow.com/questions/3942878/how-to-decide-font-color-in-white-or-black-depending-on-background-color\n    CACHE[url] = value = {\n      bg,\n      fg:\n        bg.r * 0.299 + bg.g * 0.587 + bg.b * 0.114 > 186\n          ? { r: 0, g: 0, b: 0 }\n          : { r: 255, g: 255, b: 255 }\n    };\n  }\n  return value;\n};\n\n/*\nconst backgroundColor = color\n? `rgb(${color.r}, ${color.g}, ${color.b})`\n: void 0;\n<div\nstyle={{\n  backgroundColor\n}}\n>\nx\n</div>\n\ncolors: {\n  [id: string]: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n};,\ncolors: {}\nconst color = this.state.colors[album.id];\n\nimport { pickColor } from \"../../utils/colorpicker\";\n\nprivate XXX = async (id: number, url: string) => {\n  if (!this.state.colors[id]) {\n    const color = await pickColor(url);\n    this.setState({\n      colors: { ...this.state.colors, [id]: color }\n    });\n  }\n};\n*/\n","import { AsyncAction, createAction } from \".\";\nimport { setTracks } from \"./tracks\";\nimport { displayError } from \"./messages\";\nimport { setRoomColor } from \"./rooms\";\nimport { pickColor } from \"../utils/colorpicker\";\nimport { setQueuePosition } from \"./queue\";\nimport { ApiTrack } from \"../utils/api\";\n\n// ------------------------------------------------------------------\n\nexport type PlayerAction =\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setPlayerPosition>\n  | ReturnType<typeof start>\n  | ReturnType<typeof stop>;\n\nconst reset = () => createAction(\"player/RESET\");\nconst setPlayerPosition = (position: number) =>\n  createAction(\"player/SET_POSITION\", position);\nconst start = () => createAction(\"player/START\");\nconst stop = () => createAction(\"player/STOP\");\n\n// ------------------------------------------------------------------\n\nlet PLAYER_TIMER: NodeJS.Timeout | null = null;\nlet PLAYER_PLAYING_TRACK: ApiTrack | null = null;\nlet PLAYER_PLAYING_TRACK_INDEX = -1;\n\nexport const startPlayer = (): AsyncAction => async (\n  dispatch,\n  getState,\n  { queuePlayer }\n) => {\n  if (!PLAYER_TIMER) {\n    PLAYER_TIMER = setInterval(async () => {\n      const {\n        queue: { position, trackIds },\n        tracks\n      } = getState();\n      if (trackIds.length > 0) {\n        /*\n        console.log(\n          \"TOTO\",\n          PLAYER_PLAYING_TRACK_INDEX,\n          position,\n          trackIds.length\n        );\n        */\n        if (\n          PLAYER_PLAYING_TRACK_INDEX !== position ||\n          (position >= 0 &&\n            PLAYER_PLAYING_TRACK !== tracks.tracks[trackIds[position]])\n        ) {\n          // User has clicked an other track or added/removed a track in queue\n          PLAYER_PLAYING_TRACK_INDEX = position;\n          PLAYER_PLAYING_TRACK =\n            tracks.tracks[trackIds[PLAYER_PLAYING_TRACK_INDEX]];\n          console.log(\"Playing clicked...\", {\n            id: PLAYER_PLAYING_TRACK.id,\n            index: PLAYER_PLAYING_TRACK_INDEX\n          });\n          dispatch(setQueuePosition(PLAYER_PLAYING_TRACK_INDEX));\n          dispatch(\n            setRoomColor(\n              await pickColor(PLAYER_PLAYING_TRACK.album.cover_small)\n            )\n          );\n          await queuePlayer.play(PLAYER_PLAYING_TRACK.preview, 0);\n        } else if (!queuePlayer.isPlaying()) {\n          // Not playing which means previous track has terminated\n          const nextPosition = (position + 1) % trackIds.length;\n          if (nextPosition < trackIds.length) {\n            // Time to move to next track\n            PLAYER_PLAYING_TRACK_INDEX = nextPosition;\n            PLAYER_PLAYING_TRACK =\n              tracks.tracks[trackIds[PLAYER_PLAYING_TRACK_INDEX]];\n            console.log(\"Playing next...\", {\n              id: PLAYER_PLAYING_TRACK.id,\n              index: PLAYER_PLAYING_TRACK_INDEX\n            });\n            dispatch(setQueuePosition(PLAYER_PLAYING_TRACK_INDEX));\n            dispatch(\n              setRoomColor(\n                await pickColor(PLAYER_PLAYING_TRACK.album.cover_small)\n              )\n            );\n            await queuePlayer.play(PLAYER_PLAYING_TRACK.preview, 0);\n          }\n        }\n        dispatch(setPlayerPosition(queuePlayer.getPosition()));\n      } else {\n        // Last track has been removed from queue by user\n        console.log(\"No more tracks in queue...\");\n        dispatch(stopPlayer());\n      }\n    }, 250);\n    dispatch(start());\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPlayer = (): AsyncAction => async (\n  dispatch,\n  _,\n  { queuePlayer }\n) => {\n  if (PLAYER_TIMER) {\n    clearInterval(PLAYER_TIMER);\n    PLAYER_TIMER = null;\n    PLAYER_PLAYING_TRACK = null;\n    PLAYER_PLAYING_TRACK_INDEX = -1;\n\n    queuePlayer.stop();\n    dispatch(stop());\n    dispatch(setPlayerPosition(0));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const startPreview = (trackId: string): AsyncAction => async (\n  dispatch,\n  getState,\n  { api, previewPlayer }\n) => {\n  try {\n    const state = getState();\n    let track = state.tracks.tracks[trackId];\n    if (!track) {\n      console.log(\"Loading track...\", { trackId });\n      track = await api.loadTrack(trackId);\n      dispatch(setTracks([track]));\n    }\n    console.log(\"Start previewing...\");\n    await previewPlayer.play(track.preview, 0);\n  } catch (err) {\n    dispatch(displayError(\"Cannot load track\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPreview = (): AsyncAction => async (\n  _1,\n  _2,\n  { previewPlayer }\n) => {\n  console.log(\"Stop previewing...\");\n  previewPlayer.stop();\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Queue from \"../../components/Room/Queue\";\nimport { extractTracks } from \"../../selectors/tracks\";\nimport { setQueuePosition, removeFromQueue } from \"../../actions/queue\";\nimport { stopPlayer, startPlayer } from \"../../actions/player\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n  playing: state.player.playing,\n  playingPosition: state.queue.position,\n  tracks: extractTracks(state, state.queue.trackIds)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onPlay: (index: number) => {\n    dispatch(startPlayer());\n    dispatch(setQueuePosition(index));\n  },\n  onRemove: (index: number) => dispatch(removeFromQueue(index)),\n  onStop: () => dispatch(stopPlayer())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Queue);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport { MappedProps } from \"../../containers/Room/Progress\";\nimport \"./Progress.scss\";\n\n// ------------------------------------------------------------------\n\nclass Progress extends Component<MappedProps> {\n  public render = () => {\n    const { playing, value } = this.props;\n    return (\n      <div className={classNames(\"Progress\", { playing })}>\n        <progress max={100} value={value * 100} />\n      </div>\n    );\n  };\n}\n\nexport default Progress;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Progress from \"../../components/Room/Progress\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  playing: state.player.playing,\n  value: state.player.position\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Progress);\n","import React, { Component } from \"react\";\n//\nimport { MappedProps } from \"../../containers/Room/Controls\";\nimport IconButton from \"../Common/IconButton\";\nimport history from \"../../utils/history\";\nimport Progress from \"../../containers/Room/Progress\";\nimport \"./Controls.scss\";\n\n// ------------------------------------------------------------------\n\nclass Controls extends Component<MappedProps> {\n  public render = () => {\n    const {\n      onMoveBackward,\n      onMoveForward,\n      onPlay,\n      onSearch,\n      onStop,\n      locked,\n      playable,\n      playing\n    } = this.props;\n    return (\n      <div className=\"Controls\">\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={!playable}\n              icon=\"step-backward\"\n              onClick={onMoveBackward}\n              size=\"M\"\n              title=\"Previous\"\n            />\n          </div>\n          <div className=\"Control\">\n            {!playable || !playing ? (\n              <IconButton\n                disabled={!playable}\n                onClick={onPlay}\n                icon=\"play\"\n                size=\"L\"\n                title=\"Play\"\n              />\n            ) : (\n              <IconButton\n                disabled={!playable}\n                onClick={onStop}\n                icon=\"pause\"\n                title=\"Stop\"\n                size=\"L\"\n              />\n            )}\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              disabled={!playable}\n              icon=\"step-forward\"\n              onClick={onMoveForward}\n              size=\"M\"\n              title=\"Next\"\n            />\n          </div>\n        </div>\n        <Progress />\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked}\n              onClick={this.onClear}\n              icon=\"trash\"\n              title=\"Clear Room\"\n            />\n          </div>\n          <div className=\"Control\">\n            <IconButton onClick={onSearch} icon=\"search\" title=\"Search Media\" />\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              onClick={this.onExit}\n              icon=\"sign-out\"\n              title=\"Exit Room\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  onClear = () => {\n    if (window.confirm(\"Are you sure you want to clear Room\")) {\n      this.props.onClear();\n    }\n  };\n\n  onExit = () => {\n    if (window.confirm(\"Are you sure you want to leave the room?\")) {\n      history.push(\"/\");\n    }\n  };\n}\n\nexport default Controls;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Controls from \"../../components/Room/Controls\";\nimport { startPlayer, stopPlayer } from \"../../actions/player\";\nimport { openModal } from \"../../actions/modals\";\nimport { clearQueue, moveBackward, moveForward } from \"../../actions/queue\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n  playable: !isRoomLocked(state) && state.queue.trackIds.length > 0,\n  playing: state.player.playing\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClear: () => {\n    dispatch(clearQueue());\n    dispatch(stopPlayer());\n  },\n  onMoveBackward: () => dispatch(moveBackward()),\n  onMoveForward: () => dispatch(moveForward()),\n  onPlay: () => dispatch(startPlayer()),\n  onSearch: () => dispatch(openModal({ type: \"Search\", props: null })),\n  onStop: () => dispatch(stopPlayer())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Controls);\n","import React, { Component } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/Room\";\nimport Head from \"../../containers/Room/Head\";\nimport Queue from \"../../containers/Room/Queue\";\nimport Controls from \"../../containers/Room/Controls\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = RouteComponentProps<{\n  room_id: string;\n}>;\n\nclass Room extends Component<Props & MappedProps> {\n  public componentDidMount = () => {\n    this.props.onEnter();\n  };\n\n  public componentWillUnmount = () => {\n    this.props.onExit();\n  };\n\n  public render = () => {\n    const {\n      color: { fg, bg }\n    } = this.props;\n    return (\n      <div\n        className=\"Room\"\n        style={{\n          color: `rgb(${fg.r}, ${fg.g}, ${fg.b})`,\n          backgroundColor: `rgb(${bg.r}, ${bg.g}, ${bg.b})`\n        }}\n      >\n        <Head />\n        <Queue />\n        <Controls />\n      </div>\n    );\n  };\n}\n\nexport default withRouter(Room);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport * as qs from \"qs\";\n//\nimport { RootState } from \"../../reducers\";\nimport Room, { Props } from \"../../components/Room\";\nimport { enterRoom, exitRoom } from \"../../actions/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState, ownProps: Props) => ({\n  color: state.rooms.room_color\n});\n\nconst dispatchToProps = (\n  dispatch: ThunkDispatch<RootState, any, any>,\n  ownProps: Props\n) => {\n  const { key } = qs.parse(ownProps.location.search.substr(1)) as {\n    key?: string;\n  };\n  return {\n    onEnter: () =>\n      dispatch(enterRoom(ownProps.match.params.room_id, key || \"\")),\n    onExit: () => dispatch(exitRoom())\n  };\n};\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Room);\n","import React, { Component, Fragment } from \"react\";\n//\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Splash/Menu\";\n\n// ------------------------------------------------------------------\n\nclass Menu extends Component<MappedProps> {\n  public render = () => {\n    const { loggedIn, onCreateRoom, onConnectUser } = this.props;\n    return (\n      <div className=\"Menu\">\n        {loggedIn ? (\n          <Fragment>\n            <div className=\"MenuItem\">\n              <IconButton\n                icon=\"plus\"\n                onClick={onCreateRoom}\n                size=\"L\"\n                title=\"Create Room\"\n              />\n            </div>\n            <div className=\"MenuItem\">\n              <IconButton\n                icon=\"sign-out\"\n                onClick={this.onDisconnect}\n                size=\"M\"\n                title=\"Disconnect\"\n              />\n            </div>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <div className=\"MenuItem\">\n              <IconButton\n                onClick={onConnectUser}\n                icon=\"sign-in\"\n                size=\"L\"\n                title=\"Connect\"\n              />\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  };\n\n  onDisconnect = () => {\n    if (window.confirm(\"Are you sure you want to disconnect?\")) {\n      this.props.onDisconnectUser();\n    }\n  };\n}\n\nexport default Menu;\n","import { AxiosError } from \"axios\";\nimport { createAction, AsyncAction } from \".\";\nimport { Users, User } from \"../utils/users\";\nimport { User as FirebaseUser } from \"../utils/firebase\";\nimport { v4 } from \"uuid\";\nimport { displayError } from \"./messages\";\n\n// ------------------------------------------------------------------\n\nexport type UsersAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setUserAccess>\n  | ReturnType<typeof setUsers>;\n\nconst fetching = () => createAction(\"users/FETCHING\");\nconst success = () => createAction(\"users/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"users/ERROR\", error);\nconst reset = () => createAction(\"users/RESET\");\nconst setUserAccess = (id: string, secret: string) =>\n  createAction(\"users/SET_USER_ACCESS\", { id, secret });\nconst setUsers = (users: Users) => createAction(\"users/SET_USERS\", users);\n\n// ------------------------------------------------------------------\n\nexport const createUser = (\n  name: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  try {\n    console.log(\"Creating user...\");\n    const id = v4();\n    await FirebaseUser(id, secret).init({ name });\n    dispatch(connectUser(id, secret));\n  } catch (err) {\n    dispatch(displayError(\"Cannot create user\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_USER: ReturnType<typeof FirebaseUser> | null = null;\nlet FIREBASE_CB: any = null;\n\nexport const connectUser = (\n  id: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  dispatch(disconnectUser());\n  try {\n    console.log(\"Connection user...\", { id, secret });\n    const user = FirebaseUser(id);\n    dispatch(setUsers({ [id]: await user.wait() }));\n    dispatch(setUserAccess(id, secret));\n    FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n      dispatch(setUsers({ [id]: snapshot.val() as User }));\n    };\n    FIREBASE_USER = user;\n    FIREBASE_USER.subscribeInfo(FIREBASE_CB);\n  } catch (err) {\n    dispatch(displayError(\"Cannot connect user\", err));\n    dispatch(setUserAccess(\"\", \"\"));\n  }\n};\n\nexport const disconnectUser = (): AsyncAction => async dispatch => {\n  if (FIREBASE_USER) {\n    console.log(\"Disconnecting user...\");\n    FIREBASE_USER.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_USER = null;\n    FIREBASE_CB = null;\n    dispatch(setUserAccess(\"\", \"\"));\n  }\n};\n\nexport const reconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const state = getState();\n  const { id, secret } = state.users.user_access;\n  if (id && secret) {\n    try {\n      console.log(\"Loading user...\");\n      dispatch(connectUser(id, secret));\n    } catch (err) {\n      dispatch(displayError(\"Cannot load user\", err));\n    }\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport { openModal } from \"../../actions/modals\";\nimport Menu from \"../../components/Splash/Menu\";\nimport { disconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  loggedIn: !!state.users.user_access.id\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onCreateRoom: () => dispatch(openModal({ type: \"CreateRoom\", props: null })),\n  onConnectUser: () => dispatch(openModal({ type: \"CreateUser\", props: null })),\n  onDisconnectUser: () => dispatch(disconnectUser())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Menu);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/Splash\";\nimport Menu from \"../../containers/Splash/Menu\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass Splash extends Component<MappedProps> {\n  public render = () => {\n    return (\n      <div className=\"Splash\">\n        <div className=\"Logo\">\n          <Link to=\"/\">Deezer Party</Link>\n        </div>\n        <Menu />\n      </div>\n    );\n  };\n}\n\nexport default Splash;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Splash from \"../../components/Splash\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Splash);\n","import React, { Component, FormEvent, ReactNode } from \"react\";\nimport classNames from \"classnames\";\n//\nimport { MappedProps } from \"../../containers/Modals/Modal\";\nimport IconButton from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n  className?: string;\n  title: string;\n  renderFoot?: () => React.ReactNode;\n  onSubmit?: () => void;\n};\n\nclass Modal extends Component<Props & MappedProps> {\n  public render = () => {\n    const {\n      children,\n      className,\n      title,\n      renderFoot,\n      onClose,\n      onPop,\n      has_prev_modal\n    } = this.props;\n    return (\n      <form className={classNames(\"Modal\", className)} onSubmit={this.onSubmit}>\n        <div className=\"ModalHead\">\n          <IconButton\n            kind=\"special\"\n            className={classNames(\"ModalHeadBack\", {\n              hidden: !has_prev_modal\n            })}\n            icon=\"angle-left\"\n            title=\"Back\"\n            onClick={onPop}\n          />\n          <div className=\"ModalTitle\">{title}</div>\n          <IconButton\n            kind=\"special\"\n            className=\"ModalHeadClose\"\n            onClick={onClose}\n            title=\"Cancel\"\n            icon=\"times\"\n          />\n        </div>\n        <div className=\"ModalBody\">{children}</div>\n        <div className=\"ModalFoot\">{renderFoot && renderFoot()}</div>\n      </form>\n    );\n  };\n\n  private onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  };\n}\n\nexport default Modal;\n","import { connect } from \"react-redux\";\n//\nimport Modal from \"../../components/Modals/Modal\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  has_prev_modal: state.modals.stack.length > 1\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onClose: () => dispatch(popModal()),\n  onPop: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport Modal from \"../../containers/Modals/Modal\";\nimport \"./FormModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  className?: string;\n  onSubmit: () => void;\n  renderButtons: () => React.ReactNode;\n  title: string;\n};\n\nclass FormModal extends Component<Props> {\n  public render = () => {\n    const { children, className, renderButtons, title, onSubmit } = this.props;\n    return (\n      <Modal\n        className={classNames(\"FormModal\", className)}\n        title={title}\n        renderFoot={renderButtons}\n        onSubmit={onSubmit}\n      >\n        {children}\n      </Modal>\n    );\n  };\n}\n\nexport default FormModal;\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/ConnectUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  id: string;\n  secret: string;\n};\n\nclass ConnectUserModal extends Component<MappedProps, State> {\n  private idRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    id: \"\",\n    secret: \"\"\n  };\n\n  public componentDidMount() {\n    if (this.idRef.current) {\n      this.idRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { id, secret } = this.state;\n    return (\n      <FormModal\n        title=\"Connect User\"\n        onSubmit={this.onConnect}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-id\">User ID</label>\n          <input\n            id=\"modal-id\"\n            type=\"text\"\n            placeholder=\"User ID...\"\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={id}\n            ref={this.idRef}\n            onChange={e => {\n              this.setState({ id: e.target.value });\n            }}\n          />\n        </div>\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">User Secret</label>\n          <input\n            id=\"modal-secret\"\n            type=\"text\"\n            placeholder=\"User Secret...\"\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            onChange={e => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Connect\" kind=\"primary\" icon=\"sign-in\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n      <IconButton\n        title=\"Create\"\n        kind=\"default\"\n        icon=\"plus\"\n        onClick={this.props.onToggle}\n      />\n    </Fragment>\n  );\n\n  private onConnect = () => {\n    const { onClose, onConnect, onError } = this.props;\n    const { id, secret } = this.state;\n    if (id.trim().length === 0) {\n      onError(\"User ID is invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"User secret is invalid\");\n      return;\n    }\n    onConnect(id, secret);\n    onClose();\n  };\n}\n\nexport default ConnectUserModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport ConnectUserModal from \"../../components/Users/ConnectUserModal\";\nimport { connectUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onConnect: (id: string, secret: string) => dispatch(connectUser(id, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"CreateUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(ConnectUserModal);\n","import React, { Component } from \"react\";\n//\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  id: string;\n  label: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  value: string;\n};\n\nclass SecretField extends Component<Props & MappedProps> {\n  public render = () => {\n    const { id, label, onChange, placeholder, value } = this.props;\n    return (\n      <div className=\"ModalField\">\n        <label htmlFor={id}>{label}</label>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}\n        >\n          <input\n            style={{\n              flexGrow: 1,\n              marginRight: \"0.5rem\"\n            }}\n            id={id}\n            type=\"text\"\n            placeholder={placeholder}\n            maxLength={36}\n            minLength={36}\n            readOnly={true}\n            required={true}\n            value={value}\n            onChange={e => onChange(e.target.value)}\n          />\n          <IconButton\n            icon=\"clipboard\"\n            onClick={this.onCopyToClipboard}\n            size=\"M\"\n            title={`Copy ${label} to Clipboard`}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyToClipboard = async () => {\n    const { onMessage, label, value } = this.props;\n    await copyToClipboard(value);\n    onMessage(`${label} has been copied to clipboard`);\n  };\n}\n\nexport default SecretField;\n","import { connect } from \"react-redux\";\n//\nimport SecretField from \"../../components/Modals/SecretField\";\nimport { RootState } from \"../../reducers\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message))\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretField);\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/CreateRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateRoomModal extends Component<MappedProps, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4()\n  };\n\n  public componentDidMount() {\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title=\"Create Room\"\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">Room Name</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder=\"Room Name...\"\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={e => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label=\"Room Key\"\n          placeholder=\"Room Key...\"\n          value={secret}\n          onChange={newSecret => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Create\" kind=\"primary\" icon=\"plus\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n    </Fragment>\n  );\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(\"Room name is invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"Room secret is invalid\");\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n  };\n}\n\nexport default CreateRoomModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateRoomModal from \"../../components/Room/CreateRoomModal\";\nimport { createRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createRoom(name, secret)),\n  onError: (message: string) => dispatch(displayError(message))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateRoomModal);\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/CreateUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateUserModal extends Component<MappedProps, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4()\n  };\n\n  public componentDidMount() {\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title=\"Create User\"\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">User Name</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder=\"User Name...\"\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={e => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label=\"User Secret\"\n          placeholder=\"User Secret...\"\n          value={secret}\n          onChange={newSecret => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Create\" kind=\"primary\" icon=\"plus\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n      <IconButton\n        title=\"Connect\"\n        kind=\"default\"\n        icon=\"sign-in\"\n        onClick={this.props.onToggle}\n      />\n    </Fragment>\n  );\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(\"User name is invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"User secret is invalid\");\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n  };\n}\n\nexport default CreateUserModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateUserModal from \"../../components/Users/CreateUserModal\";\nimport { createUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createUser(name, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"ConnectUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateUserModal);\n","// import Axios from \"axios\";\nimport jsonp from \"jsonp\";\n\n// ------------------------------------------------------------------\n\ntype SearchResult<T> = {\n  data: T[];\n  total: number;\n};\n\nexport type SearchAllResults = {\n  albums: SearchResult<ApiAlbum>;\n  playlists: SearchResult<ApiPlaylist>;\n  tracks: SearchResult<ApiTrack>;\n};\n\nexport type ApiAlbum = {\n  artist: {\n    id: number;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  available: boolean;\n  cover_big: string;\n  cover_small: string;\n  id: number;\n  link: string;\n  nb_tracks: number;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  type: \"album\";\n};\n\nexport type ApiPlaylist = {\n  description: string;\n  id: number;\n  link: string;\n  nb_tracks: number;\n  picture_big: string;\n  picture_small: string;\n  public: true;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  type: \"playlist\";\n};\n\nexport type ApiTrack = {\n  album: {\n    id: number;\n    title: string;\n    cover_big: string;\n    cover_small: string;\n  };\n  artist: {\n    id: number;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  duration: number;\n  id: number;\n  link: string;\n  preview: string;\n  readable: boolean;\n  title: string;\n  type: \"track\";\n};\n\n// ------------------------------------------------------------------\n\nexport const Api = () => {\n  const API_BASE = \"https://api.deezer.com\";\n\n  const asyncJsonp = <T>(url: string): Promise<T> =>\n    new Promise((resolve, reject) => {\n      jsonp(url, void 0, (err, data) => {\n        if (err) {\n          reject(new Error(err.message));\n        } else {\n          resolve(data);\n        }\n      });\n    });\n\n  const call = async <T>(path: string, qs?: string) => {\n    // We have to rely on jsonp because the Deezer api is CORS restricted\n    const fullpath = qs\n      ? `${API_BASE}/${path}?${qs}&output=jsonp&callback=`\n      : `${API_BASE}/${path}?output=jsonp&callback=`;\n    return await asyncJsonp<T>(fullpath);\n  };\n\n  const search = <T>(type: string, query: string) =>\n    call<SearchResult<T>>(`search/${type}`, `q=${encodeURIComponent(query)}`);\n\n  const load = <T>(type: string, id: string) => call<T>(`/${type}/${id}`);\n\n  const searchAlbums = (query: string) => search<ApiAlbum>(\"album\", query);\n\n  const searchPlaylists = (query: string) =>\n    search<ApiPlaylist>(\"playlist\", query);\n\n  const searchTracks = (query: string) => search<ApiTrack>(\"track\", query);\n\n  const searchAll = async (query: string): Promise<SearchAllResults> => {\n    const [albums, playlists, tracks] = await Promise.all([\n      searchAlbums(query),\n      searchPlaylists(query),\n      searchTracks(query)\n    ]);\n    return { albums, playlists, tracks };\n  };\n\n  const loadAlbum = async (id: string) => {\n    const album = await load<ApiAlbum>(\"album\", id);\n    album.tracks!.data.forEach(track => {\n      track.album = album;\n      track.artist.link = `https://www.deezer.com/artist/${track.artist.id}`;\n    });\n    return album;\n  };\n\n  const loadPlaylist = (id: string) => load<ApiPlaylist>(\"playlist\", id);\n\n  const loadTrack = (id: string) => load<ApiTrack>(\"track\", id);\n\n  return {\n    searchAll,\n    loadAlbum,\n    loadPlaylist,\n    loadTrack\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const DEFAULT_API = Api();\n","import React, { Fragment, ReactNode } from \"react\";\n//\nimport { MediaType } from \"../../utils/containers\";\n\n// ------------------------------------------------------------------\n\nconst MAX_RESULTS_COUNT = 5;\n\n// ------------------------------------------------------------------\n\nconst SearchResultCategory = <T extends { id: number }>({\n  items,\n  label,\n  cb\n}: {\n  items: T[];\n  label: string;\n  type: MediaType;\n  cb: (item: T) => ReactNode;\n}) =>\n  items.length > 0 ? (\n    <Fragment>\n      <div className=\"ModalField\">\n        <label>{label}</label>\n      </div>\n      {items.slice(0, MAX_RESULTS_COUNT).map(item => (\n        <div key={item.id} className=\"ModalField\">\n          <div className=\"SearchResultItem\">{cb(item)}</div>\n        </div>\n      ))}\n    </Fragment>\n  ) : null;\n\nexport default SearchResultCategory;\n","import React, { Component, Fragment, createRef, RefObject } from \"react\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/SearchModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport { DEFAULT_API, SearchAllResults } from \"../../utils/api\";\nimport { Album, Playlist, Track } from \"./Medias\";\nimport { MediaType } from \"../../utils/containers\";\nimport SearchResultCategory from \"./SearchResultCategory\";\nimport \"./SearchModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  mediaId: number;\n  mediaType: MediaType;\n  query: string;\n  results: SearchAllResults;\n};\n\nclass SearchModal extends Component<MappedProps, State> {\n  private queryRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    mediaId: 0,\n    mediaType: \"track\",\n    query: \"\",\n    results: {\n      albums: { data: [], total: 0 },\n      playlists: { data: [], total: 0 },\n      tracks: { data: [], total: 0 }\n    }\n  };\n\n  public componentDidMount() {\n    if (this.queryRef.current) {\n      this.queryRef.current.focus();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.props.onStopPreview();\n  }\n\n  public render = () => (\n    <FormModal\n      className=\"SearchModal\"\n      title=\"Search\"\n      onSubmit={this.onSearch}\n      renderButtons={this.renderButtons}\n    >\n      {this.renderInputs()}\n      {this.renderResults()}\n    </FormModal>\n  );\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Search\" kind=\"primary\" icon=\"search\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n    </Fragment>\n  );\n\n  private renderInputs = () => {\n    const { query } = this.state;\n    return (\n      <div className=\"ModalField\">\n        <label htmlFor=\"modal-query\">Query</label>\n        <input\n          id=\"modal-query\"\n          type=\"text\"\n          placeholder=\"Query...\"\n          maxLength={100}\n          minLength={2}\n          required={true}\n          value={query}\n          ref={this.queryRef}\n          onChange={e => {\n            this.setState({ query: e.target.value });\n          }}\n        />\n      </div>\n    );\n  };\n\n  private renderResults = () => {\n    const { locked } = this.props;\n    const {\n      mediaId,\n      mediaType,\n      results: { albums, playlists, tracks }\n    } = this.state;\n    return (\n      <Fragment>\n        <SearchResultCategory\n          label=\"Albums\"\n          type=\"album\"\n          items={albums.data}\n          cb={album => (\n            <Album\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Add\"\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"album\", album.id)}\n                  />\n                ) : null\n              }\n              album={album}\n              playing={mediaType === \"album\" && mediaId === album.id}\n              onPlay={() => this.onStartPreview(\"album\", album.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n        <SearchResultCategory\n          label=\"Playlists\"\n          type=\"playlist\"\n          items={playlists.data}\n          cb={playlist => (\n            <Playlist\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Add\"\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"playlist\", playlist.id)}\n                  />\n                ) : null\n              }\n              playlist={playlist}\n              playing={mediaType === \"playlist\" && mediaId === playlist.id}\n              onPlay={() => this.onStartPreview(\"playlist\", playlist.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n        <SearchResultCategory\n          label=\"Tracks\"\n          type=\"track\"\n          items={tracks.data}\n          cb={track => (\n            <Track\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Add\"\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"track\", track.id)}\n                  />\n                ) : null\n              }\n              track={track}\n              playing={mediaType === \"track\" && mediaId === track.id}\n              onPlay={() => this.onStartPreview(\"track\", track.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n      </Fragment>\n    );\n  };\n\n  private onSearch = async () => {\n    const { query } = this.state;\n    if (query.trim().length > 0) {\n      this.setState({ results: await DEFAULT_API.searchAll(query) });\n    }\n  };\n\n  private onSelect = (mediaType: MediaType, mediaId: number) =>\n    this.props.onSelect(mediaType, mediaId.toString());\n\n  private onStartPreview = (mediaType: MediaType, mediaId: number) => {\n    this.props.onStartPreview(mediaType, mediaId.toString());\n    this.setState({\n      mediaId,\n      mediaType\n    });\n  };\n\n  private onStopPreview = () => {\n    this.props.onStopPreview();\n    this.setState({\n      mediaId: 0,\n      mediaType: \"track\"\n    });\n  };\n}\n\nexport default SearchModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport SearchModal from \"../../components/Room/SearchModal\";\nimport { popModal } from \"../../actions/modals\";\nimport { previewContainer } from \"../../actions/containers\";\nimport { queueTracks } from \"../../actions/rooms\";\nimport { startPreview, stopPreview } from \"../../actions/player\";\nimport { MediaType } from \"../../utils/containers\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onSelect: (mediaType: MediaType, mediaId: string) =>\n    dispatch(\n      \"track\" === mediaType\n        ? queueTracks(\"album\", \"\", mediaId)\n        : queueTracks(mediaType, mediaId, \"\")\n    ),\n  onStartPreview: (mediaType: MediaType, mediaId: string) => {\n    dispatch(\n      \"track\" === mediaType\n        ? startPreview(mediaId)\n        : previewContainer(mediaType, mediaId)\n    );\n  },\n  onStopPreview: () => dispatch(stopPreview())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(SearchModal);\n","import React, { Component, Fragment, createRef, RefObject } from \"react\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/UnlockRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  secret: string;\n};\n\nclass UnlockRoomModal extends Component<MappedProps, State> {\n  private secretRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    secret: \"\"\n  };\n\n  public componentDidMount() {\n    if (this.secretRef.current) {\n      this.secretRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { secret } = this.state;\n    return (\n      <FormModal\n        title=\"Unlock Room\"\n        onSubmit={this.onUnlock}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">Room Key</label>\n          <input\n            id=\"modal-secret\"\n            type=\"text\"\n            placeholder=\"Room Key...\"\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            ref={this.secretRef}\n            onChange={e => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Join\" kind=\"primary\" icon=\"sign-in\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n    </Fragment>\n  );\n\n  private onUnlock = () => {\n    const { onClose, onUnlock } = this.props;\n    onUnlock(this.state.secret);\n    onClose();\n  };\n}\n\nexport default UnlockRoomModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport UnlockRoomModal from \"../../components/Room/UnlockRoomModal\";\nimport { unlockRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onUnlock: (secret: string) => dispatch(unlockRoom(secret))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(UnlockRoomModal);\n","import React, { Component, MouseEvent } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/Modals\";\nimport { ModalPrereq } from \"../../actions/modals\";\nimport ConnectUserModal from \"../../containers/Users/ConnectUserModal\";\nimport CreateRoomModal from \"../../containers/Room/CreateRoomModal\";\nimport CreateUserModal from \"../../containers/Users/CreateUserModal\";\nimport SearchModal from \"../../containers/Room/SearchModal\";\nimport UnlockRoomModal from \"../../containers/Room/UnlockRoomModal\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst TransitionTimeout = 300;\n\n// ------------------------------------------------------------------\n\nexport const getModal = (prereq: ModalPrereq) => {\n  switch (prereq.type) {\n    case \"ConnectUser\":\n      return <ConnectUserModal />;\n    case \"CreateRoom\":\n      return <CreateRoomModal />;\n    case \"CreateUser\":\n      return <CreateUserModal />;\n    case \"Search\":\n      return <SearchModal />;\n    case \"UnlockRoom\":\n      return <UnlockRoomModal />;\n  }\n};\n\n// ------------------------------------------------------------------\n\ntype State = {\n  curr_prereq?: ModalPrereq;\n  prev_prereq?: ModalPrereq; // Keeping prev modal prereq for modal fadeout\n};\n\nclass Modals extends Component<MappedProps, State> {\n  public readonly state: State = {\n    curr_prereq: void 0,\n    prev_prereq: void 0\n  };\n\n  public componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentDidUpdate = (prevProps: MappedProps) => {\n    const oldPrereq = prevProps.prereq;\n    const newPrereq = this.props.prereq;\n    if (oldPrereq !== newPrereq) {\n      // Hide current modal before showing new one (if there is a new one)\n      this.setState(\n        {\n          curr_prereq: void 0,\n          prev_prereq: oldPrereq\n        },\n        () => {\n          if (newPrereq) {\n            setTimeout(() => {\n              this.setState({\n                curr_prereq: newPrereq\n              });\n            }, TransitionTimeout);\n          }\n        }\n      );\n    }\n  };\n\n  public render = () => {\n    const { curr_prereq, prev_prereq } = this.state;\n    const prereq = curr_prereq || prev_prereq;\n    let modal = null;\n    if (prereq) {\n      modal = getModal(prereq);\n    }\n    return (\n      <CSSTransition\n        in={!!curr_prereq}\n        timeout={TransitionTimeout}\n        unmountOnExit={true}\n      >\n        <div className=\"ModalOverlay\" onClick={this.onClickOverlay}>\n          {modal && (\n            <div\n              className=\"ModalWrapper\"\n              role=\"dialog\"\n              onClick={this.onClickWrapper}\n            >\n              {modal}\n            </div>\n          )}\n        </div>\n      </CSSTransition>\n    );\n  };\n\n  private onClickOverlay = (event: MouseEvent) => {\n    // Clicking overlay will close current modal\n    event.stopPropagation();\n    this.props.onCloseModal();\n  };\n\n  private onClickWrapper = (event: MouseEvent) => {\n    // Clicking wrapper modal will not progagate to overlay which would close current modal\n    event.stopPropagation();\n  };\n\n  private onKeyDown = (e: KeyboardEvent) => {\n    if (e.keyCode === 27) {\n      this.props.onCloseModal();\n    }\n  };\n}\n\nexport default Modals;\n","import { connect } from \"react-redux\";\n//\nimport Modals from \"../../components/Modals\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  prereq:\n    state.modals.stack.length > 0\n      ? state.modals.stack[state.modals.stack.length - 1]\n      : void 0\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onCloseModal: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modals);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/App/Messages\";\nimport { Message } from \"../../utils/messages\";\nimport \"./Messages.scss\";\n\n// ------------------------------------------------------------------\n\nclass Messages extends React.Component<MappedProps> {\n  public render = () => (\n    <div className=\"Messages\">\n      <TransitionGroup>\n        {this.props.messages.map(message => this.renderMessage(message))}\n      </TransitionGroup>\n    </div>\n  );\n\n  public renderMessage(message: Message) {\n    return (\n      <CSSTransition\n        key={message.id}\n        classNames=\"Message\"\n        timeout={{ enter: 200, exit: 200 }}\n      >\n        <div className={classNames(\"Message\", \"Message-\" + message.type)}>\n          {message.text}\n        </div>\n      </CSSTransition>\n    );\n  }\n}\n\nexport default Messages;\n","import { connect } from \"react-redux\";\n//\nimport { RootState } from \"../../reducers\";\nimport Messages from \"../../components/App/Messages\";\n\n// ------------------------------------------------------------------\n\nexport type MappedProps = ReturnType<typeof mapStateToProps>;\n\nconst mapStateToProps = (state: RootState) => ({\n  messages: state.messages.sort((m1, m2) => m1.stamp - m2.stamp)\n});\n\nexport default connect(mapStateToProps)(Messages);\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/App\";\nimport Room from \"../../containers/Room\";\nimport Splash from \"../../containers/Splash\";\nimport Modals from \"../../containers/Modals\";\nimport Messages from \"../../containers/App/Messages\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass App extends Component<MappedProps> {\n  public componentDidMount = async () => {\n    this.props.onReconnect();\n  };\n\n  public render = () => {\n    return (\n      <div className=\"App\">\n        <Modals />\n        <Switch>\n          <Route exact={true} path=\"/room/:room_id\" component={Room} />\n          <Route exact={true} path=\"/\" component={Splash} />\n          <Redirect to=\"/\" />\n        </Switch>\n        <Messages />\n      </div>\n    );\n  };\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport App from \"../../components/App\";\nimport { reconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onReconnect: () => dispatch(reconnectUser())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(App);\n","// ------------------------------------------------------------------\n\nlet AUDIO_CONTEXT: AudioContext | null = null;\n\nconst getContext = () => {\n  if (!AUDIO_CONTEXT) {\n    AUDIO_CONTEXT = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n  }\n  return AUDIO_CONTEXT;\n};\n\nconst decodeAudioData = (encodedBuffer: ArrayBuffer): Promise<AudioBuffer> =>\n  new Promise((resolve, reject) =>\n    getContext().decodeAudioData(encodedBuffer, resolve, reject)\n  );\n\n// ------------------------------------------------------------------\n\n// Fix Safari and iOS Audio Context\n(() => {\n  const fixAudioContext = () => {\n    document.removeEventListener(\"click\", fixAudioContext);\n    document.removeEventListener(\"touchstart\", fixAudioContext);\n    console.log(\"Fixing audio context...\");\n    const context = getContext();\n    // Create empty buffer, connect to output, play sound\n    var buffer = context.createBuffer(1, 1, 22050);\n    var source = context.createBufferSource();\n    source.buffer = buffer;\n    source.connect(context.destination);\n    source.start(0);\n  };\n  document.addEventListener(\"click\", fixAudioContext);\n  document.addEventListener(\"touchstart\", fixAudioContext);\n})();\n\n// ------------------------------------------------------------------\n\nexport type PlayerCallbacks = {\n  onStart: () => void;\n  onStop: () => void;\n};\n\nexport const Player = () => {\n  let analyserNode: AnalyserNode | null = null;\n  let gainNode: GainNode | null = null;\n  let node: AudioNode | null = null;\n\n  const getNode = () => {\n    if (!node) {\n      const context = getContext();\n      node = context.destination;\n\n      gainNode = context.createGain();\n      gainNode.gain.value = 1.0;\n      gainNode.connect(node);\n      node = gainNode;\n\n      analyserNode = context.createAnalyser();\n      analyserNode.fftSize = 128;\n      // analyserNode.minDecibels = -90;\n      // analyserNode.maxDecibels = -10;\n      analyserNode.connect(node);\n      node = analyserNode;\n    }\n    return node;\n  };\n\n  let buffer: AudioBuffer | null = null;\n  let bufferUrl: string = \"\";\n\n  let sourceNode: AudioBufferSourceNode | null = null;\n  let sourceNodeStartTime = 0;\n  let playCount = 0;\n\n  const isPlaying = () => playCount > 0;\n\n  // Percentage [0, 1]\n  const getPosition = () => {\n    if (buffer && sourceNode) {\n      return (\n        (getContext().currentTime - sourceNodeStartTime) / buffer?.duration\n      );\n    }\n    return 0;\n  };\n\n  const loadAudioBuffer = (url: string): Promise<AudioBuffer> =>\n    new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.open(\"GET\", url, true);\n      req.responseType = \"arraybuffer\";\n      req.addEventListener(\n        \"error\",\n        () => reject(new Error(\"Audio buffer loading failed\")),\n        false\n      );\n      req.addEventListener(\n        \"load\",\n        async () => {\n          try {\n            resolve(await decodeAudioData(req.response as ArrayBuffer));\n          } catch (error) {\n            console.log(\"An error occurred while decoding audio data\");\n            reject(error);\n          }\n        },\n        false\n      );\n      req.send();\n    });\n\n  const play = async (url: string, offset: number) => {\n    if (bufferUrl !== url) {\n      console.log(\"Loading audio...\", { url });\n      buffer = await loadAudioBuffer(url);\n      bufferUrl = url;\n    }\n    stop();\n    playCount++;\n    console.log(\"Starting audio...\");\n    sourceNode = getContext().createBufferSource();\n    sourceNode.buffer = buffer;\n    sourceNode.loop = false;\n    sourceNode.loopStart = 0;\n    sourceNode.loopEnd = 0;\n    sourceNode.onended = () => {\n      console.log(\"Audio terminated...\");\n      playCount--;\n    };\n    sourceNode.playbackRate.value = 1.0;\n    sourceNode.connect(getNode());\n    sourceNode.start(0, offset); // A new BufferSource must be created for each start\n    sourceNodeStartTime = getContext().currentTime;\n  };\n\n  const stop = () => {\n    if (null !== sourceNode) {\n      console.log(\"Stopping audio...\");\n      sourceNode.stop();\n      sourceNode = null;\n      sourceNodeStartTime = 0;\n    }\n  };\n\n  return {\n    analyserNode,\n    gainNode,\n    getPosition,\n    isPlaying,\n    play,\n    stop\n  };\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n//\nimport { rootReducer } from \"./reducers\";\nimport App from \"./containers/App\";\nimport { DEFAULT_API } from \"./utils/api\";\nimport { Player } from \"./utils/player\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\" ? composeWithDevTools({}) : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(\n      thunk.withExtraArgument({\n        api: DEFAULT_API,\n        queuePlayer: Player(),\n        previewPlayer: Player()\n      })\n    )\n  )\n);\n\n// ------------------------------------------------------------------\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Route path=\"/\" component={App} />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}