{"version":3,"sources":["reducers/containers.ts","reducers/messages.ts","reducers/modals.ts","reducers/player.ts","reducers/queue.ts","reducers/rooms.ts","reducers/tracks.ts","reducers/users.ts","utils/users.ts","reducers/index.ts","components/Common/Icon.tsx","components/Common/IconButton.tsx","utils/clipboard.ts","components/Room/Head.tsx","selectors/rooms.ts","actions/index.ts","actions/modals.ts","actions/messages.ts","utils/messages.ts","config/firebase.ts","utils/index.ts","utils/firebase.ts","actions/queue.ts","actions/tracks.ts","actions/containers.ts","utils/history.ts","actions/rooms.ts","containers/Room/Head.ts","components/Room/Cover.tsx","components/Room/Medias.tsx","components/Room/Queue.tsx","selectors/tracks.ts","utils/colorpicker.ts","actions/player.ts","containers/Room/Queue.ts","components/Room/Progress.tsx","containers/Room/Progress.ts","components/Room/Controls.tsx","containers/Room/Controls.ts","components/Room/index.tsx","containers/Room/index.ts","components/Splash/index.tsx","selectors/users.ts","actions/users.ts","containers/Splash/index.ts","components/Modals/Modal.tsx","containers/Modals/Modal.ts","components/Modals/FormModal.tsx","components/Users/ConnectUserModal.tsx","containers/Users/ConnectUserModal.ts","components/Modals/SecretField.tsx","containers/Modals/SecretField.ts","components/Room/CreateRoomModal.tsx","containers/Room/CreateRoomModal.ts","components/Users/CreateUserModal.tsx","containers/Users/CreateUserModal.ts","utils/api.ts","components/Room/SearchResultCategory.tsx","components/Room/SearchModal.tsx","containers/Room/SearchModal.ts","components/Room/UnlockRoomModal.tsx","containers/Room/UnlockRoomModal.ts","components/Modals/index.tsx","containers/Modals/index.ts","components/App/Messages.tsx","containers/App/Messages.ts","components/App/index.tsx","containers/App/index.ts","utils/player.ts","index.tsx"],"names":["INITIAL_STATE","fetching","error","containers","initialState","stack","playing","position","trackIds","room","room_access","id","secret","room_color","fg","r","g","b","bg","room_info","tracks","user","user_access","res","s","localStorage","getItem","d","JSON","parse","atob","i","console","log","err","loadUserAccess","user_info","rootReducer","combineReducers","state","action","type","payload","copy","container","messages","filter","other","modals","pop","player","queue","rooms","info","track","users","setItem","btoa","stringify","saveUserAccess","Icon","Component","render","this","props","className","color","icon","size","title","classNames","name","style","IconButton","disabled","displayTitle","kind","onClick","aria-label","clickable","CancelButton","copyToClipboard","value","a","Promise","resolve","elem","document","createElement","setAttribute","left","body","appendChild","selection","getSelection","selected","rangeCount","getRangeAt","select","execCommand","removeAllRanges","addRange","removeChild","Head","locked","onLock","onUnlock","onCopyLink","location","href","onMessage","extractRoom","isRoomLocked","createAction","openModal","prereq","popModal","MESSAGE_ID_GENERATOR","displayMessage","text","duration","dispatch","stamp","Date","getTime","setTimeout","removeMessage","displayError","response","data","message","config","databaseURL","process","firebaseApp","firebase","firebaseConfig","firebaseDatabase","MEMBERS","ref","ROOMS","USERS","FirebaseRoom","_room","child","_info","_members","_secret","_values","queue_position","timestamp","getInfo","isLocked","setSecret","newSecret","wait","reject","once","snapshot","newValues","val","Error","subscribeInfo","cb","on","subscribeMembers","cbAdded","cbRemoved","unsubscribeInfo","off","unsubscribeMembers","update","set","ServerValue","TIMESTAMP","FirebaseUser","_user","_membership","online","room_id","status","installDisconnect","onDisconnect","cancel","enter","remove","exit","setQueue","clearQueue","getState","lockRoom","appendInQueue","length","forEach","index","removeFromQueue","oldPosition","splice","setQueuePosition","moveBackward","moveForward","setTracks","onlyUnique","self","indexOf","loadTracks","enqueue","play","api","previewPlayer","oldTracks","newTrackIds","trackId","newTracks","all","map","loadTrack","find","toString","preview","loadContainer","containerType","containerId","containerTypeId","loadAlbum","loadPlaylist","previewContainer","createHashHistory","setRoom","setRoomAccess","setRoomColor","createRoom","v4","enterRoom","FIREBASE_CB","exitRoom","newRoom","newInfo","Object","entries","sort","track1","track2","Number","history","push","unlockRoom","queueTracks","connect","Cover","playable","image","onPlay","onStop","backgroundImage","Album","actions","album","cover_small","link","target","rel","artist","Playlist","playlist","picture_small","Track","Queue","playingPosition","onRemove","key","extractTracks","CACHE","DEFAULT_COLOR","pickColor","url","jimp","resize","getPixelColor","pixel","setPlayerPosition","PLAYER_TIMER","PLAYER_PLAYING_TRACK","PLAYER_PLAYING_TRACK_INDEX","startPlayer","queuePlayer","setInterval","nextPosition","isPlaying","getPosition","stopPlayer","_","clearInterval","stop","startPreview","stopPreview","_1","_2","Progress","max","Controls","onMoveBackward","onMoveForward","onSearch","onClear","onExit","window","confirm","Room","componentDidMount","onEnter","componentWillUnmount","backgroundColor","withRouter","ownProps","qs","search","substr","match","params","Splash","loggedIn","onCreateRoom","onConnectUser","to","onDisconnectUser","extractUser","setUser","setUserAccess","createUser","connectUser","disconnectUser","newUser","reconnectUser","Modal","children","renderFoot","onClose","onPop","has_prev_modal","onSubmit","hidden","event","preventDefault","FormModal","renderButtons","ConnectUserModal","idRef","createRef","onConnect","htmlFor","placeholder","maxLength","minLength","required","onChange","e","setState","onToggle","onError","trim","current","focus","SecretField","label","display","flexDirection","justifyContent","flexGrow","marginRight","onCopyToClipboard","CreateRoomModal","nameRef","onCreate","CreateUserModal","DEFAULT_API","asyncJsonp","jsonp","call","path","fullpath","query","encodeURIComponent","load","searchAlbums","searchPlaylists","searchTracks","searchAll","albums","playlists","Api","SearchResultCategory","items","slice","item","SearchModal","queryRef","mediaId","mediaType","results","total","renderInputs","renderResults","onSelect","onStartPreview","onStopPreview","UnlockRoomModal","secretRef","Modals","curr_prereq","prev_prereq","addEventListener","onKeyDown","removeEventListener","componentDidUpdate","prevProps","oldPrereq","newPrereq","modal","getModal","in","timeout","unmountOnExit","onClickOverlay","role","onClickWrapper","stopPropagation","onCloseModal","keyCode","Messages","React","renderMessage","m1","m2","App","onReconnect","exact","component","AUDIO_CONTEXT","getContext","AudioContext","webkitAudioContext","decodeAudioData","encodedBuffer","fixAudioContext","context","buffer","createBuffer","source","createBufferSource","destination","start","Player","analyserNode","gainNode","node","getNode","createGain","gain","createAnalyser","fftSize","bufferUrl","sourceNode","sourceNodeStartTime","playCount","loadAudioBuffer","req","XMLHttpRequest","open","responseType","send","offset","loop","loopStart","loopEnd","onended","playbackRate","currentTime","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","withExtraArgument","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c485598e.chunk.js","sourcesContent":["import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { ContainersAction } from \"../actions/containers\";\nimport { Containers } from \"../utils/containers\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  containers: Containers;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  containers: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const containersReducer: Reducer<State, ContainersAction> = (\n  state = INITIAL_STATE,\n  action: ContainersAction\n): State => {\n  switch (action.type) {\n    case \"containers/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"containers/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"containers/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"containers/SET_CONTAINERS\": {\n      const copy = { ...state, containers: { ...state.containers } };\n      for (const container of action.payload) {\n        copy.containers[`${container.type}|${container.id}`] = container;\n      }\n      return copy;\n    }\n    case \"containers/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { MessagesAction } from \"../actions/messages\";\nimport { Message } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type State = Message[];\n\nexport const INITIAL_STATE: State = [];\n\n// ------------------------------------------------------------------\n\nexport const messagesReducer: Reducer<State, MessagesAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"message/ADD\":\n      return [action.payload, ...state];\n    case \"message/REMOVE\":\n      return state.filter(other => other.id !== action.payload);\n    case \"message/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { ModalsAction, ModalPrereq } from \"../actions/modals\";\n\n// ------------------------------------------------------------------\n\nexport type ModalsState = {\n  stack: ModalPrereq[];\n};\n\n// ------------------------------------------------------------------\n\nexport const initialState: ModalsState = {\n  stack: []\n};\n\n// ------------------------------------------------------------------\n\nexport const modalsReducer: Reducer<ModalsState, ModalsAction> = (\n  state = initialState,\n  action\n): ModalsState => {\n  switch (action.type) {\n    case \"modals/OPEN\":\n      return {\n        ...state,\n        stack: [action.payload]\n      };\n    case \"modals/CLOSE\":\n      return {\n        ...state,\n        stack: []\n      };\n    case \"modals/PUSH\":\n      return {\n        ...state,\n        stack: [...state.stack, action.payload]\n      };\n    case \"modals/POP\":\n      const copy = [...state.stack];\n      copy.pop();\n      return {\n        ...state,\n        stack: copy\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { PlayerAction } from \"../actions/player\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  playing: boolean;\n  position: number;\n};\n\nexport const INITIAL_STATE: State = {\n  playing: false,\n  position: 0\n};\n\n// ------------------------------------------------------------------\n\nexport const playerReducer: Reducer<State, PlayerAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"player/START\":\n      return { ...state, playing: true };\n    case \"player/STOP\":\n      return { ...state, playing: false };\n    case \"player/SET_POSITION\":\n      return { ...state, position: action.payload };\n    case \"player/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { QueueAction } from \"../actions/queue\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  position: number;\n  trackIds: string[];\n};\n\nexport const INITIAL_STATE: State = {\n  position: -1,\n  trackIds: []\n};\n\n// ------------------------------------------------------------------\n\nexport const queueReducer: Reducer<State, QueueAction> = (\n  state = INITIAL_STATE,\n  action\n): State => {\n  switch (action.type) {\n    case \"queue/SET\":\n      return {\n        ...state,\n        position: action.payload.position,\n        trackIds: action.payload.trackIds\n      };\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { RoomsAction } from \"../actions/rooms\";\nimport { RoomAccess, RoomInfo } from \"../utils/rooms\";\nimport { CombinedColor } from \"../utils/colorpicker\";\nimport { FirebaseRoom } from \"../utils/firebase\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  room: ReturnType<typeof FirebaseRoom> | null;\n  room_access: RoomAccess;\n  room_color: CombinedColor;\n  room_info: RoomInfo | null;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  room: null,\n  room_access: { id: \"\", secret: \"\" },\n  room_color: { fg: { r: 0, g: 0, b: 0 }, bg: { r: 255, g: 255, b: 255 } },\n  room_info: null\n};\n\n// ------------------------------------------------------------------\n\nexport const roomsReducer: Reducer<State, RoomsAction> = (\n  state = INITIAL_STATE,\n  action: RoomsAction\n): State => {\n  switch (action.type) {\n    case \"rooms/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"rooms/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"rooms/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"rooms/SET_ROOM\": {\n      return {\n        ...state,\n        room: action.payload.room,\n        room_info: action.payload.info\n      };\n    }\n    case \"rooms/SET_ROOM_ACCESS\": {\n      return {\n        ...state,\n        room_access: action.payload\n      };\n    }\n    case \"rooms/SET_ROOM_COLOR\": {\n      return {\n        ...state,\n        room_color: action.payload\n      };\n    }\n    case \"rooms/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { TracksAction } from \"../actions/tracks\";\nimport { Tracks } from \"../utils/tracks\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  tracks: Tracks;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  tracks: {}\n};\n\n// ------------------------------------------------------------------\n\nexport const tracksReducer: Reducer<State, TracksAction> = (\n  state = INITIAL_STATE,\n  action: TracksAction\n): State => {\n  switch (action.type) {\n    case \"tracks/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"tracks/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"tracks/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"tracks/SET_TRACKS\": {\n      const copy = { ...state, tracks: { ...state.tracks } };\n      for (const track of action.payload) {\n        copy.tracks[track.id] = track;\n      }\n      return copy;\n    }\n    case \"tracks/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { UsersAction } from \"../actions/users\";\nimport {\n  saveUserAccess,\n  loadUserAccess,\n  UserAccess,\n  UserInfo\n} from \"../utils/users\";\nimport { FirebaseUser } from \"../utils/firebase\";\n\n// ------------------------------------------------------------------\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  user: ReturnType<typeof FirebaseUser> | null;\n  user_access: UserAccess;\n  user_info: UserInfo | null;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  user: null,\n  user_access: loadUserAccess(),\n  user_info: null\n};\n\n// ------------------------------------------------------------------\n\nexport const usersReducer: Reducer<State, UsersAction> = (\n  state = INITIAL_STATE,\n  action: UsersAction\n): State => {\n  switch (action.type) {\n    case \"users/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"users/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null\n      };\n    }\n    case \"users/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"users/SET_USER\": {\n      return {\n        ...state,\n        user: action.payload.user,\n        user_info: action.payload.info\n      };\n    }\n    case \"users/SET_USER_ACCESS\": {\n      saveUserAccess(action.payload);\n      return {\n        ...state,\n        user_access: { ...action.payload }\n      };\n    }\n    case \"users/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","export type UserInfo = {\n  name: string;\n  online: boolean;\n  room_id: string;\n  status: string;\n  timestamp: number;\n};\n\nexport type UserAccess = {\n  id: string;\n  secret: string;\n};\n\n// ------------------------------------------------------------------\n\nexport const loadUserAccess = (): UserAccess => {\n  const res: UserAccess = {\n    id: \"\",\n    secret: \"\"\n  };\n  const s = localStorage.getItem(\"U\");\n  if (s) {\n    try {\n      const d = JSON.parse(atob(s));\n      if (typeof d.i === \"string\" && typeof d.s === \"string\") {\n        res.id = d.i;\n        res.secret = d.s;\n        console.log(\"Loaded user access: \", res);\n      }\n    } catch (err) {}\n  }\n  return res;\n};\n\nexport const saveUserAccess = ({ id, secret }: UserAccess) => {\n  localStorage.setItem(\n    \"U\",\n    btoa(\n      JSON.stringify({\n        i: id,\n        s: secret\n      })\n    )\n  );\n};\n","import { combineReducers } from \"redux\";\nimport { containersReducer as containers } from \"./containers\";\nimport { messagesReducer as messages } from \"./messages\";\nimport { modalsReducer as modals } from \"./modals\";\nimport { playerReducer as player } from \"./player\";\nimport { queueReducer as queue } from \"./queue\";\nimport { roomsReducer as rooms } from \"./rooms\";\nimport { tracksReducer as tracks } from \"./tracks\";\nimport { usersReducer as users } from \"./users\";\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const rootReducer = combineReducers({\n  containers,\n  messages,\n  modals,\n  player,\n  queue,\n  rooms,\n  tracks,\n  users\n});\n","import React, { Component } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport classNames from \"classnames\";\n//\nimport \"./Icon.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  icon: string;\n  size?: \"S\" | \"M\" | \"L\";\n  title?: string;\n};\n\nclass Icon extends Component<Props> {\n  public render = () => {\n    const { className, color, icon, size = \"M\", title } = this.props;\n    return (\n      <FontAwesome\n        className={classNames(\"Icon\", className, size)}\n        name={icon}\n        style={{ color }}\n        title={title}\n      />\n    );\n  };\n}\n\nexport default Icon;\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"./Icon\";\nimport \"./IconButton.scss\";\n\n// ------------------------------------------------------------------\n\ntype ButtonType = \"button\" | \"submit\";\n\nexport type Props = {\n  className?: string;\n  color?: string;\n  disabled?: boolean;\n  displayTitle?: boolean;\n  icon: string;\n  kind?: \"default\" | \"primary\" | \"danger\" | \"special\";\n  onClick?: () => void;\n  size?: \"S\" | \"M\" | \"L\";\n  title: string;\n  type?: ButtonType;\n};\n\nclass IconButton extends Component<Props> {\n  public render = () => {\n    const {\n      className,\n      color,\n      disabled = false,\n      displayTitle = false,\n      icon,\n      kind = \"default\",\n      onClick,\n      size,\n      title,\n      type = \"button\"\n    } = this.props;\n    return (\n      <button\n        type={type}\n        aria-label={title}\n        className={classNames(\"IconButton\", className, kind, size, {\n          clickable: !disabled && (!!onClick || type === \"submit\")\n        })}\n        onClick={disabled ? void 0 : onClick}\n        title={title}\n      >\n        <Icon color={color} icon={icon} size={size} />\n        {displayTitle && (\n          <div className={classNames(\"IconButtonTitle\", size)}>{title}</div>\n        )}\n      </button>\n    );\n  };\n}\n\nexport const CancelButton = ({ onClick }: { onClick: () => void }) => (\n  <IconButton onClick={onClick} title=\"Cancel\" kind=\"default\" icon=\"ban\" />\n);\n\nexport default IconButton;\n","// https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\nexport const copyToClipboard = async (value: string): Promise<void> =>\n  await new Promise(resolve => {\n    const elem = document.createElement(\"textarea\");\n    elem.value = value;\n    elem.setAttribute(\"readonly\", \"\");\n    elem.style.position = \"absolute\";\n    elem.style.left = \"-9999px\";\n\n    document.body.appendChild(elem);\n    const selection = document.getSelection();\n    if (selection !== null) {\n      const selected =\n        selection.rangeCount > 0 ? selection.getRangeAt(0) : false;\n      elem.select();\n      document.execCommand(\"copy\");\n      if (selected !== false) {\n        selection.removeAllRanges();\n        selection.addRange(selected);\n      }\n    }\n    document.body.removeChild(elem);\n    resolve();\n  });\n","import React, { Component } from \"react\";\n//\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Room/Head\";\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport \"./Head.scss\";\n\n// ------------------------------------------------------------------\n\nclass Head extends Component<MappedProps> {\n  public render = () => {\n    const { locked, room, onLock, onUnlock } = this.props;\n    return (\n      <div className=\"Head\">\n        <div className=\"RoomStatus\">\n          {locked ? (\n            <IconButton\n              icon=\"lock\"\n              onClick={onUnlock}\n              size=\"M\"\n              title=\"Locked (click to unlock)\"\n            />\n          ) : (\n            <IconButton\n              icon=\"unlock\"\n              onClick={onLock}\n              size=\"M\"\n              title=\"Unlocked (click to lock)\"\n            />\n          )}\n        </div>\n        <div className=\"RoomName\">{room ? room.name : \"\"}</div>\n        <div className=\"RoomLink\">\n          <IconButton\n            icon=\"link\"\n            onClick={this.onCopyLink}\n            size=\"M\"\n            title=\"Copy Room Link to Clipboard\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyLink = async () => {\n    await copyToClipboard(document.location.href);\n    this.props.onMessage(\"Room link has been copied to clipboard\");\n  };\n}\n\nexport default Head;\n","import { RootState } from \"../reducers\";\n\nexport const extractRoom = (state: RootState) => state.rooms.room_info;\n\nexport const isRoomLocked = (state: RootState) =>\n  !state.rooms.room_access.secret;\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"../reducers\";\nimport { Player } from \"../utils/player\";\nimport { Api } from \"../utils/api\";\n\n// ------------------------------------------------------------------\n\nexport type Action<T extends string> = {\n  type: T;\n};\n\nexport type ActionWithPayload<T extends string, P> = {\n  type: T;\n  payload: P;\n};\n\nexport type AsyncAction = ThunkAction<\n  void,\n  RootState,\n  {\n    api: ReturnType<typeof Api>;\n    previewPlayer: ReturnType<typeof Player>;\n    queuePlayer: ReturnType<typeof Player>;\n  },\n  AnyAction\n>;\n\nexport function createAction<T extends string>(type: T): Action<T>;\n\nexport function createAction<T extends string, P>(\n  type: T,\n  payload: P\n): ActionWithPayload<T, P>;\n\nexport function createAction<T extends string, P>(type: T, payload?: P) {\n  return payload === void 0 ? { type } : { type, payload };\n}\n","import { createAction } from \".\";\n\n// ------------------------------------------------------------------\n\nexport type ModalPrereqT<T extends string, P> = {\n  type: T;\n  props: P;\n};\n\nexport type ModalPrereq =\n  | ModalPrereqT<\"ConnectUser\", null>\n  | ModalPrereqT<\"CreateRoom\", null>\n  | ModalPrereqT<\"CreateUser\", null>\n  | ModalPrereqT<\"Search\", null>\n  | ModalPrereqT<\"UnlockRoom\", null>;\n\n// ------------------------------------------------------------------\n\nexport type ModalsAction =\n  | ReturnType<typeof closeModal>\n  | ReturnType<typeof openModal>\n  | ReturnType<typeof popModal>\n  | ReturnType<typeof pushModal>;\n\n// ------------------------------------------------------------------\n\nexport const openModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/OPEN\", prereq);\n\nexport const closeModal = () => createAction(\"modals/CLOSE\");\n\n// ------------------------------------------------------------------\n\nexport const pushModal = (prereq: ModalPrereq) =>\n  createAction(\"modals/PUSH\", prereq);\n\nexport const popModal = () => createAction(\"modals/POP\");\n","import { createAction, AsyncAction } from \".\";\nimport { Message, MessageType, extractErrorMessage } from \"../utils/messages\";\n\n// ------------------------------------------------------------------\n\nexport type MessagesAction =\n  | ReturnType<typeof addMessage>\n  | ReturnType<typeof clearMessages>\n  | ReturnType<typeof removeMessage>;\n\nconst addMessage = (message: Message) => createAction(\"message/ADD\", message);\n\nconst removeMessage = (id: number) => createAction(\"message/REMOVE\", id);\n\nconst clearMessages = () => createAction(\"message/RESET\");\n\n// ------------------------------------------------------------------\n\nlet MESSAGE_ID_GENERATOR: number = 0;\n\nexport const displayMessage = (\n  type: MessageType,\n  text: string,\n  duration: number = 5000\n): AsyncAction => (dispatch): any => {\n  const id = MESSAGE_ID_GENERATOR++;\n  dispatch(addMessage({ id, stamp: new Date().getTime(), text, type }));\n  setTimeout(() => dispatch(removeMessage(id)), duration);\n};\n\nexport const displayError = (text: string, error?: any): AsyncAction => (\n  dispatch\n): any => {\n  dispatch(\n    displayMessage(\n      \"error\",\n      error ? `${text}: ${extractErrorMessage(error)}` : text,\n      3000\n    )\n  );\n};\n\nexport const displayInfo = (text: string) => displayMessage(\"info\", text, 3000);\n","export type MessageType = \"error\" | \"info\";\n\nexport type Message = {\n  id: number;\n  stamp: number;\n  text: string;\n  type: MessageType;\n};\n\nexport const extractErrorMessage = (err: any) =>\n  err.response && err.response.data && err.response.data.message\n    ? err.response.data.message\n    : err.message;\n","const config = {\n  databaseURL: process.env.REACT_APP_FIREBASE_URL\n};\n\nconsole.log(config);\n\nexport default config;\n","export const sleep = (delay: number) =>\n  new Promise(resolve => setTimeout(resolve, delay));\n","import * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n//\nimport firebaseConfig from \"../config/firebase\";\nimport { RoomInfo } from \"./rooms\";\nimport { UserInfo } from \"./users\";\nimport { sleep } from \".\";\n\n// ------------------------------------------------------------------\n\ntype FirebaseCB = (eventType: firebase.database.DataSnapshot) => void;\n\n// ------------------------------------------------------------------\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst firebaseDatabase = firebase.database(firebaseApp);\n\n// ------------------------------------------------------------------\n\nconst MEMBERS = firebaseDatabase.ref(\"members\");\nconst ROOMS = firebaseDatabase.ref(\"rooms\");\nconst USERS = firebaseDatabase.ref(\"users\");\n\n// ------------------------------------------------------------------\n\nexport const FirebaseRoom = (id: string, secret?: string) => {\n  const _room = ROOMS.child(id);\n  const _info = _room.child(\"info\");\n  const _members = MEMBERS.child(id);\n  let _secret = secret || \"\";\n  console.log(\"INIT SECRET\", _secret);\n  let _values: RoomInfo = {\n    name: \"dummy\",\n    queue: {},\n    queue_position: -1,\n    timestamp: 0\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    console.log(\"SETTING SECRET\", newSecret);\n    _secret = newSecret;\n  };\n\n  const wait = async (): Promise<RoomInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", snapshot => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"Room is invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const subscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.on(\"child_added\", cbAdded);\n    _members.on(\"child_removed\", cbRemoved);\n  };\n\n  const unsubscribeMembers = (cbAdded: FirebaseCB, cbRemoved: FirebaseCB) => {\n    _members.off(\"child_added\", cbAdded);\n    _members.off(\"child_removed\", cbRemoved);\n  };\n\n  const update = async ({\n    name,\n    queue,\n    queue_position\n  }: Partial<Pick<RoomInfo, \"name\" | \"queue\" | \"queue_position\">>) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (queue !== void 0) {\n      _values.queue = queue;\n    }\n    if (queue_position !== void 0) {\n      _values.queue_position = queue_position;\n    }\n    await _room.set({\n      info: {\n        ..._values,\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      },\n      secret: _secret\n    });\n  };\n\n  return {\n    getInfo,\n    id,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    subscribeMembers,\n    unsubscribeInfo,\n    unsubscribeMembers,\n    update\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const FirebaseUser = (id: string, secret?: string) => {\n  const _user = USERS.child(id);\n  const _info = _user.child(\"info\");\n  let _membership: firebase.database.Reference | null = null;\n  let _secret = secret || \"\";\n  let _values = {\n    name: \"dummy\",\n    online: false,\n    room_id: \"\",\n    status: \"\",\n    timestamp: 0\n  };\n\n  const getInfo = () => _values;\n\n  const isLocked = () => !_secret;\n\n  const setSecret = (newSecret: string) => {\n    _secret = newSecret;\n  };\n\n  const wait = async (): Promise<UserInfo> =>\n    new Promise((resolve, reject) => {\n      _info.once(\"value\", snapshot => {\n        const newValues = snapshot.val();\n        if (newValues) {\n          _values = newValues;\n          resolve(_values);\n        } else {\n          reject(new Error(\"User is invalid\"));\n        }\n      });\n    });\n\n  const subscribeInfo = (cb: FirebaseCB) => {\n    _info.on(\"value\", cb);\n  };\n\n  const unsubscribeInfo = (cb: FirebaseCB) => {\n    _info.off(\"value\", cb);\n  };\n\n  const update = async ({\n    name,\n    room_id\n  }: Partial<Pick<UserInfo, \"name\" | \"room_id\">>) => {\n    if (name !== void 0) {\n      _values.name = name;\n    }\n    if (room_id !== void 0) {\n      _values.room_id = room_id;\n    }\n    await _user.set({\n      info: {\n        ..._values,\n        online: true,\n        status: \"online\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      },\n      secret: _secret\n    });\n    installDisconnect();\n  };\n\n  const installDisconnect = () => {\n    _user.onDisconnect().cancel();\n    _user.onDisconnect().set({\n      info: {\n        ..._values,\n        online: false,\n        room_id: \"\",\n        status: \"disconnected\",\n        timestamp: firebase.database.ServerValue.TIMESTAMP\n      },\n      secret: _secret\n    });\n  };\n\n  const enter = async (room: ReturnType<typeof FirebaseRoom>) => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: room.id\n    });\n    _membership = MEMBERS.child(room.id).child(id);\n    _membership.onDisconnect().remove();\n    await _membership.set({\n      timestamp: firebase.database.ServerValue.TIMESTAMP\n    });\n  };\n\n  const exit = async () => {\n    if (_membership) {\n      await _membership.remove();\n      _membership = null;\n    }\n    await update({\n      room_id: \"\"\n    });\n  };\n\n  return {\n    id,\n    enter,\n    exit,\n    isLocked,\n    setSecret,\n    wait,\n    subscribeInfo,\n    unsubscribeInfo,\n    update,\n    getInfo\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const FirebaseParty = (\n  id: string,\n  room: ReturnType<typeof FirebaseRoom>\n) => {\n  const _members: string[] = [];\n  const _users: { [id: string]: ReturnType<typeof FirebaseUser> } = {};\n  let _info: RoomInfo = {\n    name: \"\",\n    queue: {},\n    queue_position: -1,\n    timestamp: 0\n  };\n\n  const _onAdded = (added: firebase.database.DataSnapshot) => {\n    const userId = added.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index === -1) {\n        _members.push(userId);\n        _users[userId] = FirebaseUser(userId);\n        _log();\n      }\n    }\n  };\n\n  const _onRemoved = (removed: firebase.database.DataSnapshot) => {\n    const userId = removed.key;\n    if (userId) {\n      const index = _members.indexOf(userId);\n      if (index !== -1) {\n        _members.splice(index, 1);\n        delete _users[userId];\n        _log();\n      }\n    }\n  };\n\n  const _onRoomInfo = (snapshot: firebase.database.DataSnapshot) => {\n    const newValues = snapshot.val() as RoomInfo | null;\n    if (newValues) {\n      _info = newValues;\n      _log();\n    }\n  };\n\n  const _log = () => {\n    console.log(\"PARTY\", {\n      _info,\n      _members\n    });\n  };\n\n  const init = () => {\n    room.subscribeInfo(_onRoomInfo);\n    room.subscribeMembers(_onAdded, _onRemoved);\n  };\n\n  const terminate = () => {\n    room.unsubscribeInfo(_onRoomInfo);\n    room.unsubscribeMembers(_onAdded, _onRemoved);\n  };\n\n  return {\n    init,\n    terminate\n  };\n};\n\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n// ------------------------------------------------------------------\n\nexport const testRoom = async () => {\n  const room = FirebaseRoom(\"r1\", \"rs1\");\n  await room.update({ name: \"R1\" });\n  room.subscribeInfo(info => console.log(\"ROOM\", info.val()));\n  room.subscribeMembers(\n    members => console.log(\"ADDED\", members.key),\n    members => console.log(\"REMOVED\", members.key)\n  );\n  await room.update({ name: \"R1\" });\n  await sleep(1000);\n  await room.update({\n    name: \"R1b\",\n    queue: {},\n    queue_position: -1\n  });\n};\n\nexport const testUser = async () => {\n  const user = FirebaseUser(\"u1\", \"us1\");\n  user.subscribeInfo(info => console.log(\"USER\", info.val()));\n  await user.update({ name: \"U1\" });\n  await sleep(1000);\n  await user.update({ name: \"U1b\" });\n};\n\nexport const testParty = async () => {\n  const room1 = FirebaseRoom(\"r1\", \"rs1\");\n  await room1.update({ name: \"R1\" });\n  const room2 = FirebaseRoom(\"r2\", \"rs2\");\n  await room2.update({ name: \"R2\" });\n  const user1 = FirebaseUser(\"u1\", \"us1\");\n  await user1.update({ name: \"U1\" });\n  const user2 = FirebaseUser(\"u2\", \"us2\");\n  await user2.update({ name: \"U2\" });\n\n  await sleep(2000);\n\n  const party1 = FirebaseParty(\"P1\", room1);\n  await party1.init();\n  const party2 = FirebaseParty(\"P2\", room2);\n  await party2.init();\n\n  await sleep(1000);\n  user1.enter(room1);\n  await sleep(1000);\n  user2.enter(room1);\n  await sleep(1000);\n  user1.enter(room2);\n  await sleep(1000);\n  user1.exit();\n  await sleep(1000);\n  user1.enter(room1);\n};\n\nexport const test = () => {\n  // testRoom();\n  // testUser();\n  // testParty();\n};\n","import { createAction, AsyncAction } from \".\";\nimport { RoomQueue } from \"../utils/rooms\";\nimport { displayError } from \"./messages\";\nimport { lockRoom } from \"./rooms\";\n\n// ------------------------------------------------------------------\n\nexport type QueueAction = ReturnType<typeof setQueue>;\n\nexport const setQueue = (trackIds: string[], position: number) =>\n  createAction(\"queue/SET\", { position, trackIds });\n\n// ------------------------------------------------------------------\n\nexport const clearQueue = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: { room }\n  } = getState();\n  if (room && !room.isLocked()) {\n    try {\n      console.log(\"Clearing queue...\");\n      await room.update({ queue: {}, queue_position: -1 });\n    } catch (err) {\n      dispatch(displayError(\"Cannot clear queue\"));\n      dispatch(lockRoom());\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const appendInQueue = (trackIds: string[]): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: { room }\n  } = getState();\n  if (room && !room.isLocked() && trackIds.length > 0) {\n    try {\n      console.log(\"Appending queue...\", { trackIds });\n      const queue: RoomQueue = {};\n      [...getState().queue.trackIds, ...trackIds].forEach((id, index) => {\n        queue[index] = {\n          id,\n          type: \"deezer\"\n        };\n      });\n      await room.update({ queue });\n    } catch (err) {\n      dispatch(displayError(\"Cannot append in queue\"));\n      dispatch(lockRoom());\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const removeFromQueue = (position: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    queue: { position: oldPosition },\n    rooms: { room }\n  } = getState();\n  if (room && !room.isLocked()) {\n    try {\n      console.log(\"Removing from queue...\", { position });\n      const queue: RoomQueue = {};\n      const copy = [...getState().queue.trackIds];\n      copy.splice(position, 1);\n      copy.forEach((id, index) => {\n        queue[index] = {\n          id,\n          type: \"deezer\"\n        };\n      });\n      await room.update({\n        queue,\n        queue_position: position < oldPosition ? oldPosition - 1 : oldPosition\n      });\n    } catch (err) {\n      dispatch(displayError(\"Cannot remove from queue\"));\n      dispatch(lockRoom());\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\nexport const setQueuePosition = (position: number): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: { room }\n  } = getState();\n  if (room && !room.isLocked()) {\n    try {\n      console.log(\"Set queue position...\", { position });\n      await room.update({ queue_position: position });\n    } catch (err) {\n      dispatch(displayError(\"Cannot remove from queue\"));\n      dispatch(lockRoom());\n    }\n  } else {\n    dispatch(displayError(\"Room is locked\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const moveBackward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { position, trackIds }\n  } = getState();\n  if (trackIds.length > 0) {\n    dispatch(\n      setQueuePosition(position > 0 ? position - 1 : trackIds.length - 1)\n    );\n  }\n};\n\nexport const moveForward = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    queue: { position, trackIds }\n  } = getState();\n  if (trackIds.length > 0) {\n    dispatch(setQueuePosition((position + 1) % trackIds.length));\n  }\n};\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { appendInQueue } from \"./queue\";\nimport { ApiTrack } from \"../utils/api\";\n\n// ------------------------------------------------------------------\n\nexport type TracksAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setTracks>;\n\nconst fetching = () => createAction(\"tracks/FETCHING\");\nconst success = () => createAction(\"tracks/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"tracks/ERROR\", error);\nconst reset = () => createAction(\"tracks/RESET\");\nexport const setTracks = (tracks: ApiTrack[]) =>\n  createAction(\"tracks/SET_TRACKS\", tracks);\n\n// ------------------------------------------------------------------\n\nconst onlyUnique = (value: string, index: number, self: string[]) =>\n  self.indexOf(value) === index;\n\nexport const loadTracks = (\n  trackIds: string[],\n  enqueue: boolean,\n  play: boolean\n): AsyncAction => async (dispatch, getState, { api, previewPlayer }) => {\n  if (trackIds.length > 0) {\n    try {\n      const {\n        tracks: { tracks: oldTracks }\n      } = getState();\n      const newTrackIds: string[] = trackIds\n        .filter(trackId => !oldTracks[trackId])\n        .filter(onlyUnique);\n      let newTracks: ApiTrack[] = [];\n      if (newTrackIds.length > 0) {\n        console.log(\"Loading track...\", { trackIds: newTrackIds });\n        newTracks = await Promise.all(\n          newTrackIds.map(trackId => api.loadTrack(trackId))\n        );\n        dispatch(setTracks(newTracks));\n      }\n      if (enqueue) {\n        console.log(\"Enqueuing track...\", { trackIds });\n        dispatch(appendInQueue(trackIds));\n      }\n      if (play) {\n        const trackId = trackIds[0];\n        const track =\n          oldTracks[trackId] ||\n          newTracks.find(track => track.id.toString() === trackId);\n        console.log(\"Previewing track...\", { track, trackId });\n        await previewPlayer.play(track.preview, 0);\n      }\n    } catch (err) {\n      dispatch(displayError(\"Cannot load track\", err));\n    }\n  }\n};\n","import { AxiosError } from \"axios\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { Container, ContainerType } from \"../utils/containers\";\nimport { displayError } from \"./messages\";\nimport { appendInQueue } from \"./queue\";\nimport { loadTracks, setTracks } from \"./tracks\";\n\n// ------------------------------------------------------------------\n\nexport type ContainersAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setContainers>;\n\nconst fetching = () => createAction(\"containers/FETCHING\");\nconst success = () => createAction(\"containers/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"containers/ERROR\", error);\nconst reset = () => createAction(\"containers/RESET\");\nconst setContainers = (containers: Container[]) =>\n  createAction(\"containers/SET_CONTAINERS\", containers);\n\n// ------------------------------------------------------------------\n\nexport const loadContainer = (\n  containerType: ContainerType,\n  containerId: string,\n  enqueue: boolean,\n  play: boolean\n): AsyncAction => async (dispatch, getState, { api }) => {\n  try {\n    const state = getState();\n    const containerTypeId = `${containerType}|${containerId}`;\n    let container = state.containers.containers[containerTypeId];\n    if (!container) {\n      console.log(\"Loading container...\", { containerId, containerType });\n      switch (containerType) {\n        case \"album\":\n          container = await api.loadAlbum(containerId);\n          break;\n        case \"playlist\":\n          container = await api.loadPlaylist(containerId);\n          break;\n      }\n    }\n    if (container) {\n      dispatch(setContainers([container]));\n      if (container.tracks && container.tracks.data.length > 0) {\n        dispatch(setTracks(container.tracks.data));\n        if (enqueue) {\n          console.log(\"Enqueuing container...\");\n          dispatch(\n            appendInQueue(\n              container.tracks.data.map(track => track.id.toString())\n            )\n          );\n        }\n        if (play) {\n          console.log(\"Playing container...\");\n          dispatch(\n            loadTracks([container.tracks.data[0].id.toString()], false, true)\n          );\n        }\n      }\n    }\n  } catch (err) {\n    dispatch(displayError(\"Cannot load container\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const previewContainer = (\n  containerType: ContainerType,\n  containerId: string\n): AsyncAction => async dispatch => {\n  console.log(\"Previewing container...\", { containerType, containerId });\n  dispatch(loadContainer(containerType, containerId, false, true));\n};\n","import { createHashHistory } from \"history\";\n\nexport default createHashHistory();\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { displayError } from \"./messages\";\nimport { RoomInfo } from \"../utils/rooms\";\nimport { FirebaseRoom } from \"../utils/firebase\";\nimport { loadTracks } from \"./tracks\";\nimport { loadContainer } from \"./containers\";\nimport { ContainerType } from \"../utils/containers\";\nimport { CombinedColor } from \"../utils/colorpicker\";\nimport history from \"../utils/history\";\nimport { setQueue } from \"./queue\";\n\n// ------------------------------------------------------------------\n\nexport type RoomsAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setRoom>\n  | ReturnType<typeof setRoomAccess>\n  | ReturnType<typeof setRoomColor>;\n\nconst fetching = () => createAction(\"rooms/FETCHING\");\nconst success = () => createAction(\"rooms/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"rooms/ERROR\", error);\nconst reset = () => createAction(\"rooms/RESET\");\nconst setRoom = (\n  room: ReturnType<typeof FirebaseRoom> | null,\n  info: RoomInfo | null\n) => createAction(\"rooms/SET_ROOM\", { info, room });\nconst setRoomAccess = (id: string, secret: string) =>\n  createAction(\"rooms/SET_ROOM_ACCESS\", { id, secret });\nexport const setRoomColor = (color: CombinedColor) =>\n  createAction(\"rooms/SET_ROOM_COLOR\", color);\n\n// ------------------------------------------------------------------\n\nexport const createRoom = (\n  name: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  try {\n    const id = v4();\n    console.log(\"Creating room...\", { id, secret });\n    await FirebaseRoom(id, secret).update({ name });\n    dispatch(enterRoom(id, secret));\n  } catch (err) {\n    dispatch(displayError(\"Cannot create room\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_CB: any = null;\n\nexport const enterRoom = (id: string, secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: { room }\n  } = getState();\n  if (!room || room.id !== id) {\n    dispatch(exitRoom());\n    try {\n      console.log(\"Entering room...\", { id, secret });\n      const newRoom = FirebaseRoom(id, secret);\n      dispatch(setRoom(newRoom, await newRoom.wait()));\n      dispatch(setRoomAccess(id, secret));\n      FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n        const newInfo = snapshot.val() as RoomInfo;\n        let trackIds: string[] = [];\n        if (newInfo.queue) {\n          trackIds = Object.entries(newInfo.queue)\n            .sort((track1, track2) => Number(track1[0]) - Number(track2[0]))\n            .map(track => track[1].id);\n          dispatch(loadTracks(trackIds, false, false));\n        }\n        dispatch(setQueue(trackIds, newInfo.queue_position));\n        dispatch(setRoom(newRoom, newInfo));\n      };\n      newRoom.subscribeInfo(FIREBASE_CB);\n      history.push(`/room/${id}?key=${secret}`); // TODO: should push only if we're not already in it\n    } catch (err) {\n      dispatch(displayError(\"Cannot join room\", err));\n    }\n  }\n};\n\nexport const exitRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: { room }\n  } = getState();\n  if (room) {\n    console.log(\"Exiting room...\");\n    room.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_CB = null;\n    dispatch(setRoom(null, null));\n    dispatch(setRoomAccess(\"\", \"\"));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const lockRoom = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    rooms: {\n      room,\n      room_access: { id }\n    }\n  } = getState();\n  if (room && room.id === id) {\n    console.log(\"Locking room...\", { id });\n    room.setSecret(\"\");\n    dispatch(setRoomAccess(id, \"\"));\n  }\n};\n\nexport const unlockRoom = (secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    rooms: {\n      room,\n      room_access: { id }\n    }\n  } = getState();\n  if (room && room.id === id) {\n    console.log(\"Unlocking room...\", { id, secret });\n    room.setSecret(secret);\n    dispatch(setRoomAccess(id, secret));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const queueTracks = (\n  containerType: ContainerType,\n  containerId: string,\n  trackId: string\n): AsyncAction => async dispatch => {\n  if (containerId) {\n    dispatch(loadContainer(containerType, containerId, true, false));\n  }\n  if (trackId) {\n    dispatch(loadTracks([trackId], true, false));\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Head from \"../../components/Room/Head\";\nimport { extractRoom, isRoomLocked } from \"../../selectors/rooms\";\nimport { openModal } from \"../../actions/modals\";\nimport { lockRoom } from \"../../actions/rooms\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n  room: extractRoom(state)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onLock: () => dispatch(lockRoom()),\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message)),\n  onUnlock: () => dispatch(openModal({ type: \"UnlockRoom\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Head);\n","import React from \"react\";\nimport classNames from \"classnames\";\n//\nimport Icon from \"../Common/Icon\";\nimport \"./Cover.scss\";\n\nexport const Cover = ({\n  playable,\n  playing,\n  image,\n  onPlay,\n  onStop\n}: {\n  image: string;\n  onPlay: () => void;\n  onStop: () => void;\n  playable: boolean;\n  playing: boolean;\n}) => {\n  if (playable) {\n    return (\n      <div\n        className={classNames(\"Cover\", { playing })}\n        style={{ backgroundImage: `url('${image}')` }}\n        onClick={!playing ? onPlay : onStop}\n      >\n        {!playing ? (\n          <Icon icon=\"play\" title=\"Play\" />\n        ) : (\n          <Icon icon=\"pause\" title=\"Stop\" />\n        )}\n      </div>\n    );\n  } else {\n    return (\n      <div\n        className={classNames(\"Cover\", { playing })}\n        style={{ backgroundImage: `url('${image}')` }}\n      >\n        {playing ? <Icon icon=\"music\" title=\"Playing\" /> : null}\n      </div>\n    );\n  }\n};\n","import React, { ReactNode } from \"react\";\n//\nimport { ApiAlbum, ApiPlaylist, ApiTrack } from \"../../utils/api\";\nimport { Cover } from \"./Cover\";\nimport \"./Medias.scss\";\n\n// ------------------------------------------------------------------\n\nexport const Album = ({\n  actions,\n  album,\n  playable,\n  playing,\n  onPlay,\n  onStop\n}: {\n  actions?: ReactNode;\n  album: ApiAlbum;\n  playable: boolean;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n}) => (\n  <div className=\"Media Album\">\n    {actions}\n    <Cover\n      playable={playable}\n      playing={playing}\n      image={album.cover_small}\n      onPlay={onPlay}\n      onStop={onStop}\n    />\n    <div className=\"Metas\">\n      <div className=\"Meta AlbumTitle\">\n        <a href={album.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {album.title}\n        </a>\n      </div>\n      <div className=\"Meta AlbumArtistName\">\n        by{\" \"}\n        <a href={album.artist.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {album.artist.name}\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\n// ------------------------------------------------------------------\n\nexport const Playlist = ({\n  actions,\n  playlist,\n  playable,\n  playing,\n  onPlay,\n  onStop\n}: {\n  actions?: ReactNode;\n  playlist: ApiPlaylist;\n  playable: boolean;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n}) => (\n  <div className=\"Media Playlist\">\n    {actions}\n    <Cover\n      playable={playable}\n      playing={playing}\n      image={playlist.picture_small}\n      onPlay={onPlay}\n      onStop={onStop}\n    />\n    <div className=\"Metas\">\n      <div className=\"Meta PlaylistTitle\">\n        <a href={playlist.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {playlist.title}\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\n// ------------------------------------------------------------------\n\nexport const Track = ({\n  actions,\n  track,\n  playable,\n  playing,\n  onPlay,\n  onStop\n}: {\n  actions?: ReactNode;\n  track: ApiTrack;\n  playable: boolean;\n  playing: boolean;\n  onPlay: () => void;\n  onStop: () => void;\n}) => (\n  <div className=\"Media Track\">\n    {actions}\n    <Cover\n      playable={playable}\n      playing={playing}\n      image={track.album.cover_small}\n      onPlay={onPlay}\n      onStop={onStop}\n    />\n    <div className=\"Metas\">\n      <div className=\"Meta TrackTitle\">\n        <a href={track.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {track.title}\n        </a>\n      </div>\n      <div className=\"Meta TrackArtistName\">\n        by{\" \"}\n        <a href={track.artist.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {track.artist.name}\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React, { Component } from \"react\";\n//\nimport { MappedProps } from \"../../containers/Room/Queue\";\nimport { Track } from \"./Medias\";\nimport IconButton from \"../Common/IconButton\";\nimport \"./Queue.scss\";\n\n// ------------------------------------------------------------------\n\nclass Queue extends Component<MappedProps> {\n  public render = () => {\n    const {\n      locked,\n      playing,\n      playingPosition,\n      tracks,\n      onPlay,\n      onRemove,\n      onStop\n    } = this.props;\n    return (\n      <div className=\"Queue\">\n        {tracks.map((track, index) => (\n          <div className=\"QueueItem\" key={index}>\n            <Track\n              track={track}\n              playable={!locked}\n              playing={playing && playingPosition === index}\n              onPlay={() => onPlay(index)}\n              onStop={onStop}\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Remove\"\n                    icon=\"trash\"\n                    onClick={() => onRemove(index)}\n                  />\n                ) : null\n              }\n            />\n          </div>\n        ))}\n      </div>\n    );\n  };\n}\n\nexport default Queue;\n","import { RootState } from \"../reducers\";\nimport { ApiTrack } from \"../utils/api\";\n\nexport const extractTracks = (state: RootState, trackIds: string[]) => {\n  const res: Array<ApiTrack> = [];\n  const {\n    tracks: { tracks }\n  } = state;\n  for (const trackId of trackIds) {\n    const track = tracks[trackId];\n    if (!!track) {\n      res.push(track);\n    }\n  }\n  return res;\n};\n","import * as jimp from \"jimp\";\n\n// ------------------------------------------------------------------\n\nexport type Color = {\n  r: number;\n  g: number;\n  b: number;\n};\n\nexport type CombinedColor = {\n  bg: Color;\n  fg: Color;\n};\n\nconst CACHE: { [url: string]: CombinedColor } = {};\n\nconst DEFAULT_COLOR = {\n  bg: { r: 255, g: 255, b: 255 },\n  fg: { r: 0, g: 0, b: 0 }\n};\n\n// ------------------------------------------------------------------\n\n// https://stackoverflow.com/questions/3942878/how-to-decide-font-color-in-white-or-black-depending-on-background-color\nexport const pickColor = async (url: string) => {\n  let res = DEFAULT_COLOR;\n  if (url) {\n    res = CACHE[url];\n    if (!res) {\n      try {\n        const image = await jimp.read(url);\n        const pixel = await image.resize(1, 1).getPixelColor(0, 0);\n        const bg = jimp.intToRGBA(pixel);\n        CACHE[url] = res = {\n          bg,\n          fg:\n            bg.r * 0.299 + bg.g * 0.587 + bg.b * 0.114 > 186\n              ? { r: 0, g: 0, b: 0 }\n              : { r: 255, g: 255, b: 255 }\n        };\n      } catch (err) {\n        console.log(\"An error prevented colorpicking\", err);\n      }\n    }\n  }\n  return res;\n};\n\n/*\nconst backgroundColor = color\n? `rgb(${color.r}, ${color.g}, ${color.b})`\n: void 0;\n<div\nstyle={{\n  backgroundColor\n}}\n>\nx\n</div>\n\ncolors: {\n  [id: string]: {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n  };\n};,\ncolors: {}\nconst color = this.state.colors[album.id];\n\nimport { pickColor } from \"../../utils/colorpicker\";\n\nprivate XXX = async (id: number, url: string) => {\n  if (!this.state.colors[id]) {\n    const color = await pickColor(url);\n    this.setState({\n      colors: { ...this.state.colors, [id]: color }\n    });\n  }\n};\n*/\n","import { AsyncAction, createAction } from \".\";\nimport { setTracks } from \"./tracks\";\nimport { displayError } from \"./messages\";\nimport { setRoomColor } from \"./rooms\";\nimport { pickColor } from \"../utils/colorpicker\";\nimport { setQueuePosition } from \"./queue\";\nimport { ApiTrack } from \"../utils/api\";\n\n// ------------------------------------------------------------------\n\nexport type PlayerAction =\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setPlayerPosition>\n  | ReturnType<typeof start>\n  | ReturnType<typeof stop>;\n\nconst reset = () => createAction(\"player/RESET\");\nconst setPlayerPosition = (position: number) =>\n  createAction(\"player/SET_POSITION\", position);\nconst start = () => createAction(\"player/START\");\nconst stop = () => createAction(\"player/STOP\");\n\n// ------------------------------------------------------------------\n\nlet PLAYER_TIMER: NodeJS.Timeout | null = null;\nlet PLAYER_PLAYING_TRACK: ApiTrack | null = null;\nlet PLAYER_PLAYING_TRACK_INDEX = -1;\n\nexport const startPlayer = (): AsyncAction => async (\n  dispatch,\n  getState,\n  { queuePlayer }\n) => {\n  if (!PLAYER_TIMER) {\n    PLAYER_TIMER = setInterval(async () => {\n      const {\n        queue: { position, trackIds },\n        tracks\n      } = getState();\n      if (trackIds.length > 0) {\n        let nextPosition = PLAYER_PLAYING_TRACK_INDEX;\n        if (\n          PLAYER_PLAYING_TRACK_INDEX !== position ||\n          (position >= 0 &&\n            PLAYER_PLAYING_TRACK !== tracks.tracks[trackIds[position]])\n        ) {\n          // User has clicked an other track or added/removed a track in queue\n          nextPosition = position;\n          console.log(\"Playing clicked...\", { nextPosition });\n        } else if (!queuePlayer.isPlaying()) {\n          // Not playing which means previous track has terminated\n          nextPosition = (position + 1) % trackIds.length;\n          console.log(\"Playing next...\", { nextPosition });\n        }\n\n        if (PLAYER_PLAYING_TRACK_INDEX !== nextPosition) {\n          PLAYER_PLAYING_TRACK_INDEX = nextPosition;\n          PLAYER_PLAYING_TRACK =\n            tracks.tracks[trackIds[PLAYER_PLAYING_TRACK_INDEX]];\n          dispatch(setQueuePosition(PLAYER_PLAYING_TRACK_INDEX));\n          dispatch(\n            setRoomColor(\n              await pickColor(PLAYER_PLAYING_TRACK.album.cover_small)\n            )\n          );\n          await queuePlayer.play(PLAYER_PLAYING_TRACK.preview, 0);\n        }\n\n        dispatch(setPlayerPosition(queuePlayer.getPosition()));\n      } else {\n        // Last track has been removed from queue by user\n        console.log(\"No more tracks in queue...\");\n        dispatch(stopPlayer());\n      }\n    }, 250);\n    dispatch(start());\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPlayer = (): AsyncAction => async (\n  dispatch,\n  _,\n  { queuePlayer }\n) => {\n  if (PLAYER_TIMER) {\n    clearInterval(PLAYER_TIMER);\n    PLAYER_TIMER = null;\n    PLAYER_PLAYING_TRACK = null;\n    PLAYER_PLAYING_TRACK_INDEX = -1;\n\n    queuePlayer.stop();\n    dispatch(stop());\n    dispatch(setPlayerPosition(0));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const startPreview = (trackId: string): AsyncAction => async (\n  dispatch,\n  getState,\n  { api, previewPlayer }\n) => {\n  try {\n    const state = getState();\n    let track = state.tracks.tracks[trackId];\n    if (!track) {\n      console.log(\"Loading track...\", { trackId });\n      track = await api.loadTrack(trackId);\n      dispatch(setTracks([track]));\n    }\n    console.log(\"Start previewing...\");\n    await previewPlayer.play(track.preview, 0);\n  } catch (err) {\n    dispatch(displayError(\"Cannot load track\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nexport const stopPreview = (): AsyncAction => async (\n  _1,\n  _2,\n  { previewPlayer }\n) => {\n  console.log(\"Stop previewing...\");\n  previewPlayer.stop();\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Queue from \"../../components/Room/Queue\";\nimport { extractTracks } from \"../../selectors/tracks\";\nimport { setQueuePosition, removeFromQueue } from \"../../actions/queue\";\nimport { stopPlayer, startPlayer } from \"../../actions/player\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n  playing: state.player.playing,\n  playingPosition: state.queue.position,\n  tracks: extractTracks(state, state.queue.trackIds)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onPlay: (index: number) => {\n    dispatch(startPlayer());\n    dispatch(setQueuePosition(index));\n  },\n  onRemove: (index: number) => dispatch(removeFromQueue(index)),\n  onStop: () => dispatch(stopPlayer())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Queue);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport { MappedProps } from \"../../containers/Room/Progress\";\nimport \"./Progress.scss\";\n\n// ------------------------------------------------------------------\n\nclass Progress extends Component<MappedProps> {\n  public render = () => {\n    const { playing, value } = this.props;\n    return (\n      <div className={classNames(\"Progress\", { playing })}>\n        <progress max={100} value={value * 100} />\n      </div>\n    );\n  };\n}\n\nexport default Progress;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Progress from \"../../components/Room/Progress\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  playing: state.player.playing,\n  value: state.player.position\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Progress);\n","import React, { Component } from \"react\";\n//\nimport { MappedProps } from \"../../containers/Room/Controls\";\nimport IconButton from \"../Common/IconButton\";\nimport history from \"../../utils/history\";\nimport Progress from \"../../containers/Room/Progress\";\nimport \"./Controls.scss\";\n\n// ------------------------------------------------------------------\n\nclass Controls extends Component<MappedProps> {\n  public render = () => {\n    const {\n      onMoveBackward,\n      onMoveForward,\n      onPlay,\n      onSearch,\n      onStop,\n      locked,\n      playable,\n      playing\n    } = this.props;\n    return (\n      <div className=\"Controls\">\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={!playable}\n              icon=\"step-backward\"\n              onClick={onMoveBackward}\n              size=\"M\"\n              title=\"Previous\"\n            />\n          </div>\n          <div className=\"Control\">\n            {!playable || !playing ? (\n              <IconButton\n                disabled={!playable}\n                onClick={onPlay}\n                icon=\"play\"\n                size=\"L\"\n                title=\"Play\"\n              />\n            ) : (\n              <IconButton\n                disabled={!playable}\n                onClick={onStop}\n                icon=\"pause\"\n                title=\"Stop\"\n                size=\"L\"\n              />\n            )}\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              disabled={!playable}\n              icon=\"step-forward\"\n              onClick={onMoveForward}\n              size=\"M\"\n              title=\"Next\"\n            />\n          </div>\n        </div>\n        <Progress />\n        <div className=\"ControlsSet\">\n          <div className=\"Control\">\n            <IconButton\n              disabled={locked}\n              onClick={this.onClear}\n              icon=\"trash\"\n              title=\"Clear Room\"\n            />\n          </div>\n          <div className=\"Control\">\n            <IconButton onClick={onSearch} icon=\"search\" title=\"Search Media\" />\n          </div>\n          <div className=\"Control\">\n            <IconButton\n              onClick={this.onExit}\n              icon=\"sign-out\"\n              title=\"Exit Room\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  onClear = () => {\n    if (window.confirm(\"Are you sure you want to clear Room\")) {\n      this.props.onClear();\n    }\n  };\n\n  onExit = () => {\n    if (window.confirm(\"Are you sure you want to leave the room?\")) {\n      history.push(\"/\");\n    }\n  };\n}\n\nexport default Controls;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Controls from \"../../components/Room/Controls\";\nimport { startPlayer, stopPlayer } from \"../../actions/player\";\nimport { openModal } from \"../../actions/modals\";\nimport { clearQueue, moveBackward, moveForward } from \"../../actions/queue\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state),\n  playable: !isRoomLocked(state) && state.queue.trackIds.length > 0,\n  playing: state.player.playing\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClear: () => {\n    dispatch(clearQueue());\n    dispatch(stopPlayer());\n  },\n  onMoveBackward: () => dispatch(moveBackward()),\n  onMoveForward: () => dispatch(moveForward()),\n  onPlay: () => dispatch(startPlayer()),\n  onSearch: () => dispatch(openModal({ type: \"Search\", props: null })),\n  onStop: () => dispatch(stopPlayer())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Controls);\n","import React, { Component } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/Room\";\nimport Head from \"../../containers/Room/Head\";\nimport Queue from \"../../containers/Room/Queue\";\nimport Controls from \"../../containers/Room/Controls\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nexport type Props = RouteComponentProps<{\n  room_id: string;\n}>;\n\nclass Room extends Component<Props & MappedProps> {\n  public componentDidMount = () => {\n    this.props.onEnter();\n  };\n\n  public componentWillUnmount = () => {\n    this.props.onExit();\n  };\n\n  public render = () => {\n    const {\n      color: { fg, bg }\n    } = this.props;\n    return (\n      <div\n        className=\"Room\"\n        style={{\n          color: `rgb(${fg.r}, ${fg.g}, ${fg.b})`,\n          backgroundColor: `rgb(${bg.r}, ${bg.g}, ${bg.b})`\n        }}\n      >\n        <Head />\n        <Queue />\n        <Controls />\n      </div>\n    );\n  };\n}\n\nexport default withRouter(Room);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport * as qs from \"qs\";\n//\nimport { RootState } from \"../../reducers\";\nimport Room, { Props } from \"../../components/Room\";\nimport { enterRoom, exitRoom } from \"../../actions/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState, ownProps: Props) => ({\n  color: state.rooms.room_color\n});\n\nconst dispatchToProps = (\n  dispatch: ThunkDispatch<RootState, any, any>,\n  ownProps: Props\n) => {\n  const { key } = qs.parse(ownProps.location.search.substr(1)) as {\n    key?: string;\n  };\n  return {\n    onEnter: () =>\n      dispatch(enterRoom(ownProps.match.params.room_id, key || \"\")),\n    onExit: () => dispatch(exitRoom())\n  };\n};\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Room);\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/Splash\";\nimport \"./index.scss\";\nimport IconButton from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\nclass Splash extends Component<MappedProps> {\n  public render = () => {\n    const { user, loggedIn, onCreateRoom, onConnectUser } = this.props;\n    return (\n      <div className=\"Splash\">\n        <div className=\"Top\">\n          <div className=\"Logo\">\n            <Link to=\"/\">Deezer Party</Link>\n          </div>\n          <div className=\"Welcome\">\n            {loggedIn || user\n              ? `Welcome ${user?.name || \"\"}`\n              : \"Please connect to play\"}\n          </div>\n        </div>\n        <div className=\"Middle\">\n          <div className=\"Menu\">\n            {loggedIn ? (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"plus\"\n                  onClick={onCreateRoom}\n                  size=\"L\"\n                  title=\"Create Room\"\n                />\n              </div>\n            ) : (\n              <Fragment>\n                <div className=\"MenuItem\">\n                  <IconButton\n                    displayTitle={true}\n                    onClick={onConnectUser}\n                    icon=\"sign-in\"\n                    size=\"L\"\n                    title=\"Connect\"\n                  />\n                </div>\n              </Fragment>\n            )}\n          </div>\n        </div>\n        <div className=\"Bottom\">\n          <div className=\"Menu\">\n            {loggedIn ? (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"sign-out\"\n                  onClick={this.onDisconnect}\n                  size=\"M\"\n                  title=\"Disconnect\"\n                />\n              </div>\n            ) : (\n              <div className=\"MenuItem\">\n                <IconButton\n                  displayTitle={true}\n                  icon=\"info\"\n                  onClick={() => {}}\n                  size=\"M\"\n                  title=\"CGU\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  onDisconnect = () => {\n    if (window.confirm(\"Are you sure you want to disconnect?\")) {\n      this.props.onDisconnectUser();\n    }\n  };\n}\n\nexport default Splash;\n","import { RootState } from \"../reducers\";\n\nexport const extractUser = (state: RootState) => state.users.user_info;\n","import { AxiosError } from \"axios\";\nimport { v4 } from \"uuid\";\n//\nimport { createAction, AsyncAction } from \".\";\nimport { UserInfo } from \"../utils/users\";\nimport { FirebaseUser } from \"../utils/firebase\";\nimport { displayError } from \"./messages\";\n\n// ------------------------------------------------------------------\n\nexport type UsersAction =\n  | ReturnType<typeof fetching>\n  | ReturnType<typeof success>\n  | ReturnType<typeof error>\n  | ReturnType<typeof reset>\n  | ReturnType<typeof setUser>\n  | ReturnType<typeof setUserAccess>;\n\nconst fetching = () => createAction(\"users/FETCHING\");\nconst success = () => createAction(\"users/FETCHED\");\nconst error = (error: AxiosError) => createAction(\"users/ERROR\", error);\nconst reset = () => createAction(\"users/RESET\");\nconst setUser = (\n  user: ReturnType<typeof FirebaseUser> | null,\n  info: UserInfo | null\n) => createAction(\"users/SET_USER\", { info, user });\nconst setUserAccess = (id: string, secret: string) =>\n  createAction(\"users/SET_USER_ACCESS\", { id, secret });\n\n// ------------------------------------------------------------------\n\nexport const createUser = (\n  name: string,\n  secret: string\n): AsyncAction => async dispatch => {\n  try {\n    console.log(\"Creating user...\");\n    const id = v4();\n    await FirebaseUser(id, secret).update({ name });\n    dispatch(connectUser(id, secret));\n  } catch (err) {\n    dispatch(displayError(\"Cannot create user\", err));\n  }\n};\n\n// ------------------------------------------------------------------\n\nlet FIREBASE_CB: any = null;\n\nexport const connectUser = (id: string, secret: string): AsyncAction => async (\n  dispatch,\n  getState\n) => {\n  const {\n    users: { user }\n  } = getState();\n  if (!user || user.id !== id) {\n    dispatch(disconnectUser());\n    try {\n      console.log(\"Connection user...\", { id, secret });\n      const newUser = FirebaseUser(id);\n      dispatch(setUser(newUser, await newUser.wait()));\n      dispatch(setUserAccess(id, secret));\n      FIREBASE_CB = (snapshot: firebase.database.DataSnapshot) => {\n        const newInfo = snapshot.val() as UserInfo;\n        dispatch(setUser(newUser, newInfo));\n      };\n      newUser.subscribeInfo(FIREBASE_CB);\n    } catch (err) {\n      dispatch(displayError(\"Cannot connect user\", err));\n      dispatch(setUserAccess(\"\", \"\"));\n    }\n  }\n};\n\nexport const disconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    users: { user }\n  } = getState();\n  if (user) {\n    console.log(\"Disconnecting user...\");\n    user.unsubscribeInfo(FIREBASE_CB);\n    FIREBASE_CB = null;\n    setUser(null, null);\n    dispatch(setUserAccess(\"\", \"\"));\n  }\n};\n\nexport const reconnectUser = (): AsyncAction => async (dispatch, getState) => {\n  const {\n    users: {\n      user_access: { id, secret }\n    }\n  } = getState();\n  if (id && secret) {\n    console.log(\"Reconnecting user...\", { id, secret });\n    dispatch(connectUser(id, secret));\n  }\n};\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport Splash from \"../../components/Splash\";\nimport { extractUser } from \"../../selectors/users\";\nimport { openModal } from \"../../actions/modals\";\nimport { disconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  loggedIn: !!state.users.user_access.id,\n  user: extractUser(state)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onCreateRoom: () => dispatch(openModal({ type: \"CreateRoom\", props: null })),\n  onConnectUser: () => dispatch(openModal({ type: \"CreateUser\", props: null })),\n  onDisconnectUser: () => dispatch(disconnectUser())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Splash);\n","import React, { Component, FormEvent, ReactNode } from \"react\";\nimport classNames from \"classnames\";\n//\nimport { MappedProps } from \"../../containers/Modals/Modal\";\nimport IconButton from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n  className?: string;\n  title: string;\n  renderFoot?: () => React.ReactNode;\n  onSubmit?: () => void;\n};\n\nclass Modal extends Component<Props & MappedProps> {\n  public render = () => {\n    const {\n      children,\n      className,\n      title,\n      renderFoot,\n      onClose,\n      onPop,\n      has_prev_modal\n    } = this.props;\n    return (\n      <form className={classNames(\"Modal\", className)} onSubmit={this.onSubmit}>\n        <div className=\"ModalHead\">\n          <IconButton\n            kind=\"special\"\n            className={classNames(\"ModalHeadBack\", {\n              hidden: !has_prev_modal\n            })}\n            icon=\"angle-left\"\n            title=\"Back\"\n            onClick={onPop}\n          />\n          <div className=\"ModalTitle\">{title}</div>\n          <IconButton\n            kind=\"special\"\n            className=\"ModalHeadClose\"\n            onClick={onClose}\n            title=\"Cancel\"\n            icon=\"times\"\n          />\n        </div>\n        <div className=\"ModalBody\">{children}</div>\n        <div className=\"ModalFoot\">{renderFoot && renderFoot()}</div>\n      </form>\n    );\n  };\n\n  private onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  };\n}\n\nexport default Modal;\n","import { connect } from \"react-redux\";\n//\nimport Modal from \"../../components/Modals/Modal\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  has_prev_modal: state.modals.stack.length > 1\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onClose: () => dispatch(popModal()),\n  onPop: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//\nimport Modal from \"../../containers/Modals/Modal\";\nimport \"./FormModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  className?: string;\n  onSubmit: () => void;\n  renderButtons: () => React.ReactNode;\n  title: string;\n};\n\nclass FormModal extends Component<Props> {\n  public render = () => {\n    const { children, className, renderButtons, title, onSubmit } = this.props;\n    return (\n      <Modal\n        className={classNames(\"FormModal\", className)}\n        title={title}\n        renderFoot={renderButtons}\n        onSubmit={onSubmit}\n      >\n        {children}\n      </Modal>\n    );\n  };\n}\n\nexport default FormModal;\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/ConnectUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  id: string;\n  secret: string;\n};\n\nclass ConnectUserModal extends Component<MappedProps, State> {\n  private idRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    id: \"\",\n    secret: \"\"\n  };\n\n  public componentDidMount() {\n    if (this.idRef.current) {\n      this.idRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { id, secret } = this.state;\n    return (\n      <FormModal\n        title=\"Connect User\"\n        onSubmit={this.onConnect}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-id\">User ID</label>\n          <input\n            id=\"modal-id\"\n            type=\"text\"\n            placeholder=\"User ID...\"\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={id}\n            ref={this.idRef}\n            onChange={e => {\n              this.setState({ id: e.target.value });\n            }}\n          />\n        </div>\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">User Secret</label>\n          <input\n            id=\"modal-secret\"\n            type=\"password\"\n            placeholder=\"User Secret...\"\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            onChange={e => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Connect\" kind=\"primary\" icon=\"sign-in\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n      <IconButton\n        title=\"Create\"\n        kind=\"default\"\n        icon=\"plus\"\n        onClick={this.props.onToggle}\n      />\n    </Fragment>\n  );\n\n  private onConnect = () => {\n    const { onClose, onConnect, onError } = this.props;\n    const { id, secret } = this.state;\n    if (id.trim().length === 0) {\n      onError(\"User ID is invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"User secret is invalid\");\n      return;\n    }\n    onConnect(id, secret);\n    onClose();\n  };\n}\n\nexport default ConnectUserModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport ConnectUserModal from \"../../components/Users/ConnectUserModal\";\nimport { connectUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onConnect: (id: string, secret: string) => dispatch(connectUser(id, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"CreateUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(ConnectUserModal);\n","import React, { Component } from \"react\";\n//\nimport { copyToClipboard } from \"../../utils/clipboard\";\nimport IconButton from \"../Common/IconButton\";\nimport { MappedProps } from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype Props = {\n  id: string;\n  label: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n  value: string;\n};\n\nclass SecretField extends Component<Props & MappedProps> {\n  public render = () => {\n    const { id, label, onChange, placeholder, value } = this.props;\n    return (\n      <div className=\"ModalField\">\n        <label htmlFor={id}>{label}</label>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}\n        >\n          <input\n            style={{\n              flexGrow: 1,\n              marginRight: \"0.5rem\"\n            }}\n            id={id}\n            type=\"password\"\n            placeholder={placeholder}\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={value}\n            onChange={e => onChange(e.target.value)}\n          />\n          <IconButton\n            icon=\"clipboard\"\n            onClick={this.onCopyToClipboard}\n            size=\"M\"\n            title={`Copy ${label} to Clipboard`}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  private onCopyToClipboard = async () => {\n    const { onMessage, label, value } = this.props;\n    await copyToClipboard(value);\n    onMessage(`${label} has been copied to clipboard`);\n  };\n}\n\nexport default SecretField;\n","import { connect } from \"react-redux\";\n//\nimport SecretField from \"../../components/Modals/SecretField\";\nimport { RootState } from \"../../reducers\";\nimport { displayMessage } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onMessage: (message: string) => dispatch(displayMessage(\"info\", message))\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecretField);\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/CreateRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateRoomModal extends Component<MappedProps, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4()\n  };\n\n  public componentDidMount() {\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title=\"Create Room\"\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">Room Name</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder=\"Room Name...\"\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={e => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label=\"Room Key\"\n          placeholder=\"Room Key...\"\n          value={secret}\n          onChange={newSecret => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Create\" kind=\"primary\" icon=\"plus\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n    </Fragment>\n  );\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(\"Room name is invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"Room secret is invalid\");\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n  };\n}\n\nexport default CreateRoomModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateRoomModal from \"../../components/Room/CreateRoomModal\";\nimport { createRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createRoom(name, secret)),\n  onError: (message: string) => dispatch(displayError(message))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateRoomModal);\n","import React, { Component, Fragment, RefObject, createRef } from \"react\";\nimport { v4 } from \"uuid\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Users/CreateUserModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport SecretField from \"../../containers/Modals/SecretField\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  name: string;\n  secret: string;\n};\n\nclass CreateUserModal extends Component<MappedProps, State> {\n  private nameRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    name: \"\",\n    secret: v4()\n  };\n\n  public componentDidMount() {\n    if (this.nameRef.current) {\n      this.nameRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { name, secret } = this.state;\n    return (\n      <FormModal\n        title=\"Create User\"\n        onSubmit={this.onCreate}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-name\">User Name</label>\n          <input\n            id=\"modal-name\"\n            type=\"text\"\n            placeholder=\"User Name...\"\n            maxLength={100}\n            minLength={2}\n            required={true}\n            value={name}\n            ref={this.nameRef}\n            onChange={e => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <SecretField\n          id=\"modal-secret\"\n          label=\"User Secret\"\n          placeholder=\"User Secret...\"\n          value={secret}\n          onChange={newSecret => this.setState({ secret: newSecret })}\n        />\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Create\" kind=\"primary\" icon=\"plus\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n      <IconButton\n        title=\"Connect\"\n        kind=\"default\"\n        icon=\"sign-in\"\n        onClick={this.props.onToggle}\n      />\n    </Fragment>\n  );\n\n  private onCreate = () => {\n    const { onClose, onCreate, onError } = this.props;\n    const { name, secret } = this.state;\n    if (name.trim().length === 0) {\n      onError(\"User name is invalid\");\n      return;\n    }\n    if (secret.trim().length === 0) {\n      onError(\"User secret is invalid\");\n      return;\n    }\n    onCreate(name, secret);\n    onClose();\n  };\n}\n\nexport default CreateUserModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport CreateUserModal from \"../../components/Users/CreateUserModal\";\nimport { createUser } from \"../../actions/users\";\nimport { popModal, openModal } from \"../../actions/modals\";\nimport { displayError } from \"../../actions/messages\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onCreate: (name: string, secret: string) =>\n    dispatch(createUser(name, secret)),\n  onError: (message: string) => dispatch(displayError(message)),\n  onToggle: () => dispatch(openModal({ type: \"ConnectUser\", props: null }))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(CreateUserModal);\n","// import Axios from \"axios\";\nimport jsonp from \"jsonp\";\n\n// ------------------------------------------------------------------\n\ntype SearchResult<T> = {\n  data: T[];\n  total: number;\n};\n\nexport type SearchAllResults = {\n  albums: SearchResult<ApiAlbum>;\n  playlists: SearchResult<ApiPlaylist>;\n  tracks: SearchResult<ApiTrack>;\n};\n\nexport type ApiAlbum = {\n  artist: {\n    id: number;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  available: boolean;\n  cover_big: string;\n  cover_small: string;\n  id: number;\n  link: string;\n  nb_tracks: number;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  type: \"album\";\n};\n\nexport type ApiPlaylist = {\n  description: string;\n  id: number;\n  link: string;\n  nb_tracks: number;\n  picture_big: string;\n  picture_small: string;\n  public: true;\n  title: string;\n  tracks?: { data: ApiTrack[] };\n  type: \"playlist\";\n};\n\nexport type ApiTrack = {\n  album: {\n    id: number;\n    title: string;\n    cover_big: string;\n    cover_small: string;\n  };\n  artist: {\n    id: number;\n    name: string;\n    link: string;\n    picture_big: string;\n    picture_small: string;\n  };\n  duration: number;\n  id: number;\n  link: string;\n  preview: string;\n  readable: boolean;\n  title: string;\n  type: \"track\";\n};\n\n// ------------------------------------------------------------------\n\nexport const Api = () => {\n  const API_BASE = \"https://api.deezer.com\";\n\n  const asyncJsonp = <T>(url: string): Promise<T> =>\n    new Promise((resolve, reject) => {\n      jsonp(url, void 0, (err, data) => {\n        if (err) {\n          reject(new Error(err.message));\n        } else {\n          resolve(data);\n        }\n      });\n    });\n\n  const call = async <T>(path: string, qs?: string) => {\n    // We have to rely on jsonp because the Deezer api is CORS restricted\n    const fullpath = qs\n      ? `${API_BASE}/${path}?${qs}&output=jsonp&callback=`\n      : `${API_BASE}/${path}?output=jsonp&callback=`;\n    return await asyncJsonp<T>(fullpath);\n  };\n\n  const search = <T>(type: string, query: string) =>\n    call<SearchResult<T>>(`search/${type}`, `q=${encodeURIComponent(query)}`);\n\n  const load = <T>(type: string, id: string) => call<T>(`/${type}/${id}`);\n\n  const searchAlbums = (query: string) => search<ApiAlbum>(\"album\", query);\n\n  const searchPlaylists = (query: string) =>\n    search<ApiPlaylist>(\"playlist\", query);\n\n  const searchTracks = (query: string) => search<ApiTrack>(\"track\", query);\n\n  const searchAll = async (query: string): Promise<SearchAllResults> => {\n    const [albums, playlists, tracks] = await Promise.all([\n      searchAlbums(query),\n      searchPlaylists(query),\n      searchTracks(query)\n    ]);\n    return { albums, playlists, tracks };\n  };\n\n  const loadAlbum = async (id: string) => {\n    const album = await load<ApiAlbum>(\"album\", id);\n    album.tracks!.data.forEach(track => {\n      track.album = album;\n      track.artist.link = `https://www.deezer.com/artist/${track.artist.id}`;\n    });\n    return album;\n  };\n\n  const loadPlaylist = (id: string) => load<ApiPlaylist>(\"playlist\", id);\n\n  const loadTrack = (id: string) => load<ApiTrack>(\"track\", id);\n\n  return {\n    searchAll,\n    loadAlbum,\n    loadPlaylist,\n    loadTrack\n  };\n};\n\n// ------------------------------------------------------------------\n\nexport const DEFAULT_API = Api();\n","import React, { Fragment, ReactNode } from \"react\";\n//\nimport { MediaType } from \"../../utils/containers\";\n\n// ------------------------------------------------------------------\n\nconst MAX_RESULTS_COUNT = 5;\n\n// ------------------------------------------------------------------\n\nconst SearchResultCategory = <T extends { id: number }>({\n  items,\n  label,\n  cb\n}: {\n  items: T[];\n  label: string;\n  type: MediaType;\n  cb: (item: T) => ReactNode;\n}) =>\n  items.length > 0 ? (\n    <Fragment>\n      <div className=\"ModalField\">\n        <label>{label}</label>\n      </div>\n      {items.slice(0, MAX_RESULTS_COUNT).map(item => (\n        <div key={item.id} className=\"ModalField\">\n          <div className=\"SearchResultItem\">{cb(item)}</div>\n        </div>\n      ))}\n    </Fragment>\n  ) : null;\n\nexport default SearchResultCategory;\n","import React, { Component, Fragment, createRef, RefObject } from \"react\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/SearchModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\nimport { DEFAULT_API, SearchAllResults } from \"../../utils/api\";\nimport { Album, Playlist, Track } from \"./Medias\";\nimport { MediaType } from \"../../utils/containers\";\nimport SearchResultCategory from \"./SearchResultCategory\";\nimport \"./SearchModal.scss\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  mediaId: number;\n  mediaType: MediaType;\n  query: string;\n  results: SearchAllResults;\n};\n\nclass SearchModal extends Component<MappedProps, State> {\n  private queryRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    mediaId: 0,\n    mediaType: \"track\",\n    query: \"\",\n    results: {\n      albums: { data: [], total: 0 },\n      playlists: { data: [], total: 0 },\n      tracks: { data: [], total: 0 }\n    }\n  };\n\n  public componentDidMount() {\n    if (this.queryRef.current) {\n      this.queryRef.current.focus();\n    }\n  }\n\n  public componentWillUnmount() {\n    this.props.onStopPreview();\n  }\n\n  public render = () => (\n    <FormModal\n      className=\"SearchModal\"\n      title=\"Search\"\n      onSubmit={this.onSearch}\n      renderButtons={this.renderButtons}\n    >\n      {this.renderInputs()}\n      {this.renderResults()}\n    </FormModal>\n  );\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Search\" kind=\"primary\" icon=\"search\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n    </Fragment>\n  );\n\n  private renderInputs = () => {\n    const { query } = this.state;\n    return (\n      <div className=\"ModalField\">\n        <input\n          id=\"modal-query\"\n          type=\"text\"\n          placeholder=\"Search...\"\n          maxLength={100}\n          minLength={2}\n          required={true}\n          value={query}\n          ref={this.queryRef}\n          onChange={e => {\n            this.setState({ query: e.target.value });\n          }}\n        />\n      </div>\n    );\n  };\n\n  private renderResults = () => {\n    const { locked } = this.props;\n    const {\n      mediaId,\n      mediaType,\n      results: { albums, playlists, tracks }\n    } = this.state;\n    return (\n      <Fragment>\n        <SearchResultCategory\n          label=\"Albums\"\n          type=\"album\"\n          items={albums.data}\n          cb={album => (\n            <Album\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Add\"\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"album\", album.id)}\n                  />\n                ) : null\n              }\n              album={album}\n              playable={true}\n              playing={mediaType === \"album\" && mediaId === album.id}\n              onPlay={() => this.onStartPreview(\"album\", album.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n        <SearchResultCategory\n          label=\"Playlists\"\n          type=\"playlist\"\n          items={playlists.data}\n          cb={playlist => (\n            <Playlist\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Add\"\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"playlist\", playlist.id)}\n                  />\n                ) : null\n              }\n              playlist={playlist}\n              playable={true}\n              playing={mediaType === \"playlist\" && mediaId === playlist.id}\n              onPlay={() => this.onStartPreview(\"playlist\", playlist.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n        <SearchResultCategory\n          label=\"Tracks\"\n          type=\"track\"\n          items={tracks.data}\n          cb={track => (\n            <Track\n              actions={\n                !locked ? (\n                  <IconButton\n                    title=\"Add\"\n                    icon=\"plus\"\n                    onClick={() => this.onSelect(\"track\", track.id)}\n                  />\n                ) : null\n              }\n              track={track}\n              playable={true}\n              playing={mediaType === \"track\" && mediaId === track.id}\n              onPlay={() => this.onStartPreview(\"track\", track.id)}\n              onStop={() => this.onStopPreview()}\n            />\n          )}\n        />\n      </Fragment>\n    );\n  };\n\n  private onSearch = async () => {\n    const { query } = this.state;\n    if (query.trim().length > 0) {\n      this.setState({ results: await DEFAULT_API.searchAll(query) });\n    }\n  };\n\n  private onSelect = (mediaType: MediaType, mediaId: number) =>\n    this.props.onSelect(mediaType, mediaId.toString());\n\n  private onStartPreview = (mediaType: MediaType, mediaId: number) => {\n    this.props.onStartPreview(mediaType, mediaId.toString());\n    this.setState({\n      mediaId,\n      mediaType\n    });\n  };\n\n  private onStopPreview = () => {\n    this.props.onStopPreview();\n    this.setState({\n      mediaId: 0,\n      mediaType: \"track\"\n    });\n  };\n}\n\nexport default SearchModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport SearchModal from \"../../components/Room/SearchModal\";\nimport { popModal } from \"../../actions/modals\";\nimport { previewContainer } from \"../../actions/containers\";\nimport { queueTracks } from \"../../actions/rooms\";\nimport { startPreview, stopPreview } from \"../../actions/player\";\nimport { MediaType } from \"../../utils/containers\";\nimport { isRoomLocked } from \"../../selectors/rooms\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({\n  locked: isRoomLocked(state)\n});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onSelect: (mediaType: MediaType, mediaId: string) =>\n    dispatch(\n      \"track\" === mediaType\n        ? queueTracks(\"album\", \"\", mediaId)\n        : queueTracks(mediaType, mediaId, \"\")\n    ),\n  onStartPreview: (mediaType: MediaType, mediaId: string) => {\n    dispatch(\n      \"track\" === mediaType\n        ? startPreview(mediaId)\n        : previewContainer(mediaType, mediaId)\n    );\n  },\n  onStopPreview: () => dispatch(stopPreview())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(SearchModal);\n","import React, { Component, Fragment, createRef, RefObject } from \"react\";\n//\nimport FormModal from \"../Modals/FormModal\";\nimport { MappedProps } from \"../../containers/Room/UnlockRoomModal\";\nimport IconButton, { CancelButton } from \"../Common/IconButton\";\n\n// ------------------------------------------------------------------\n\ntype State = {\n  secret: string;\n};\n\nclass UnlockRoomModal extends Component<MappedProps, State> {\n  private secretRef: RefObject<HTMLInputElement> = createRef();\n\n  public readonly state: State = {\n    secret: \"\"\n  };\n\n  public componentDidMount() {\n    if (this.secretRef.current) {\n      this.secretRef.current.focus();\n    }\n  }\n\n  public render = () => {\n    const { secret } = this.state;\n    return (\n      <FormModal\n        title=\"Unlock Room\"\n        onSubmit={this.onUnlock}\n        renderButtons={this.renderButtons}\n      >\n        <div className=\"ModalField\">\n          <label htmlFor=\"modal-secret\">Room Key</label>\n          <input\n            id=\"modal-secret\"\n            type=\"password\"\n            placeholder=\"Room Key...\"\n            maxLength={36}\n            minLength={36}\n            required={true}\n            value={secret}\n            ref={this.secretRef}\n            onChange={e => {\n              this.setState({ secret: e.target.value });\n            }}\n          />\n        </div>\n      </FormModal>\n    );\n  };\n\n  private renderButtons = () => (\n    <Fragment>\n      <IconButton title=\"Join\" kind=\"primary\" icon=\"sign-in\" type=\"submit\" />\n      <CancelButton onClick={this.props.onClose} />\n    </Fragment>\n  );\n\n  private onUnlock = () => {\n    const { onClose, onUnlock } = this.props;\n    onUnlock(this.state.secret);\n    onClose();\n  };\n}\n\nexport default UnlockRoomModal;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport UnlockRoomModal from \"../../components/Room/UnlockRoomModal\";\nimport { unlockRoom } from \"../../actions/rooms\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onClose: () => dispatch(popModal()),\n  onUnlock: (secret: string) => dispatch(unlockRoom(secret))\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(UnlockRoomModal);\n","import React, { Component, MouseEvent } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/Modals\";\nimport { ModalPrereq } from \"../../actions/modals\";\nimport ConnectUserModal from \"../../containers/Users/ConnectUserModal\";\nimport CreateRoomModal from \"../../containers/Room/CreateRoomModal\";\nimport CreateUserModal from \"../../containers/Users/CreateUserModal\";\nimport SearchModal from \"../../containers/Room/SearchModal\";\nimport UnlockRoomModal from \"../../containers/Room/UnlockRoomModal\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst TransitionTimeout = 300;\n\n// ------------------------------------------------------------------\n\nexport const getModal = (prereq: ModalPrereq) => {\n  switch (prereq.type) {\n    case \"ConnectUser\":\n      return <ConnectUserModal />;\n    case \"CreateRoom\":\n      return <CreateRoomModal />;\n    case \"CreateUser\":\n      return <CreateUserModal />;\n    case \"Search\":\n      return <SearchModal />;\n    case \"UnlockRoom\":\n      return <UnlockRoomModal />;\n  }\n};\n\n// ------------------------------------------------------------------\n\ntype State = {\n  curr_prereq?: ModalPrereq;\n  prev_prereq?: ModalPrereq; // Keeping prev modal prereq for modal fadeout\n};\n\nclass Modals extends Component<MappedProps, State> {\n  public readonly state: State = {\n    curr_prereq: void 0,\n    prev_prereq: void 0\n  };\n\n  public componentDidMount = () => {\n    document.addEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentWillUnmount = () => {\n    document.removeEventListener(\"keydown\", this.onKeyDown);\n  };\n\n  public componentDidUpdate = (prevProps: MappedProps) => {\n    const oldPrereq = prevProps.prereq;\n    const newPrereq = this.props.prereq;\n    if (oldPrereq !== newPrereq) {\n      // Hide current modal before showing new one (if there is a new one)\n      this.setState(\n        {\n          curr_prereq: void 0,\n          prev_prereq: oldPrereq\n        },\n        () => {\n          if (newPrereq) {\n            setTimeout(() => {\n              this.setState({\n                curr_prereq: newPrereq\n              });\n            }, TransitionTimeout);\n          }\n        }\n      );\n    }\n  };\n\n  public render = () => {\n    const { curr_prereq, prev_prereq } = this.state;\n    const prereq = curr_prereq || prev_prereq;\n    let modal = null;\n    if (prereq) {\n      modal = getModal(prereq);\n    }\n    return (\n      <CSSTransition\n        in={!!curr_prereq}\n        timeout={TransitionTimeout}\n        unmountOnExit={true}\n      >\n        <div className=\"ModalOverlay\" onClick={this.onClickOverlay}>\n          {modal && (\n            <div\n              className=\"ModalWrapper\"\n              role=\"dialog\"\n              onClick={this.onClickWrapper}\n            >\n              {modal}\n            </div>\n          )}\n        </div>\n      </CSSTransition>\n    );\n  };\n\n  private onClickOverlay = (event: MouseEvent) => {\n    // Clicking overlay will close current modal\n    event.stopPropagation();\n    this.props.onCloseModal();\n  };\n\n  private onClickWrapper = (event: MouseEvent) => {\n    // Clicking wrapper modal will not progagate to overlay which would close current modal\n    event.stopPropagation();\n  };\n\n  private onKeyDown = (e: KeyboardEvent) => {\n    if (e.keyCode === 27) {\n      this.props.onCloseModal();\n    }\n  };\n}\n\nexport default Modals;\n","import { connect } from \"react-redux\";\n//\nimport Modals from \"../../components/Modals\";\nimport { RootState } from \"../../reducers\";\nimport { popModal } from \"../../actions/modals\";\n\n// ------------------------------------------------------------------\n\nconst mapStateToProps = (state: RootState) => ({\n  prereq:\n    state.modals.stack.length > 0\n      ? state.modals.stack[state.modals.stack.length - 1]\n      : void 0\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onCloseModal: () => dispatch(popModal())\n});\n\nexport type MappedProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modals);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n//\nimport { MappedProps } from \"../../containers/App/Messages\";\nimport { Message } from \"../../utils/messages\";\nimport \"./Messages.scss\";\n\n// ------------------------------------------------------------------\n\nclass Messages extends React.Component<MappedProps> {\n  public render = () => (\n    <div className=\"Messages\">\n      <TransitionGroup>\n        {this.props.messages.map(message => this.renderMessage(message))}\n      </TransitionGroup>\n    </div>\n  );\n\n  public renderMessage(message: Message) {\n    return (\n      <CSSTransition\n        key={message.id}\n        classNames=\"Message\"\n        timeout={{ enter: 200, exit: 200 }}\n      >\n        <div className={classNames(\"Message\", \"Message-\" + message.type)}>\n          {message.text}\n        </div>\n      </CSSTransition>\n    );\n  }\n}\n\nexport default Messages;\n","import { connect } from \"react-redux\";\n//\nimport { RootState } from \"../../reducers\";\nimport Messages from \"../../components/App/Messages\";\n\n// ------------------------------------------------------------------\n\nexport type MappedProps = ReturnType<typeof mapStateToProps>;\n\nconst mapStateToProps = (state: RootState) => ({\n  messages: state.messages.sort((m1, m2) => m1.stamp - m2.stamp)\n});\n\nexport default connect(mapStateToProps)(Messages);\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../../containers/App\";\nimport Room from \"../../containers/Room\";\nimport Splash from \"../../containers/Splash\";\nimport Modals from \"../../containers/Modals\";\nimport Messages from \"../../containers/App/Messages\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nclass App extends Component<MappedProps> {\n  public componentDidMount = async () => {\n    this.props.onReconnect();\n  };\n\n  public render = () => {\n    return (\n      <div className=\"App\">\n        <Modals />\n        <Switch>\n          <Route exact={true} path=\"/room/:room_id\" component={Room} />\n          <Route exact={true} path=\"/\" component={Splash} />\n          <Redirect to=\"/\" />\n        </Switch>\n        <Messages />\n      </div>\n    );\n  };\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../../reducers\";\nimport App from \"../../components/App\";\nimport { reconnectUser } from \"../../actions/users\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({\n  onReconnect: () => dispatch(reconnectUser())\n});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(App);\n","// ------------------------------------------------------------------\n\nlet AUDIO_CONTEXT: AudioContext | null = null;\n\nconst getContext = () => {\n  if (!AUDIO_CONTEXT) {\n    AUDIO_CONTEXT = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n  }\n  return AUDIO_CONTEXT;\n};\n\nconst decodeAudioData = (encodedBuffer: ArrayBuffer): Promise<AudioBuffer> =>\n  new Promise((resolve, reject) =>\n    getContext().decodeAudioData(encodedBuffer, resolve, reject)\n  );\n\n// ------------------------------------------------------------------\n\n// Fix Safari and iOS Audio Context\n(() => {\n  const fixAudioContext = () => {\n    document.removeEventListener(\"click\", fixAudioContext);\n    document.removeEventListener(\"touchstart\", fixAudioContext);\n    console.log(\"Fixing audio context...\");\n    const context = getContext();\n    // Create empty buffer, connect to output, play sound\n    var buffer = context.createBuffer(1, 1, 22050);\n    var source = context.createBufferSource();\n    source.buffer = buffer;\n    source.connect(context.destination);\n    source.start(0);\n  };\n  document.addEventListener(\"click\", fixAudioContext);\n  document.addEventListener(\"touchstart\", fixAudioContext);\n})();\n\n// ------------------------------------------------------------------\n\nexport type PlayerCallbacks = {\n  onStart: () => void;\n  onStop: () => void;\n};\n\nexport const Player = () => {\n  let analyserNode: AnalyserNode | null = null;\n  let gainNode: GainNode | null = null;\n  let node: AudioNode | null = null;\n\n  const getNode = () => {\n    if (!node) {\n      const context = getContext();\n      node = context.destination;\n\n      gainNode = context.createGain();\n      gainNode.gain.value = 1.0;\n      gainNode.connect(node);\n      node = gainNode;\n\n      analyserNode = context.createAnalyser();\n      analyserNode.fftSize = 128;\n      // analyserNode.minDecibels = -90;\n      // analyserNode.maxDecibels = -10;\n      analyserNode.connect(node);\n      node = analyserNode;\n    }\n    return node;\n  };\n\n  let buffer: AudioBuffer | null = null;\n  let bufferUrl: string = \"\";\n\n  let sourceNode: AudioBufferSourceNode | null = null;\n  let sourceNodeStartTime = 0;\n  let playCount = 0;\n\n  const isPlaying = () => playCount > 0;\n\n  // Percentage [0, 1]\n  const getPosition = () => {\n    if (buffer && sourceNode) {\n      return (\n        (getContext().currentTime - sourceNodeStartTime) / buffer?.duration\n      );\n    }\n    return 0;\n  };\n\n  const loadAudioBuffer = (url: string): Promise<AudioBuffer> =>\n    new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.open(\"GET\", url, true);\n      req.responseType = \"arraybuffer\";\n      req.addEventListener(\n        \"error\",\n        () => reject(new Error(\"Audio buffer loading failed\")),\n        false\n      );\n      req.addEventListener(\n        \"load\",\n        async () => {\n          try {\n            resolve(await decodeAudioData(req.response as ArrayBuffer));\n          } catch (error) {\n            console.log(\"An error occurred while decoding audio data\");\n            reject(error);\n          }\n        },\n        false\n      );\n      req.send();\n    });\n\n  const play = async (url: string, offset: number) => {\n    if (bufferUrl !== url) {\n      console.log(\"Loading audio...\", { url });\n      buffer = await loadAudioBuffer(url);\n      bufferUrl = url;\n    }\n    stop();\n    playCount++;\n    console.log(\"Starting audio...\");\n    sourceNode = getContext().createBufferSource();\n    sourceNode.buffer = buffer;\n    sourceNode.loop = false;\n    sourceNode.loopStart = 0;\n    sourceNode.loopEnd = 0;\n    sourceNode.onended = () => {\n      console.log(\"Audio terminated...\");\n      playCount--;\n    };\n    sourceNode.playbackRate.value = 1.0;\n    sourceNode.connect(getNode());\n    sourceNode.start(0, offset); // A new BufferSource must be created for each start\n    sourceNodeStartTime = getContext().currentTime;\n  };\n\n  const stop = () => {\n    if (null !== sourceNode) {\n      console.log(\"Stopping audio...\");\n      sourceNode.stop();\n      sourceNode = null;\n      sourceNodeStartTime = 0;\n    }\n  };\n\n  return {\n    analyserNode,\n    gainNode,\n    getPosition,\n    isPlaying,\n    play,\n    stop\n  };\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n//\nimport { rootReducer } from \"./reducers\";\nimport App from \"./containers/App\";\nimport { DEFAULT_API } from \"./utils/api\";\nimport { Player } from \"./utils/player\";\nimport \"./index.scss\";\n\n// ------------------------------------------------------------------\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\" ? composeWithDevTools({}) : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(\n      thunk.withExtraArgument({\n        api: DEFAULT_API,\n        queuePlayer: Player(),\n        previewPlayer: Player()\n      })\n    )\n  )\n);\n\n// ------------------------------------------------------------------\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Route path=\"/\" component={App} />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}