{"version":3,"sources":["reducers/rooms.ts","reducers/users.ts","reducers/index.ts","components/Party.tsx","containers/Party.ts","components/Splash.tsx","containers/Splash.ts","components/App.tsx","containers/App.ts","index.tsx"],"names":["INITIAL_STATE","fetching","error","items","rootReducer","combineReducers","rooms","state","action","type","payload","users","Party","Component","componentDidMount","a","render","className","this","props","match","params","room_id","to","withRouter","connect","ownProps","dispatch","Splash","App","exact","path","component","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"yOAWA,MAAMA,EAAuB,CAC3BC,UAAU,EACVC,MAAO,KACPC,MAAO,ICHHH,EAAuB,CAC3BC,UAAU,EACVC,MAAO,KACPC,MAAO,ICRIC,EAAcC,0BAAgB,CACzCC,MFUuD,CACvDC,EAAQP,EACRQ,KAEA,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,eACFF,EADL,CAEEN,UAAU,EACVC,MAAO,OAEX,IAAK,gBACH,OAAO,eACFK,EADL,CAEEN,UAAU,EACVC,MAAO,KACPC,MAAM,eAAMI,EAAMJ,MAAb,GAAuBK,EAAOE,WAGvC,IAAK,cACH,OAAO,eACFH,EADL,CAEEN,UAAU,EACVC,MAAOM,EAAOE,UAElB,IAAK,cACH,OAAOV,EACT,QACE,OAAOO,IErCXI,MDSuD,CACvDJ,EAAQP,EACRQ,KAEA,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,eACFF,EADL,CAEEN,UAAU,EACVC,MAAO,OAEX,IAAK,gBACH,OAAO,eACFK,EADL,CAEEN,UAAU,EACVC,MAAO,KACPC,MAAM,eAAMI,EAAMJ,MAAb,GAAuBK,EAAOE,WAGvC,IAAK,cACH,OAAO,eACFH,EADL,CAEEN,UAAU,EACVC,MAAOM,EAAOE,UAElB,IAAK,cACH,OAAOV,EACT,QACE,OAAOO,M,4BElCb,MAAMK,UAAcC,YAAgC,eAAD,oBAC1CC,kBAD0C,sBACtB,sBAAAC,EAAA,0FADsB,KAG1CC,OAAS,IAEZ,yBAAKC,UAAU,SAAf,SACSC,KAAKC,MAAMC,MAAMC,OAAOC,QADjC,IAC0C,kBAAC,IAAD,CAAMC,GAAG,KAAT,YAMjCC,kBAAWZ,GCNXa,kBATM,CAAClB,EAAkBmB,KAC/B,IAGgBC,IAAD,IAKTF,CAAuCb,GCVtD,MAAMgB,UAAef,YAAwB,eAAD,oBACnCC,kBADmC,sBACf,sBAAAC,EAAA,0FADe,KAGnCC,OAAS,IAEZ,yBAAKC,UAAU,UAAf,UACS,kBAAC,IAAD,CAAMM,GAAG,cAAT,WAMAK,QCJAH,kBAPOlB,IAAD,IAEIoB,IAAD,IAKTF,CAAuCG,GCNtD,MAAMC,UAAYhB,YAAwB,eAAD,oBAChCC,kBADgC,sBACZ,sBAAAC,EAAA,0FADY,KAGhCC,OAAS,IAEZ,yBAAKC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOa,OAAO,EAAMC,KAAK,kBAAkBC,UAAWpB,IACtD,kBAAC,IAAD,CAAOkB,OAAO,EAAMC,KAAK,IAAIC,UAAWJ,IACxC,kBAAC,IAAD,CAAUL,GAAG,SAORM,QCVAJ,kBAPOlB,IAAD,IAEIoB,IAAD,IAKTF,CAAuCI,GCFtD,MAAMI,EAC+DC,UAE/DC,EAAQC,sBACZhC,EACA6B,EAAiBI,0BAAgBC,OAGnCC,SACE,gBAAC,IAAD,CAAUJ,MAAOA,GACf,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAOJ,KAAK,IAAIC,UAAWH,MAG/BW,SAASC,eAAe,W","file":"static/js/main.4fd3c5b7.chunk.js","sourcesContent":["import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { RoomsAction } from \"../actions/rooms\";\nimport { Rooms } from \"../utils/rooms\";\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  items: Rooms;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  items: {}\n};\n\nexport const roomsReducer: Reducer<State, RoomsAction> = (\n  state = INITIAL_STATE,\n  action: RoomsAction\n): State => {\n  switch (action.type) {\n    case \"rooms/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"rooms/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null,\n        items: { ...state.items, ...action.payload }\n      };\n    }\n    case \"rooms/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"rooms/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { Reducer } from \"redux\";\nimport { AxiosError } from \"axios\";\nimport { UsersAction } from \"../actions/users\";\nimport { Users } from \"../utils/users\";\n\nexport type State = {\n  fetching: boolean;\n  error: null | AxiosError;\n  items: Users;\n};\n\nconst INITIAL_STATE: State = {\n  fetching: false,\n  error: null,\n  items: {}\n};\n\nexport const usersReducer: Reducer<State, UsersAction> = (\n  state = INITIAL_STATE,\n  action: UsersAction\n): State => {\n  switch (action.type) {\n    case \"users/FETCHING\":\n      return {\n        ...state,\n        fetching: true,\n        error: null\n      };\n    case \"users/FETCHED\": {\n      return {\n        ...state,\n        fetching: false,\n        error: null,\n        items: { ...state.items, ...action.payload }\n      };\n    }\n    case \"users/ERROR\":\n      return {\n        ...state,\n        fetching: false,\n        error: action.payload\n      };\n    case \"users/RESET\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { roomsReducer as rooms } from \"./rooms\";\nimport { usersReducer as users } from \"./users\";\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const rootReducer = combineReducers({\n  rooms,\n  users\n});\n","import React, { Component } from \"react\";\nimport { withRouter, RouteComponentProps, Link } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../containers/Party\";\n\n// ------------------------------------------------------------------\n\nexport type Props = RouteComponentProps<{\n  room_id: string;\n}>;\n\nclass Party extends Component<Props & MappedProps> {\n  public componentDidMount = async () => {};\n\n  public render = () => {\n    return (\n      <div className=\"Party\">\n        Party {this.props.match.params.room_id} <Link to=\"/\">Splash</Link>\n      </div>\n    );\n  };\n}\n\nexport default withRouter(Party);\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../reducers\";\nimport Party, { Props } from \"../components/Party\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState, ownProps: Props) => {\n  return {};\n};\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Party);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../containers/Splash\";\n\n// ------------------------------------------------------------------\n\nclass Splash extends Component<MappedProps> {\n  public componentDidMount = async () => {};\n\n  public render = () => {\n    return (\n      <div className=\"Splash\">\n        Splash <Link to=\"/party/xxx\">Party</Link>\n      </div>\n    );\n  };\n}\n\nexport default Splash;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../reducers\";\nimport Splash from \"../components/Splash\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(Splash);\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n//\nimport { MappedProps } from \"../containers/App\";\nimport Party from \"../containers/Party\";\nimport Splash from \"../containers/Splash\";\n\n// ------------------------------------------------------------------\n\nclass App extends Component<MappedProps> {\n  public componentDidMount = async () => {};\n\n  public render = () => {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact={true} path=\"/party/:room_id\" component={Party} />\n          <Route exact={true} path=\"/\" component={Splash} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\n//\nimport { RootState } from \"../reducers\";\nimport App from \"../components/App\";\n\n// ------------------------------------------------------------------\n\nconst stateToProps = (state: RootState) => ({});\n\nconst dispatchToProps = (dispatch: ThunkDispatch<RootState, any, any>) => ({});\n\nexport type MappedProps = ReturnType<typeof stateToProps> &\n  ReturnType<typeof dispatchToProps>;\n\nexport default connect(stateToProps, dispatchToProps)(App);\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n//\nimport { rootReducer } from \"./reducers\";\nimport App from \"./containers/App\";\n\n// ------------------------------------------------------------------\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\" ? composeWithDevTools({}) : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Route path=\"/\" component={App} />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}